{"version":3,"sources":["alpha.js","class.js","event.js","event-dispatcher.js","model-regex.js","model-constraints.js","model.js","model-list.js","schema.js","flattenable.js","collection.js","template.js","main.js"],"names":["Rin","module","exports","invokeLater","fn","setTimeout","wait","millis","Promise","resolve","reject","typeOf","o","Array","toString","toLowerCase","isArrayOrObject","clone","elem","i","length","push","merge","output","objs","arr","j","obj","field","override","partialCompare","full","partial","arrayFind","getObject","indexOf","container","value","forceArray","escape","str","replace","ensureTypeOf","m","isInstanceOf","prototype","className","isTypeOf","serialize","JSON","stringify","deserialize","s","parse","hookAppend","object","functionName","newFunction","conditional","oldFunction","bind","args","unhook","hookPrepend","require","Class","_class","_super","__ctor","__dtor","constructor","_initSuperRefs","_newSuper","_prot","inherit","proto","self","test","_extend","base","protos","apply","call","classInit","extend","create","source","name","_async","list","next","ret","original","eventName","eventArgs","cbHandler","cbContext","reset","setSource","resume","silent","handler","context","data","global","from","event","enqueue","evt","Event","listeners","namespace","setNamespace","addEventListener","split","ns","removeEventListener","k","splice","prepareEvent","concat","silence","dispatchEvent","email","url","urlNoProt","uname","text","utext","Regex","_getref","substr","get","eval","type","model","ctval","isNaN","parseInt","Error","parseFloat","mclass","ensure","cls","arrayof","arraynull","remove","arraycompliant","isCompliant","required","minlen","maxlen","minval","maxval","mincount","maxcount","pattern","inset","RegExp","join","upper","toUpperCase","lower","EventDispatcher","_Model","defaults","constraints","changedList","_silent","_level","def","undefined","init","set","arguments","update","ready","nsilent","_validate","nvalue","ctname","Constraints","e","message","_set","constraint","_propertyEvent","prev","direct","temp","old","level","n","force","fields","has","flatten","getInt","getFloat","getBool","getReference","safe","rsafe","classPath","keys","ct","validate","observe","property","unobserve","Model","itemt","contents","itemId","nextId","_eventGroup","Date","now","_bind","iid","item","_onItemEvent","_unbind","id","clear","setData","getData","getAt","index","removeAt","setAt","updateAt","position","pop","unshift","shift","find","retObject","Schema","Type","tmp","unflatten","String","Integer","Number","precision","_precision","_round","Math","pow","Bool","compact","_compact","SharedString","strings_map","strings","itemType","_debug","debug","v","of","Object","properties","defvalue","symbolic","classConstructor","_constructor","Property","is","Map","typeSchema","assign","onUnflattened","Flattenable","itemTypeSchema","items","add","onItemRemoved","sort","desc","a","b","findItem","inc","exc","getItems","isEmpty","relative","first","last","addAt","onBeforeItemAdded","onItemAdded","forEach","callback","forEachCall","method","forEachRev","forEachRevCall","Template","strict","parseTemplate","template","sym_open","sym_close","is_tpl","root","nflush","flush","state","count","parts","mparts","nparts","emit","trim","map","match","unescape","r","clean","expand","mode","quote","functions","failed","f","compile","register","getNamedValues","expanded","key","startsWith","endsWith","fromCharCode","charCodeAt","abs","x","ref","start","attr","values","var_name","case_value","to","step","tpl","console","log","err","arrayMode","ModelList","Collection"],"mappings":"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","file":"rin.js","sourceRoot":"..","sourcesContent":["/*\r\n**\trin/alpha\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nlet Rin = module.exports = { };\r\n\r\n/**\r\n**\tInvokes the specified function 'fn' 10ms later.\r\n**\r\n**\t>> void invokeLater (function fn);\r\n*/\r\nRin.invokeLater = function (fn)\r\n{\r\n\tif (fn) setTimeout (function() { fn(); }, 10);\r\n};\r\n\r\n\r\n/**\r\n**\tWaits for the specified amount of milliseconds. Returns a Promise.\r\n**\r\n**\t>> Promise wait (int millis);\r\n*/\r\nRin.wait = function (millis)\r\n{\r\n\treturn new Promise(function (resolve, reject) {\r\n\t\tsetTimeout (resolve, millis);\r\n\t});\r\n};\r\n\r\n\r\n/**\r\n**\tReturns the type of an element 'o', properly detects arrays and null types. The return string is always in lowercase.\r\n**\r\n**\t>> string typeOf (any o);\r\n*/\r\nRin.typeOf = function (o)\r\n{\r\n\tif (o instanceof Array)\r\n\t\treturn \"array\";\r\n\r\n\tif (o === null)\r\n\t\treturn \"null\";\r\n\r\n\treturn (typeof(o)).toString().toLowerCase();\r\n};\r\n\r\n\r\n/**\r\n**\tReturns boolean indicating if the type of the element is an array or an object.\r\n**\r\n**\t>> bool isArrayOrObject (any o);\r\n*/\r\nRin.isArrayOrObject = function (o)\r\n{\r\n\tswitch (Rin.typeOf(o))\r\n\t{\r\n\t\tcase \"array\": case \"object\":\r\n\t\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n};\r\n\r\n\r\n/**\r\n**\tCreates a clone (deep copy) of the specified element. The element can be an array, an object or a primitive type.\r\n**\r\n**\t>> T clone (T elem);\r\n*/\r\nRin.clone = function (elem)\r\n{\r\n\tvar o;\r\n\r\n\tif (Rin.typeOf(elem) == \"array\")\r\n\t{\r\n\t\to = [ ];\r\n\r\n\t\tfor (let i = 0; i < elem.length; i++)\r\n\t\t\to.push (Rin.clone(elem[i]));\r\n\t}\r\n\telse if (Rin.typeOf(elem) == \"object\")\r\n\t{\r\n\t\to = { };\r\n\r\n\t\tfor (let i in elem)\r\n\t\t\to[i] = Rin.clone(elem[i]);\r\n\t}\r\n\telse\r\n\t{\r\n\t\to = elem;\r\n\t}\r\n\r\n\treturn o;\r\n};\r\n\r\n\r\n/**\r\n**\tMerges all given elements into the first one, object fields are cloned.\r\n**\r\n**\t>> T merge (T... elems)\r\n*/\r\nRin.merge = function (output, ...objs)\r\n{\r\n\tif (Rin.typeOf(output) == \"array\")\r\n\t{\r\n\t\tfor (let i = 0; i < objs.length; i++)\r\n\t\t{\r\n\t\t\tlet arr = objs[i];\r\n\r\n\t\t\tif (Rin.typeOf(arr) != \"array\")\r\n\t\t\t{\r\n\t\t\t\toutput.push(arr);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tfor (let j = 0; j < arr.length; j++)\r\n\t\t\t\t{\r\n\t\t\t\t\toutput.push(Rin.clone(arr[j]));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse if (Rin.typeOf(output) == \"object\")\r\n\t{\r\n\t\tfor (let i = 0; i < objs.length; i++)\r\n\t\t{\r\n\t\t\tlet obj = objs[i];\r\n\t\t\tif (Rin.typeOf(obj) != \"object\") continue;\r\n\r\n\t\t\tfor (let field in obj)\r\n\t\t\t{\r\n\t\t\t\tif (Rin.isArrayOrObject(obj[field]))\r\n\t\t\t\t{\r\n\t\t\t\t\tif (field in output)\r\n\t\t\t\t\t\tRin.merge(output[field], obj[field]);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\toutput[field] = Rin.clone(obj[field]);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\toutput[field] = obj[field];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn output;\r\n};\r\n\r\n\r\n/**\r\n**\tAssigns all fields from the specified objects into the first one.\r\n**\r\n**\t>> object override (object output, object... objs)\r\n*/\r\nRin.override = function (output, ...objs)\r\n{\r\n\tfor (let i = 0; i < objs.length; i++)\r\n\t{\r\n\t\tfor (let j in objs[i])\r\n\t\t{\r\n\t\t\toutput[j] = objs[i][j];\r\n\t\t}\r\n\t}\r\n\r\n\treturn output;\r\n};\r\n\r\n\r\n/*\r\n**\tCompares two objects and returns `true` if all properties in \"partial\" find a match in \"full\".\r\n*/\r\nRin.partialCompare = function (full, partial)\r\n{\r\n\tif (full == null || partial == null) return false;\r\n\r\n\tif (full === partial)\r\n\t\treturn true;\r\n\r\n\tfor (var i in partial)\r\n\t{\r\n\t\tif (full[i] != partial[i])\r\n\t\t\treturn false;\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\n\r\n/*\r\n**\tPerforms a partial search for an object (o) in the specified array and returns its index or `false` if the\r\n**\tobject was not found. When `getObject` is set to `true` the object will be returned instead of an index, or\r\n**\t`null` if not found.\r\n*/\r\nRin.arrayFind = function (arr, o, getObject)\r\n{\r\n\tfor (var i = 0; arr && i < arr.length; i++)\r\n\t{\r\n\t\tif (this.partialCompare (arr[i], o))\r\n\t\t\treturn getObject ? arr[i] : i;\r\n\t}\r\n\r\n\treturn getObject ? null : false;\r\n};\r\n\r\n\r\n/*\r\n**\tTraverses the given object attempting to find the index/key that does an identical match with the specified value,\r\n**\tif not found returns -1, otherwise the index/key where the value was found.\r\n**\r\n**\t>> int indexOf (array container, T value)\r\n**\t>> string indexOf (object container, T value)\r\n*/\r\nRin.indexOf = function (container, value, forceArray=false)\r\n{\r\n\tif (forceArray)\r\n\t{\r\n\t\tfor (let i = 0; i < container.length; i++)\r\n\t\t{\r\n\t\t\tif (container[i] === value)\r\n\t\t\t\treturn i;\r\n\t\t}\r\n\t\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tfor (let i in container)\r\n\t{\r\n\t\tif (container[i] === value)\r\n\t\t\treturn i;\r\n\t}\r\n\r\n\treturn -1;\r\n};\r\n\r\n\r\n/**\r\n**\tEscapes a string using HTML entities.\r\n**\r\n**\t>> string escape (string str);\r\n*/\r\nRin.escape = function (str)\r\n{\r\n\treturn (str+\"\").replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n};\r\n\r\n\r\n/**\r\n**\tVerifies if the specified object is of class `m`, if not it will create a new instance of `m` passing `o` as parameter.\r\n**\r\n**\t>> object ensureTypeOf (class m, object o);\r\n*/\r\nRin.ensureTypeOf = function (m, o)\r\n{\r\n\tif (!o || !m || o instanceof m)\r\n\t\treturn o;\r\n\r\n\tif (o.isInstanceOf && m.prototype.className)\r\n\t{\r\n\t\tif (o.isInstanceOf (m.prototype.className))\r\n\t\t\treturn o;\r\n\t}\r\n\r\n\treturn new m (o);\r\n};\r\n\r\n\r\n/**\r\n**\tVerifies if the specified object is of class `m`, returns boolean.\r\n**\r\n**\t>> bool isTypeOf (class m, object o);\r\n*/\r\nRin.isTypeOf = function (m, o)\r\n{\r\n\tif (!o || !m || o instanceof m)\r\n\t\treturn true;\r\n\r\n\tif (o.isInstanceOf && m.prototype.className)\r\n\t{\r\n\t\tif (o.isInstanceOf (m.prototype.className))\r\n\t\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n};\r\n\r\n\r\n/**\r\n**\tSerializes an object and returns its JSON string representation.\r\n**\r\n**\t>> string serialize (object o);\r\n*/\r\nRin.serialize = function (o)\r\n{\r\n\treturn JSON.stringify(o);\r\n};\r\n\r\n\r\n/**\r\n**\tDeserializes a string in JSON format and returns the result.\r\n**\r\n**\t>> any deserialize (string s);\r\n*/\r\nRin.deserialize = function (s)\r\n{\r\n\treturn JSON.parse(s);\r\n};\r\n\r\n\r\n/**\r\n**\tChains a new function to an existing one on some object, such that invoking the function on the object will cause\r\n**\tboth functions to run (order would be oldFunction then newFunction).\r\n**\r\n**\tIf the `conditional` flag is set to `true`, the second function will be run only if the first one returns non-false.\r\n**\tReturns an object with a single method 'unhook' which will revert the changes to leave only the original function.\r\n**\r\n**\t>> object{function unhook} hook (Object object, String functionName, function newFunction, bool conditional=false);\r\n*/\r\nRin.hookAppend = function (object, functionName, newFunction, conditional=true)\r\n{\r\n\tconst oldFunction = object[functionName].bind(object);\r\n\r\n\tif (conditional)\r\n\t{\r\n\t\tobject[functionName] = (...args) => {\r\n\t\t\tif (oldFunction (...args) !== false)\r\n\t\t\t\treturn newFunction (...args);\r\n\t\t};\r\n\t}\r\n\telse\r\n\t{\r\n\t\tobject[functionName] = (...args) => {\r\n\t\t\toldFunction (...args);\r\n\t\t\treturn newFunction (...args);\r\n\t\t};\r\n\t}\r\n\r\n\treturn { \r\n\t\tunhook: function() {\r\n\t\t\tobject[functionName] = oldFunction;\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\n/**\r\n**\tChains a new function to an existing one on some object, such that invoking the function on the object will cause\r\n**\tboth functions to run (order would be oldFunction then newFunction).\r\n**\r\n**\tIf the `conditional` flag is set to `true`, the second function will be run only if the first one returns non-false.\r\n**\tReturns an object with a single method 'unhook' which will revert the changes to leave only the original function.\r\n**\r\n**\t>> object{function unhook} hook (Object object, String functionName, function newFunction, bool conditional=false);\r\n*/\r\nRin.hookPrepend = function (object, functionName, newFunction, conditional=true)\r\n{\r\n\tconst oldFunction = object[functionName].bind(object);\r\n\r\n\tif (conditional)\r\n\t{\r\n\t\tobject[functionName] = (...args) => {\r\n\t\t\tif (newFunction (...args) !== false)\r\n\t\t\t\treturn oldFunction (...args);\r\n\t\t};\r\n\t}\r\n\telse\r\n\t{\r\n\t\tobject[functionName] = (...args) => {\r\n\t\t\tnewFunction (...args);\r\n\t\t\treturn oldFunction (...args);\r\n\t\t};\r\n\t}\r\n\r\n\treturn { \r\n\t\tunhook: function() {\r\n\t\t\tobject[functionName] = oldFunction;\r\n\t\t}\r\n\t};\r\n};\r\n","/*\r\n**\trin/class\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nlet Rin = require('./alpha');\r\n\r\n/**\r\n**\tBase class used to easily create classes and sub-classes with complex multiple inheritance and\r\n**\tsupport for calls to parent class methods.\r\n*/\r\n\r\nlet Class = module.exports = function ()\r\n{\r\n};\r\n\r\n\r\n/**\r\n**\tReference to the class itself.\r\n*/\r\nClass._class = Class;\r\n\r\n\r\n/**\r\n**\tContains the methods of each of the super classes.\r\n*/\r\nClass._super = { };\r\n\r\n\r\n/**\r\n**\tName of the class, if none specified the class will be considered \"final\" and will not be inheritable.\r\n*/\r\nClass.prototype.className = \"Class\";\r\n\r\n\r\n/**\r\n**\tClass constructor, should initialize the state of the instance. Invoked when the `new` keyword is used with the class.\r\n*/\r\nClass.prototype.__ctor = function ()\r\n{\r\n};\r\n\r\n\r\n/**\r\n**\tClass destructor, should clear the instance state and release any used resources, invoked when the global `dispose`\r\n**\tfunction is called with the instance as parameter.\r\n*/\r\nClass.prototype.__dtor = function ()\r\n{\r\n};\r\n\r\n\r\n/**\r\n**\tReturns true if the object is an instance of the specified class (verifies inheritance), the parameter can be a class\r\n**\tname, a class constructor or a class instance, in any case the appropriate checks will be done.\r\n**\r\n**\t>> bool isInstanceOf (string className);\r\n**\t>> bool isInstanceOf (constructor classConstructor);\r\n**\t>> bool isInstanceOf (object classInstance);\r\n*/\r\nClass.prototype.isInstanceOf = function (className)\r\n{\r\n\tclassName = Rin.typeOf(className) == \"string\" ? className : (className.prototype ? className.prototype.className : className.constructor.prototype.className);\r\n\treturn className in this._super ? true : this.className == className;\r\n};\r\n\r\n\r\n/**\r\n**\tInternal method to ensure the _super field of an instance is ready to be used.\r\n**\r\n**\t>> void _initSuperRefs ();\r\n*/\r\nClass.prototype._initSuperRefs = function ()\r\n{\r\n\tvar _super = this.constructor._super;\r\n\tvar _newSuper = { };\r\n\r\n\tfor (let i in _super)\r\n\t{\r\n\t\tlet o = { };\r\n\r\n\t\tlet _prot = _super[i].prototype;\r\n\t\tfor (let j in _prot)\r\n\t\t{\r\n\t\t\tif (Rin.typeOf(_prot[j]) == \"function\")\r\n\t\t\t\to[j] = _prot[j].bind(this);\r\n\t\t}\r\n\r\n\t\t_newSuper[i] = o;\r\n\t}\r\n\r\n\tthis._super = _newSuper;\r\n};\r\n\r\n\r\n/**\r\n**\tExtends the class with the specified prototype. The prototype can be a function (class constructor) or an object. Note that the\r\n**\tclass will be modified (and returned) instead of creating a new class. Must be called at the class-level (**not** instance level).\r\n**\tWhen a class is provided all fields starting with uppercase at the class-level will not be inherited, this is used to create constants\r\n**\ton classes without having them to be copied to derived classes.\r\n**\r\n**\t>> class inherit (constructor classConstructor);\r\n**\t>> class inherit (object obj);\r\n*/\r\nClass.inherit = function (proto)\r\n{\r\n\tvar self = this._class;\r\n\r\n\tvar _super = self._super;\r\n\tvar _class = self._class;\r\n\r\n\tif (Rin.typeOf(proto) == \"function\")\r\n\t{\r\n\t\t// Move constants (uppercased properties) to the class-level instead of prototype-level.\r\n\t\tfor (let i in proto._class)\r\n\t\t\tif (!/^[A-Z]/.test(i)) self[i] = proto._class[i];\r\n\r\n\t\t// Combine methods and properties.\r\n\t\tRin.override (self.prototype, proto._class.prototype);\r\n\r\n\t\t// Combine super methods.\r\n\t\tRin.override (_super, proto._class._super);\r\n\r\n\t\t// Add new super reference if className specified in inherited prototypes.\r\n\t\tif (proto._class.prototype.className)\r\n\t\t\t_super[proto._class.prototype.className] = proto._class;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tRin.override (self.prototype, proto);\r\n\t}\r\n\r\n\tself._super = _super;\r\n\tself._class = _class;\r\n\r\n\treturn self;\r\n};\r\n\r\n\r\n/**\r\n**\tInternal method used to extend a class with one or more prototypes.\r\n**\r\n**\t>> class _extend (object base, object[] protos);\r\n*/\r\nClass.prototype._extend = function (base, protos)\r\n{\r\n\tvar _class = function (...args)\r\n\t{\r\n\t\tthis._initSuperRefs();\r\n\t\tthis.__ctor.apply(this, args);\r\n\t};\r\n\r\n\t_class._class = _class;\r\n\t_class._super = { };\r\n\r\n\tClass.inherit.call (_class, base);\r\n\r\n\tdelete _class.prototype.className;\r\n\r\n\tfor (let i = 0; i < protos.length; i++)\r\n\t\t_class.inherit (protos[i]);\r\n\r\n\tdelete _class._super.Class;\r\n\r\n\tif (\"classInit\" in _class.prototype)\r\n\t\t_class.prototype.classInit();\r\n\r\n\treturn _class;\r\n};\r\n\r\n\r\n/**\r\n**\tCreates a new class with the specified prototypes each of which can be a class constructor or an object.\r\n**\r\n**\t>> constructor extend (object... protos);\r\n*/\r\nClass.extend = function (...protos)\r\n{\r\n\treturn this._class.prototype._extend (this, protos);\r\n};\r\n\r\n\r\n/**\r\n**\tCreates a new instance of a class resulting from extending the self class with the specified prototype.\r\n**\r\n**\t>> object create (object proto);\r\n*/\r\nClass.create = function (proto)\r\n{\r\n\treturn new (this.extend(proto)) ();\r\n};\r\n","/*\r\n**\trin/event\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nlet Rin = require('./alpha');\r\nlet Class = require('./class');\r\n\r\n/**\r\n**\tHolds the information about a triggered event. It also provides a mechanism to allow asynchronous\r\n**\tevent propagation to ensure the event chain order.\r\n*/\r\n\r\nmodule.exports = Class.extend\r\n({\r\n\t/**\r\n\t**\tName of the class.\r\n\t*/\r\n\tclassName: \"Event\",\r\n\r\n\t/**\r\n\t**\tSource of the event.\r\n\t*/\r\n\tsource: null,\r\n\r\n\t/**\r\n\t**\tName of the event.\r\n\t*/\r\n\tname: null,\r\n\r\n\t/**\r\n\t**\tArguments of the event.\r\n\t*/\r\n\targs: null,\r\n\r\n\t/**\r\n\t**\tIndicates if the last event handler wants to use async mode.\r\n\t*/\r\n\t_async: false,\r\n\r\n\t/**\r\n\t**\tQueue of all handlers to invoke.\r\n\t*/\r\n\tlist: null,\r\n\r\n\t/**\r\n\t**\tNext event to be executed in the event chain.\r\n\t*/\r\n\tnext: null,\r\n\r\n\t/**\r\n\t**\tReturn values from event handlers.\r\n\t*/\r\n\tret: null,\r\n\r\n\t/**\r\n\t**\tOriginal root event.\r\n\t*/\r\n\toriginal: null,\r\n\r\n\t/**\r\n\t**\tIndex of the current event handler.\r\n\t*/\r\n\ti: -1,\r\n\r\n\t/**\r\n\t**\tContructs an event object with the specified parameters. Source is the event-dispatcher object, list is\r\n\t**\tan array with all the listeners to invoke. The eventName and eventArgs are the event information to be\r\n\t**\tpassed to each handler and if a callback is specified (cbHandler+cbContext) it will be executed once all\r\n\t**\tthe event handlers have been processed.\r\n\t**\r\n\t**\tEvent __ctor (source: EventDispatcher, list: Array, eventName: string, eventArgs: map, cbHandler: function, cbContext: object);\r\n\t*/\r\n\t__ctor: function (source, list, eventName, eventArgs, cbHandler, cbContext)\r\n\t{\r\n\t\tthis.source = source;\r\n\r\n\t\tthis.name = eventName;\r\n\t\tthis.args = eventArgs;\r\n\r\n\t\tthis.cbHandler = cbHandler;\r\n\t\tthis.cbContext = cbContext;\r\n\r\n\t\tthis.list = list;\r\n\t\tthis.reset();\r\n\t},\r\n\r\n\t/**\r\n\t**\tResets the event to its initial state. An event object can be reused by resetting it and then\r\n\t**\tinvoking the resume event.\r\n\t**\r\n\t**\tEvent reset ();\r\n\t*/\r\n\treset: function ()\r\n\t{\r\n\t\tthis.next = null;\r\n\t\tthis.ret = [];\r\n\r\n\t\tthis._async = false;\r\n\t\tthis.i = -1;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tChanges the source of the event.\r\n\t**\r\n\t**\tEvent setSource (object value);\r\n\t*/\r\n\tsetSource: function (value)\r\n\t{\r\n\t\tthis.source = value;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tSets the internal asynchronous flag. Should be called before a handler returns. If a handler\r\n\t**\tcalls this method it should also call resume() when async operations are finished.\r\n\t**\r\n\t**\tEvent wait ();\r\n\t*/\r\n\twait: function ()\r\n\t{\r\n\t\tthis._async = true;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tResumes event propagation. Should be called manually by event handlers that also call wait().\r\n\t**\r\n\t**\tEvent resume ();\r\n\t*/\r\n\tresume: function ()\r\n\t{\r\n\t\tthis._async = false;\r\n\r\n\t\twhile (!this._async)\r\n\t\t{\r\n\t\t\tif (++this.i >= this.list.length)\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tif (this.list[this.i].silent)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif (Rin.typeOf(this.list[this.i].handler) == \"string\")\r\n\t\t\t{\r\n\t\t\t\tif (this.list[this.i].context)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (!this.list[this.i].context[this.list[this.i].handler])\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tif (this.list[this.i].context[this.list[this.i].handler] (this, this.args, this.list[this.i].data) === false)\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif (global[this.list[this.i].handler].call (null, this, this.args, this.list[this.i].data) === false)\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif (this.list[this.i].handler.call (this.list[this.i].context, this, this.args, this.list[this.i].data) === false)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._async)\r\n\t\t\treturn this;\r\n\r\n\t\tif (this.i >= this.list.length && this.next) this.next.resume();\r\n\r\n\t\tif (this.cbHandler)\r\n\t\t\tthis.cbHandler.call (this.cbContext);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tSets the \"original\" property of the event to indicate where the original event comes from.\r\n\t**\r\n\t**\tEvent from (event: Event);\r\n\t*/\r\n\tfrom: function (event)\r\n\t{\r\n\t\tthis.original = event;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tEnqueues the specified event to be executed upon the current event process is finished. The \"original\"\r\n\t**\tproperty of the chained event will be set to the current event.\r\n\t**\r\n\t**\tEvent enqueueEvent (event: Event);\r\n\t*/\r\n\tenqueue: function (event)\r\n\t{\r\n\t\tif (!event) return this;\r\n\r\n\t\tvar evt;\r\n\t\tfor (evt = this; evt.next != null; evt = evt.next);\r\n\r\n\t\tevt.next = event;\r\n\t\tevent.from (this);\r\n\r\n\t\treturn this;\r\n\t}\r\n});\r\n","/*\r\n**\trin/event-dispatcher\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nlet Class = require('./class');\r\nlet Event = require('./event');\r\n\r\n/**\r\n**\tEvent dispatcher allows several event listeners to be attached, these will be invoked whenever the\r\n**\tevent that is being listened to is triggered.\r\n*/\r\n\r\nmodule.exports = Class.extend\r\n({\r\n\t/**\r\n\t**\tName of the class.\r\n\t*/\r\n\tclassName: \"EventDispatcher\",\r\n\r\n\t/**\r\n\t**\tListeners attached to this event dispatcher. Grouped by event name.\r\n\t*/\r\n\tlisteners: null,\r\n\r\n\t/**\r\n\t**\tNamespace for event dispatching. Defaults to null. Can be modified using setNamespace().\r\n\t*/\r\n\tnamespace: null,\r\n\r\n\t/**\r\n\t**\tInitializes the event dispatcher.\r\n\t**\r\n\t**\tEventDispatcher __ctor ();\r\n\t*/\r\n\t__ctor: function ()\r\n\t{\r\n\t\tthis.listeners = { };\r\n\t},\r\n\r\n\t/**\r\n\t**\tSets the event dispatching namespace. Used to force all events dispatched to have the specified namespace.\r\n\t**\r\n\t**\tEventDispatcher setNamespace (value: string);\r\n\t*/\r\n\tsetNamespace: function (value)\r\n\t{\r\n\t\tthis.namespace = value;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tAdds an event listener for a specified event to the event dispatcher. The event name can have an optional\r\n\t**\tnamespace indicator which is added to the beginning of the event name and separated using a colon (:). This\r\n\t**\tindicator can be used to later trigger or remove all handlers of an specific namespace.\r\n\t**\r\n\t**\tEventDispatcher addEventListener (eventName: string, handler: function, context: object, data: object);\r\n\t*/\r\n\taddEventListener: function (eventName, handler, context, data)\r\n\t{\r\n\t\teventName = eventName.split(\":\");\r\n\t\tvar name = eventName[eventName.length-1];\r\n\t\tvar ns = eventName.length > 1 ? eventName[0] : null;\r\n\r\n\t\tif (!this.listeners[name])\r\n\t\t\tthis.listeners[name] = [];\r\n\r\n\t\tthis.listeners[name].push ({ ns: ns, handler: handler, context: context, data: data, silent: 0 });\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tRemoves an event listener from the event dispatcher. If only the name is provided all handlers with the\r\n\t**\tspecified name will be removed. If a context is provided without a handler then any handler matching the\r\n\t**\tcontext will be removed. Special event name \"*\" can be used to match all event names.\r\n\t**\r\n\t**\tEventDispatcher removeEventListener (eventName: string, handler: function, context: object);\r\n\t*/\r\n\tremoveEventListener: function (eventName, handler, context)\r\n\t{\r\n\t\teventName = eventName.split(\":\");\r\n\t\tvar name = eventName[eventName.length-1];\r\n\t\tvar ns = eventName.length > 1 ? eventName[0] : null;\r\n\r\n\t\tif (name == \"*\")\r\n\t\t{\r\n\t\t\tfor (var j in this.listeners)\r\n\t\t\t{\r\n\t\t\t\tvar list = this.listeners[j];\r\n\r\n\t\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar k = true;\r\n\r\n\t\t\t\t\tif (handler)\r\n\t\t\t\t\t\tk = k && list[i].handler === handler;\r\n\r\n\t\t\t\t\tif (context)\r\n\t\t\t\t\t\tk = k && list[i].context === context;\r\n\r\n\t\t\t\t\tif (ns)\r\n\t\t\t\t\t\tk = k && list[i].ns == ns;\r\n\r\n\t\t\t\t\tif (k) list.splice(i--, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (!this.listeners[name])\r\n\t\t\t\treturn this;\r\n\r\n\t\t\tvar list = this.listeners[name];\r\n\r\n\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t{\r\n\t\t\t\tvar k = true;\r\n\r\n\t\t\t\tif (handler)\r\n\t\t\t\t\tk = k && list[i].handler === handler;\r\n\r\n\t\t\t\tif (context)\r\n\t\t\t\t\tk = k && list[i].context === context;\r\n\r\n\t\t\t\tif (ns)\r\n\t\t\t\t\tk = k && list[i].ns == ns;\r\n\r\n\t\t\t\tif (k) list.splice(i--, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tPrepares an event with the specified parameters for its later usage. The event is started when\r\n\t**\tthe resume() method is called. If a callback is specified it will be executed once all event\r\n\t**\thandlers have been processed.\r\n\t**\r\n\t**\tEvent prepareEvent (eventName: string, eventArgs: map, cbHandler: function, cbContext: object);\r\n\t**\tEvent prepareEvent (eventName: string, eventArgs: map);\r\n\t*/\r\n\tprepareEvent: function (eventName, eventArgs, cbHandler, cbContext)\r\n\t{\r\n\t\tvar list = [];\r\n\r\n\t\teventName = eventName.split(\":\");\r\n\t\tvar name = eventName[eventName.length-1];\r\n\t\tvar ns = eventName.length > 1 ? eventName[0] : null;\r\n\r\n\t\tif (this.listeners[name])\r\n\t\t\tlist = list.concat (this.listeners[name]);\r\n\r\n\t\tif (this.listeners[\"*\"])\r\n\t\t\tlist = list.concat (this.listeners[\"*\"]);\r\n\r\n\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\tif (list[i].silent) list.splice (i--, 1);\r\n\r\n\t\tif (ns)\r\n\t\t{\r\n\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t\tif (list[i].ns != ns) list.splice (i--, 1);\r\n\t\t}\r\n\r\n\t\treturn new Event (this, list, name, eventArgs, cbHandler, cbContext);\r\n\t},\r\n\r\n\t/**\r\n\t**\tSilences or unsilences all handlers attached to an event such that if the event fires the handler(s) will\r\n\t**\tnot be invoked. It is recommended to use a namespace to ensure other handlers will continue to be run.\r\n\t**\r\n\t**\tEventDispatcher silence (eventName: string);\r\n\t*/\r\n\tsilence: function (eventName, value)\r\n\t{\r\n\t\teventName = eventName.split(\":\");\r\n\r\n\t\tvar name = eventName[eventName.length-1];\r\n\t\tvar ns = eventName.length > 1 ? eventName[0] : null;\r\n\r\n\t\tvalue = value === false ? -1 : 1;\r\n\r\n\t\tif (name == \"*\")\r\n\t\t{\r\n\t\t\tfor (var j in this.listeners)\r\n\t\t\t{\r\n\t\t\t\tvar list = this.listeners[j];\r\n\r\n\t\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (ns && list[i].ns != ns)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tlist[i].silent += value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (!this.listeners[name])\r\n\t\t\t\treturn this;\r\n\r\n\t\t\tvar list = this.listeners[name];\r\n\r\n\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t{\r\n\t\t\t\tif (ns && list[i].ns != ns)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tlist[i].silent += value;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tDispatches an event to the respective listeners. If a callback is specified it will be executed once\r\n\t**\tall event handlers have been processed.\r\n\t**\r\n\t**\tEvent dispatchEvent (eventName: string, eventArgs: map, cbHandler: function, cbContext: object);\r\n\t**\tEvent dispatchEvent (eventName: string, eventArgs: map);\r\n\t*/\r\n\tdispatchEvent: function (eventName, eventArgs, cbHandler, cbContext)\r\n\t{\r\n\t\treturn this.prepareEvent(this.namespace ? this.namespace+':'+eventName: eventName, eventArgs, cbHandler, cbContext).resume();\r\n\t}\r\n});\r\n","/*\n**\trin/model-regex\n**\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\n**\thttps://www.rsthn.com/\n**\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/**\n**\tCommon regular expressions for pattern validation.\n*/\n\nmodule.exports =\n{\n\temail: /^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)+$/i,\n\turl: /^[\\w-]+:\\/\\/[\\w-]+(\\.\\w+)+.*$/,\n\turlNoProt: /^[\\w-]+(\\.\\w+)+.*$/,\n\tname: /^[-A-Za-z0-9_.]+$/,\n\tuname: /^['\\pL\\pN ]+$/,\n\ttext: /^[^&<>{}]*$/,\n\tutext: /^([\\r\\n\\pL\\pN\\pS &!@#$%*\\[\\]()_+=;',.\\/?:\"~-]+)$/\n};\n","/*\n**\trin/model-constraints\n**\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\n**\thttps://www.rsthn.com/\n**\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nlet Rin = require('./alpha');\nlet Regex = require('./model-regex');\n\n/**\n**\tMap of model constraint handlers. Each function should accept parameters (in order): the model object (model), the constraint value (ctval),\n**\tthe property name (name), the property value (value) and return the corrected value once verified or throw an exception if errors occur.\n*/\n\nmodule.exports =\n{\n\t/**\n\t**\tUtility function (not a handler) to get the real value given a reference string. If the value is not a string, the value itself will\n\t**\tbe returned, if it is a string starting with '#' the model property will be returned, if starts with '@' the object property will be\n\t**\treturned, otherwise the contents of the string will eval'd and returned.\n\t*/\n\t_getref: function (value, obj)\n\t{\n\t\tif (typeof(value) == \"string\")\n\t\t{\n\t\t\tif (value.substr(0, 1) == \"#\")\t\t\tvalue = obj.get(value.substr(1));\n\t\t\telse if (value.substr(0, 1) == \"@\")\t\tvalue = obj[value.substr(1)];\n\n\t\t\tif (typeof(value) == \"string\")\n\t\t\t\treturn eval(value);\n\n\t\t\treturn value;\n\t\t}\n\t\telse\n\t\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the new value is of the valid type before storing it on the property. When possible if the\n\t**\tinput is of compatible type it will be converted to the target type.\n\t*/\n\ttype: function (model, ctval, name, value)\n\t{\n\t\tswitch (ctval)\n\t\t{\n\t\t\tcase \"int\":\n\t\t\t\tvalue = parseInt(value);\n\t\t\t\tif (isNaN(value)) throw new Error (ctval);\n\t\t\t\tbreak;\n\n\t\t\tcase \"float\":\n\t\t\t\tvalue = parseFloat(value);\n\t\t\t\tif (isNaN(value)) throw new Error (ctval);\n\t\t\t\tbreak;\n\n\t\t\tcase \"string\":\n\t\t\t\tvalue = (value === null || value === undefined) ? \"\" : value.toString();\n\t\t\t\tbreak;\n\n\t\t\tcase \"bit\":\n\t\t\t\tif (value === true || value === false) {\n\t\t\t\t\tvalue = value ? 1 : 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvalue = parseInt(value);\n\t\t\t\tif (isNaN(value)) throw new Error (ctval);\n\n\t\t\t\tvalue = value ? 1 : 0;\n\t\t\t\tbreak;\n\n\t\t\tcase \"array\":\n\t\t\t\tif (Rin.typeOf(value) == \"array\")\n\t\t\t\t\tbreak;\n\n\t\t\t\tif (value === null || value === undefined)\n\t\t\t\t{\n\t\t\t\t\tvalue = [];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tthrow new Error (ctval);\n\t\t\t\tbreak;\n\n\t\t\tcase \"bool\":\n\t\t\t\tif (value === \"true\" || value === true) {\n\t\t\t\t\tvalue = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (value === \"false\" || value === false) {\n\t\t\t\t\tvalue = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tthrow new Error (ctval);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the field is of the specified model type.\n\t*/\n\tmodel: function (model, ctval, name, value)\n\t{\n\t\tvar mclass = this._getref(ctval, model);\n\t\tif (!mclass) throw new Error (ctval);\n\n\t\tif (!value)\n\t\t\treturn new mclass();\n\n\t\treturn mclass.ensure (value);\n\t},\n\n\n\t/**\n\t**\tVerifies that the field is of the specified class.\n\t*/\n\tcls: function (model, ctval, name, value)\n\t{\n\t\tvar mclass = this._getref(ctval, model);\n\t\tif (!value) return new mclass();\n\n\t\treturn Rin.ensureTypeOf(mclass, value);\n\t},\n\n\n\t/**\n\t**\tVerifies that the array contents are of the specified class. Returns error if the class does not exist\n\t**\tor if the field is not an array. Therefore a type:array constraint should be used before this one.\n\t*/\n\tarrayof: function (model, ctval, name, value)\n\t{\n\t\tvar mclass = this._getref(ctval, model);\n\t\tif (!value) value = [];\n\n\t\tif (!mclass || Rin.typeOf(value) != \"array\")\n\t\t\tthrow new Error (ctval);\n\n\t\tfor (var i = 0; i < value.length; i++)\n\t\t\tvalue[i] = Rin.ensureTypeOf(mclass, value[i]);\n\t\t\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the array contents are not null. Returns error if the field is not an array, therefore a\n\t**\ttype:array constraint should be used before this one.\n\t*/\n\tarraynull: function (model, ctval, name, value)\n\t{\n\t\tvar remove = false;\n\n\t\tif (Rin.typeOf(ctval) == \"object\")\n\t\t{\n\t\t\tif (ctval.remove) remove = ctval.remove;\n\t\t\tctval = ctval.value;\n\t\t}\n\n\t\tif (ctval) return value;\n\n\t\tif (Rin.typeOf(value) != \"array\")\n\t\t\tthrow new Error (ctval);\n\n\t\tfor (var i = 0; i < value.length; i++)\n\t\t{\n\t\t\tif (value[i] == null)\n\t\t\t{\n\t\t\t\tif (remove)\n\t\t\t\t\tvalue.splice (i--, 1);\n\t\t\t\telse\n\t\t\t\t\tthrow new Error (ctval);\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the array contents are all compliant. Returns error if the field is not an array, therefore\n\t**\ta type:array constraint should be used before this one.\n\t*/\n\tarraycompliant: function (model, ctval, name, value)\n\t{\n\t\tvar remove = false;\n\n\t\tif (Rin.typeOf(ctval) == \"object\")\n\t\t{\n\t\t\tif (ctval.remove) remove = ctval.remove;\n\t\t\tctval = ctval.value;\n\t\t}\n\n\t\tif (!ctval) return value;\n\n\t\tif (Rin.typeOf(value) != \"array\")\n\t\t\tthrow new Error (ctval);\n\n\t\tfor (var i = 0; i < value.length; i++)\n\t\t{\n\t\t\tif (value[i] == null)\n\t\t\t\tcontinue;\n\n\t\t\tif (!value[i].isCompliant())\n\t\t\t{\n\t\t\t\tif (remove)\n\t\t\t\t\tvalue.splice (i--, 1);\n\t\t\t\telse\n\t\t\t\t\tthrow new Error (ctval);\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the presense of the field.\n\t*/\n\trequired: function (model, ctval, name, value)\n\t{\n\t\tif (value === null || value === undefined)\n\t\t\tthrow new Error (ctval ? \"\" : \"null\");\n\n\t\tswitch (Rin.typeOf(value))\n\t\t{\n\t\t\tcase \"array\":\n\t\t\t\tif (value.length == 0) throw new Error (ctval ? \"\" : \"null\");\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tif (value.toString().length == 0) throw new Error (ctval ? \"\" : \"null\");\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the minimum length of the field.\n\t*/\n\tminlen: function (model, ctval, name, value)\n\t{\n\t\tif (value.toString().length < ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the maximum length of the field.\n\t*/\n\tmaxlen: function (model, ctval, name, value)\n\t{\n\t\tif (value.toString().length > ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the minimum value of the field.\n\t*/\n\tminval: function (model, ctval, name, value)\n\t{\n\t\tif (parseFloat(value) < ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the maximum value of the field.\n\t*/\n\tmaxval: function (model, ctval, name, value)\n\t{\n\t\tif (parseFloat(value) > ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the minimum number of items in the array.\n\t*/\n\tmincount: function (model, ctval, name, value)\n\t{\n\t\tif (Rin.typeOf(value) != \"array\" || value.length < ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the maximum number of items in the array.\n\t*/\n\tmaxcount: function (model, ctval, name, value)\n\t{\n\t\tif (Rin.typeOf(value) != \"array\" || value.length > ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the format of the field using a regular expression. The constraint value should be the name of\n\t**\tone of the Model.Regex regular expressions.\n\t*/\n\tpattern: function (model, ctval, name, value)\n\t{\n\t\tif (!Regex[ctval].test (value.toString()))\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the field is inside the specified set of options. The set can be an array or a string with\n\t**\tthe options separated by vertical bar (|). The comparison is case-sensitive.\n\t*/\n\tinset: function (model, ctval, name, value)\n\t{\n\t\tif (Rin.typeOf(ctval) != \"array\")\n\t\t{\n\t\t\tif (!new RegExp(\"^(\"+ctval.toString()+\")$\").test (value.toString()))\n\t\t\t\tthrow new Error (ctval);\n\n\t\t\treturn value;\n\t\t}\n\n\t\tif (ctval.indexOf(value.toString()) == -1)\n\t\t\tthrow new Error (ctval.join(\"|\"));\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tSets the field to upper case.\n\t*/\n\tupper: function (model, ctval, name, value)\n\t{\n\t\treturn ctval ? value.toString().toUpperCase() : value;\n\t},\n\n\n\t/**\n\t**\tSets the field to lower case.\n\t*/\n\tlower: function (model, ctval, name, value)\n\t{\n\t\treturn ctval ? value.toString().toLowerCase() : value;\n\t}\n};\n","/*\n**\trin/model\n**\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\n**\thttps://www.rsthn.com/\n**\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nlet Rin = require('./alpha');\nlet EventDispatcher = require('./event-dispatcher');\n\n/**\n**\tA model is a high-integrity data object used to store properties and more importantly to provide event support to notify of any\n**\tkind of change that occurs to the model's properties. Integrity of the model is maintained by optionally using property constraints.\n*/\n\nlet _Model = module.exports = EventDispatcher.extend\n({\n\t/**\n\t**\tName of the class.\n\t*/\n\tclassName: \"Model\",\n\n\t/**\n\t**\tDefault properties for the model. Can be a map with the property name and its default value or a function\n\t**\treturning a map with dynamic default values. This is used to reset the model to its initial state.\n\t*/\n\tdefaults: null,\n\n\t/**\n\t**\tModel property contraints. A map with the property name and an object specifying the constraints of the\n\t**\tproperty. This is used to determine the type, format and behavior of each property in the model.\n\t*/\n\tconstraints: null,\n\n\t/**\n\t**\tProperties of the model.\n\t*/\n\tdata: null,\n\n\t/**\n\t**\tArray with the name of the properties that have changed. Populated prior modelChanged event.\n\t*/\n\tchangedList: null,\n\n\t/**\n\t**\tSilent mode indicator. While in silent mode events will not be dispatched.\n\t*/\n\t_silent: 0,\n\n\t/**\n\t**\tCurrent nesting level of the set() method. This is used to determine when all the property\n\t**\tchanges are done.\n\t*/\n\t_level: 0,\n\n\t/**\n\t**\tInitializes the model and sets the properties to the specified data object.\n\t**\n\t**\t>> Model __ctor (object data);\n\t**\t>> Model __ctor (object data, object defaults);\n\t*/\n\t__ctor: function (data, defaults)\n\t{\n\t\tthis._super.EventDispatcher.__ctor();\n\n\t\tthis.data = { };\n\n\t\tif (defaults != null)\n\t\t{\n\t\t\tthis.reset (defaults);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar o = null;\n\n\t\t\tif (!this.defaults && this.constraints)\n\t\t\t{\n\t\t\t\tvar o = { };\n\n\t\t\t\tfor (var i in this.constraints)\n\t\t\t\t{\n\t\t\t\t\tvar j = this.constraints[i];\n\t\t\t\t\tif (j.def === null || j.def === undefined)\n\t\t\t\t\t{\n\t\t\t\t\t\to[i] = null;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof(j.def) == \"function\")\n\t\t\t\t\t\to[i] = j.def();\n\t\t\t\t\telse\n\t\t\t\t\t\to[i] = j.def;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.reset(o);\n\t\t}\n\n\t\tthis.init();\n\n\t\tif (data != null)\n\t\t\tthis.set (arguments[0], true);\n\n\t\tif (this.constraints) this.update();\n\n\t\tthis.ready();\n\t},\n\n\t/**\n\t**\tResets the model to its default state and triggers update events. If a map is provided the defaults of\n\t**\tthe model will be set to the specified map.\n\t**\n\t**\t>> Model reset (object defaults, [bool nsilent=true]);\n\t**\t>> Model reset ([bool nsilent=true]);\n\t*/\n\treset: function (defaults, nsilent)\n\t{\n\t\tif (!this.defaults)\n\t\t{\n\t\t\tif (!defaults || (Rin.typeOf(defaults) != \"object\" && Rin.typeOf(defaults) != \"function\"))\n\t\t\t\treturn this;\n\n\t\t\tthis.defaults = defaults;\n\t\t}\n\n\t\tif (Rin.typeOf(this.defaults) == \"function\")\n\t\t\tthis.data = this.defaults();\n\t\telse\n\t\t\tthis.data = Rin.clone(this.defaults);\n\n\t\treturn (nsilent === false || defaults === false) ? this : this.update(null, true);\n\t},\n\n\t/**\n\t**\tInitializes the model. Called before the model properties are set.\n\t**\n\t**\t>> void init ();\n\t*/\n\tinit: function ()\n\t{\n\t},\n\n\t/**\n\t**\tInitialization epilogue. Called after initialization and after model properties are set.\n\t**\n\t**\t>> void ready ();\n\t*/\n\tready: function ()\n\t{\n\t},\n\n\t/**\n\t**\tEnables or disables silent mode. When the model is in silent mode events will not be dispatched.\n\t**\n\t**\t>> Model silent (value: bool);\n\t*/\n\tsilent: function (value)\n\t{\n\t\tthis._silent += value ? 1 : -1;\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tValidates a property name and value against the constraints defined in the model (if any). Returns the\n\t**\tfinal value if successful or throws an empty exception if errors occur.\n\t**\n\t**\t>> T _validate (string name, T value);\n\t*/\n\t_validate: function (name, value)\n\t{\n\t\tif (!this.constraints || !this.constraints[name])\n\t\t\treturn value;\n\n\t\tvar constraints = this.constraints[name];\n\n\t\tvar nvalue = value;\n\n\t\tfor (var ctname in constraints)\n\t\t{\n\t\t\tif (!_Model.Constraints[ctname])\n\t\t\t\tcontinue;\n\n\t\t\ttry {\n\t\t\t\tnvalue = _Model.Constraints[ctname] (this, constraints[ctname], name, nvalue);\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tif (e.message == \"null\")\n\t\t\t\t\tbreak;\n\n\t\t\t\tthrow new Error (`Constraint [${ctname}:${constraints[ctname]}] failed on property '${name}'.`);\n\t\t\t}\n\t\t}\n\n\t\treturn nvalue;\n\t},\n\n\t/**\n\t**\tSets the value of a property and returns the value set. This method is internally used to set properties\n\t**\tone at a time. If constraints are present in the model for the specified property all constraints will be\n\t**\tverified. When constraint errors occur the constraintError event will be raised and the property value\n\t**\twill not be changed.\n\t**\n\t**\t>> T _set (string name, T value);\n\t*/\n\t_set: function (name, value)\n\t{\n\t\tif (!this.constraints || !this.constraints[name])\n\t\t{\n\t\t\tthis.data[name] = value;\n\t\t\treturn value;\n\t\t}\n\n\t\tvar constraints = this.constraints[name];\n\n\t\tvar cvalue = this.data[name];\n\t\tvar nvalue = value;\n\n\t\tfor (var ctname in constraints)\n\t\t{\n\t\t\tif (!_Model.Constraints[ctname])\n\t\t\t\tcontinue;\n\n\t\t\ttry {\n\t\t\t\tnvalue = _Model.Constraints[ctname] (this, constraints[ctname], name, nvalue);\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tif (e.message == \"null\")\n\t\t\t\t\tbreak;\n\n\t\t\t\tif (!this._silent)\n\t\t\t\t\tthis.dispatchEvent (\"constraintError\", { constraint: ctname, message: e.message, name: name, value: value });\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn (this.data[name] = nvalue);\n\t},\n\n\t/**\n\t**\tTriggers property events to indicate a property is changing. First triggers \"propertyChanging\" and then\n\t**\t\"propertyChanged\". If the first event returns false the second event will not be triggered.\n\t**\n\t**\t>> void _propertyEvent (string name, T prev, T value, bool direct=false);\n\t*/\n\t_propertyEvent: function (name, prev, value, direct)\n\t{\n\t\tvar temp = { name: name, old: prev, value: value, level: this._level };\n\n\t\tvar evt = this.dispatchEvent (\"propertyChanging\", temp);\n\n\t\tif (!direct)\n\t\t\ttemp.value = this._set (name, temp.value);\n\t\telse\n\t\t\tthis.data[name] = temp.value;\n\n\t\tif (evt != null && evt.ret.length && evt.ret[0] === false)\n\t\t\treturn;\n\n\t\tthis.dispatchEvent (\"propertyChanged.\" + name, temp);\n\t\tthis.dispatchEvent (\"propertyChanged\", temp);\n\n\t\tthis.changedList.push (name);\n\t},\n\n\t/**\n\t**\tSets one or more properties of the model. Possible arguments can be two strings or a map.\n\t**\n\t**\t>> Model set (string name, T value, bool force=true);\n\t**\t>> Model set (string name, T value, bool silent=false);\n\t**\t>> Model set (string name, T value);\n\t**\t>> Model set (object data);\n\t*/\n\tset: function ()\n\t{\n\t\tvar n = arguments.length;\n\t\tvar force = false, silent = false;\n\n\t\tif ((n > 2 || (n == 2 && Rin.typeOf(arguments[0]) == \"object\")) && Rin.typeOf(arguments[n-1]) == \"boolean\")\n\t\t{\n\t\t\tforce = arguments[--n];\n\t\t\tif (force === false) silent = true;\n\t\t}\n\n\t\tif (this._level == 0)\n\t\t{\n\t\t\tthis.changedList = [];\n\t\t}\n\n\t\tthis._level++;\n\n\t\tif (n == 2)\n\t\t{\n\t\t\tif (this.data[arguments[0]] != arguments[1] || force)\n\t\t\t{\n\t\t\t\tif (!this._silent && !silent)\n\t\t\t\t\tthis._propertyEvent (arguments[0], this.data[arguments[0]], this._validate (arguments[0], arguments[1]));\n\t\t\t\telse\n\t\t\t\t\tthis._set (arguments[0], arguments[1]);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (var i in arguments[0])\n\t\t\t{\n\t\t\t\tif (this.data[i] != arguments[0][i] || force)\n\t\t\t\t{\n\t\t\t\t\tif (!this._silent && !silent)\n\t\t\t\t\t\tthis._propertyEvent (i, this.data[i], this._validate (i, arguments[0][i]));\n\t\t\t\t\telse\n\t\t\t\t\t\tthis._set (i, arguments[0][i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!--this._level && this.changedList.length && !silent && !this._silent)\n\t\t\tthis.dispatchEvent (\"modelChanged\", { fields: this.changedList });\n\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tReturns true if the given key exists in the model.\n\t**\n\t**\t>> boolean has (string name);\n\t*/\n\thas: function (name)\n\t{\n\t\treturn name in this.data;\n\t},\n\n\t/**\n\t**\tReturns the value of a property. If no name is specified the whole map of properties will be returned.\n\t**\tIf a boolean value of \"true\" is provided the properties map will be returned but first will be compacted\n\t**\tusing the default data to ensure only valid properties are present.\n\t**\n\t**\t>> T get (string name);\n\t**\t>> object get ();\n\t**\t>> object get (true);\n\t**\t>> object get (false);\n\t**\t\n\t*/\n\tget: function (name, def)\n\t{\n\t\tif (arguments.length == 0 || name === false)\n\t\t\treturn this.data;\n\n\t\tif (arguments.length == 1 && name === true)\n\t\t\treturn this.flatten ();\n\n\t\tif (arguments.length == 2)\n\t\t\treturn this.data[name] === undefined ? def : this.data[name];\n\n\t\treturn this.data[name];\n\t},\n\n\t/**\n\t**\tReturns the value of a property as an integer number.\n\t**\n\t**\t>> int getInt (string name, [int def]);\n\t*/\n\tgetInt: function (name, def)\n\t{\n\t\tif (arguments.length == 2)\n\t\t\treturn this.data[name] === undefined ? def : parseInt (this.data[name]);\n\n\t\treturn parseInt (this.data[name]);\n\t},\n\n\t/**\n\t**\tReturns the value of a property as a floating point number.\n\t**\n\t**\t>> float getFloat (string name, [float def]);\n\t*/\n\tgetFloat: function (name, def)\n\t{\n\t\tif (arguments.length == 2)\n\t\t\treturn this.data[name] === undefined ? def : parseFloat (this.data[name]);\n\n\t\treturn parseFloat (this.data[name]);\n\t},\n\n\t/**\n\t**\tReturns the value of a property as a boolean value (true or false).\n\t**\n\t**\t>> bool getBool (string name, [bool def]);\n\t**\t\n\t*/\n\tgetBool: function (name, def)\n\t{\n\t\tif (arguments.length == 2)\n\t\t\tname = this.data[name] === undefined ? def : this.data[name];\n\t\telse\n\t\t\tname = this.data[name];\n\n\t\tif (name === \"true\" || name === true)\n\t\t\treturn true;\n\n\t\tif (name === \"false\" || name === false)\n\t\t\treturn false;\n\n\t\treturn parseInt (name) ? true : false;\n\t},\n\n\t/**\n\t**\tReturns a reference object for a model property. The resulting object contains two methods\n\t**\tnamed \"get\" and \"set\" to modify the value of the property.\n\t**\n\t**\t>> object getReference (string name);\n\t*/\n\tgetReference: function (name)\n\t{\t\n\t\tvar m = this;\n\n\t\treturn {\n\t\t\tget: function() {\n\t\t\t\treturn m.get(name);\n\t\t\t},\n\n\t\t\tset: function(value) {\n\t\t\t\tm.set(name, value);\n\t\t\t}\n\t\t};\n\t},\n\n\t/**\n\t**\tSets or returns a constraint given the property name. \n\t**\n\t**\t>> Model constraint (string field, string constraint, T value);\n\t**\t>> Model constraint (string field, object constraint);\n\t**\t>> Model constraint (object constraints);\n\t**\t>> object constraint (string field);\n\t*/\n\tconstraint: function (field, constraint, value)\n\t{\n\t\tif (arguments.length == 3 || arguments.length == 2 || (arguments.length == 1 && Rin.typeOf(field) == \"object\"))\n\t\t{\n\t\t\tif (this.constraints === this.constructor.prototype.constraints)\n\t\t\t\tthis.constraints = Rin.clone (this.constraints);\n\n\t\t\tswitch (arguments.length)\n\t\t\t{\n\t\t\t\tcase 1:\n\t\t\t\t\tRin.override (this.constraints, field);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\tRin.override (this.constraints[field], constraint);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3:\n\t\t\t\t\tthis.constraints[field][constraint] = value;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn !field ? this : this.constraints[field];\n\t},\n\n\t/**\n\t**\tReturns a compact version of the model properties. That is, a map only with validated properties that are\n\t**\talso present in the default data map. Returns null if the object is not compliant. If the \"safe\" parameter\n\t**\tis set one last property named \"class\" will be attached, this specifies the original classPath of the object.\n\t**\n\t**\t>> object flatten ([bool safe=false]);\n\t*/\n\tflatten: function (safe, rsafe)\n\t{\n\t\tif (safe)\n\t\t{\n\t\t\tvar data = this.flatten(false, true);\n\t\t\tif (data == null) return null;\n\n\t\t\tdata[\"class\"] = this.classPath;\n\t\t\treturn data;\n\t\t}\n\n\t\tif (!this.constraints && !this.defaults)\n\t\t\treturn this.data;\n\n\t\tif (!this.isCompliant())\n\t\t\treturn { };\n\n\t\tvar constraints = this.constraints;\n\t\tvar keys = this.defaults ? (Rin.typeOf(this.defaults) == \"function\" ? this.defaults() : this.defaults) : this.constraints;\n\n\t\tvar data = { };\n\n\t\tfor (var i in this.data)\n\t\t{\n\t\t\tif (!(i in keys)) continue;\n\n\t\t\tif (constraints && constraints[i])\n\t\t\t{\n\t\t\t\tvar ct = constraints[i];\n\n\t\t\t\tif (ct.model)\n\t\t\t\t{\n\t\t\t\t\tdata[i] = this.data[i] ? this.data[i].flatten(rsafe) : null;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (ct.arrayof)\n\t\t\t\t{\n\t\t\t\t\tdata[i] = [];\n\n\t\t\t\t\tfor (var j = 0; j < this.data[i].length; j++)\n\t\t\t\t\t\tdata[i][j] = this.data[i][j] ? this.data[i][j].flatten(rsafe) : null;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (ct.cls)\n\t\t\t\t{\n\t\t\t\t\tdata[i] = this.data[i] ? this.data[i].flatten() : null;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdata[i] = this.data[i];\n\t\t}\n\n\t\treturn data;\n\t},\n\n\t/**\n\t**\tRemoves a property or a list of properties.\n\t**\n\t**\t>> void remove (string name, [bool nsilent=true]);\n\t**\t>> void remove (array name, [bool nsilent=true]);\n\t*/\n\tremove: function (name, nsilent)\n\t{\n\t\tif (Rin.typeOf(name) == \"array\")\n\t\t{\n\t\t\tfor (var i = 0; i < name.length; i++)\n\t\t\t\tdelete this.data[name[i]];\n\n\t\t\tif (nsilent !== false && !this._silent)\n\t\t\t\tthis.dispatchEvent (\"propertyRemoved\", { fields: name });\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdelete this.data[name];\n\n\t\t\tif (nsilent !== false && !this._silent)\n\t\t\t\tthis.dispatchEvent (\"propertyRemoved\", { fields: [name] });\n\t\t}\n\t},\n\n\t/**\n\t**\tTriggers data change events for one or more properties. Ensure that silent mode is not enabled or else\n\t**\tthis method will have no effect. If no parameters are provided a full update will be triggered on all of\n\t**\tthe model properties.\n\t**\n\t**\t>> Model update (array fields);\n\t**\t>> Model update (string name);\n\t**\t>> Model update (bool forceModelChanged);\n\t**\t>> Model update ();\n\t*/\n\tupdate: function (fields, direct)\n\t{\n\t\tif (this._silent) return this;\n\n\t\tif (this._level == 0)\n\t\t{\n\t\t\tthis.changedList = [];\n\t\t}\n\n\t\tthis._level++;\n\n\t\tif (fields && Rin.typeOf(fields) == 'string')\n\t\t{\n\t\t\tthis._propertyEvent (fields, this.data[fields], this.data[fields], direct);\n\t\t}\n\t\telse if (fields && Rin.typeOf(fields) == 'array')\n\t\t{\n\t\t\tfor (var i of fields)\n\t\t\t\tthis._propertyEvent (i, this.data[i], this.data[i], direct);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (var i in this.data)\n\t\t\t\tthis._propertyEvent (i, this.data[i], this.data[i], direct);\n\t\t}\n\n\t\tif (!--this._level && !this._silent && (this.changedList.length != 0 || fields === true))\n\t\t\tthis.dispatchEvent (\"modelChanged\", { fields: this.changedList });\n\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tValidates one or mode model properties using the defined constraints. If no parameters are provided all of\n\t**\tthe properties in the model will be validated.\n\t**\n\t**\t>> Model validate (array fields);\n\t**\t>> Model validate (string name);\n\t**\t>> Model validate ();\n\t*/\n\tvalidate: function (fields)\n\t{\n\t\tif (!this.constraints) return this;\n\n\t\tif (fields && Rin.typeOf(fields) == \"string\")\n\t\t{\n\t\t\tthis._set (fields, this.data[fields])\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (var i in this.data)\n\t\t\t{\n\t\t\t\tif (fields && Rin.indexOf(fields, i) == -1)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tthis._set (i, this.data[i])\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tValidates all the properties in the model and returns a boolean indicating if all of them comply with the\n\t**\tconstraints defined in the model.\n\t**\n\t**\t>> bool isCompliant ();\n\t*/\n\tisCompliant: function ()\n\t{\n\t\tif (!this.constraints) return true;\n\n\t\ttry\n\t\t{\n\t\t\tfor (var i in this.data)\n\t\t\t\tthis._validate (i, this.data[i]);\n\n\t\t\treturn true;\n\t\t}\n\t\tcatch (e) {\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t/**\n\t**\tRegisters an event handler for changes in a specific property of the model.\n\t**\n\t**\t>> void observe (string property, function handler, object context);\n\t*/\n\tobserve: function (property, handler, context)\n\t{\n\t\tthis.addEventListener (\"propertyChanged.\" + property, handler, context);\n\t},\n\n\t/**\n\t**\tUnregisters an event handler from changes in a specific property of the model.\n\t**\n\t**\t>> void unobserve (string property, function handler, object context);\n\t*/\n\tunobserve: function (property, handler, context)\n\t{\n\t\tthis.removeEventListener (\"propertyChanged.\" + property, handler, context);\n\t},\n\n\t/**\n\t**\tSerializes the model into a string.\n\t**\n\t**\tstring toString ();\n\t*/\n\ttoString: function ()\n\t{\n\t\treturn Rin.serialize(this.get (true));\n\t}\n});\n\n\n/**\n**\tImport model constraints.\n*/\n\n_Model.Constraints = require('./model-constraints');\n","/*\n**\trin/model-list\n**\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\n**\thttps://www.rsthn.com/\n**\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nlet Rin = require('./alpha');\nlet Model = require('./model');\n\n/**\n**\tGeneric list for models.\n*/\n\nmodule.exports = Model.extend\n({\n\t/**\n\t**\tName of the class.\n\t*/\n\tclassName: \"ModelList\",\n\n\t/**\n\t**\tClass of the items in the list, can be overriden by child classes to impose a more strict constraint.\n\t*/\n\titemt: Model,\n\n\t/**\n\t**\tMirror of data.contents\n\t*/\n\tcontents: null,\n\n\t/**\n\t**\tIDs of every item in the contents.\n\t*/\n\titemId: null,\n\n\t/**\n\t**\tAutoincremental ID for the next item to be added.\n\t*/\n\tnextId: null,\n\n\t/**\n\t**\tDefault properties of the model.\n\t*/\n\tdefaults:\n\t{\n\t\tcontents: null\n\t},\n\n\t/**\n\t**\tConstraints of the model to ensure integrity.\n\t*/\n\tconstraints:\n\t{\n\t\tcontents: {\n\t\t\ttype: \"array\",\n\t\t\tarrayof: \"@itemt\"\n\t\t}\n\t},\n\n\t/**\n\t**\tConstructor.\n\t*/\n\t__ctor: function (...args)\n\t{\n\t\tthis.itemId = [];\n\t\tthis.nextId = 0;\n\n\t\tthis._super.Model.__ctor(...args);\n\t},\n\n\t/**\n\t**\tInitialization epilogue. Called after initialization and after model properties are set.\n\t*/\n\tready: function ()\n\t{\n\t\tthis._eventGroup = \"ModelList_\" + Date.now() + \":modelChanged\";\n\n\t\tthis.contents = this.data.contents;\n\t},\n\n\t/**\n\t**\tConnects the event handlers to the item.\n\t**\n\t**\t>> Model _bind (int iid, Model item);\n\t*/\n\t_bind: function (iid, item)\n\t{\n\t\tif (item && item.addEventListener) item.addEventListener (this._eventGroup, this._onItemEvent, this, iid);\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tDisconnects the event handlers from the item.\n\t**\n\t**\t>> Model _unbind (Model item);\n\t*/\n\t_unbind: function (item)\n\t{\n\t\tif (item && item.removeEventListener) item.removeEventListener (this._eventGroup);\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tHandler for item events.\n\t**\n\t**\t>> Model _onItemEvent (Event evt, object args, int iid);\n\t*/\n\t_onItemEvent: function (evt, args, iid)\n\t{\n\t\tthis.prepareEvent (\"itemChanged\", { id: iid, item: evt.source }).from (evt)\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\t},\n\n\t/**\n\t**\tReturns the number of items in the list.\n\t**\n\t**\t>> int length ();\n\t*/\n\tlength: function ()\n\t{\n\t\treturn this.data.contents.length;\n\t},\n\n\t/**\n\t**\tClears the contents of the list.\n\t**\n\t**\t>> void clear ();\n\t*/\n\tclear: function ()\n\t{\n\t\tfor (var i = 0; i < this.data.contents; i++)\n\t\t\tthis._unbind (this.data.contents[i]);\n\n\t\tthis.itemId = [];\n\t\tthis.nextId = 0;\n\n\t\tthis.data.contents = [];\n\n\t\tthis.prepareEvent (\"itemsCleared\")\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\t},\n\n\t/**\n\t**\tSets the contents of the list with the specified array. All items will be ensured to be of the same model\n\t**\ttype as the one specified in the list.\n\t**\n\t**\t>> void setData (array data);\n\t*/\n\tsetData: function (data)\n\t{\n\t\tthis.clear();\n\t\tif (!data) return;\n\n\t\tfor (var i = 0; i < data.length; i++)\n\t\t{\n\t\t\tvar item = Rin.ensureTypeOf(this.itemt, data[i]);\n\n\t\t\tthis.itemId.push(this.nextId++);\n\t\t\tthis.data.contents.push(item);\n\n\t\t\tthis._bind(this.nextId-1, item);\n\t\t}\n\n\t\tthis.prepareEvent (\"itemsChanged\")\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\t},\n\n\t/**\n\t**\tReturns the raw array contents of the list.\n\t**\n\t**\t>> array getData ();\n\t*/\n\tgetData: function ()\n\t{\n\t\treturn this.data.contents;\n\t},\n\n\t/**\n\t**\tReturns the item at the specified index or null if the index is out of bounds.\n\t**\n\t**\t>> Model getAt (int index);\n\t*/\n\tgetAt: function (index)\n\t{\n\t\tif (index < 0 || index >= this.data.contents.length)\n\t\t\treturn null;\n\n\t\treturn this.data.contents[index];\n\t},\n\n\t/**\n\t**\tRemoves and returns the item at the specified index. Returns null if the index is out of bounds.\n\t**\n\t**\t>> Model removeAt (int index);\n\t*/\n\tremoveAt: function (index)\n\t{\n\t\tif (index < 0 || index >= this.data.contents.length)\n\t\t\treturn null;\n\n\t\tlet item = this.data.contents.splice(index, 1)[0];\n\t\tlet id = this.itemId.splice(index, 1)[0];\n\n\t\tthis._unbind (item);\n\n\t\tthis.prepareEvent (\"itemRemoved\", { id: id, item: item })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume();\n\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tSets the item at the specified index. Returns false if the index is out of bounds, true otherwise. The\n\t**\titem will be ensured to be of the model defined in the list.\n\t**\n\t**\t>> bool setAt (int index, Model item);\n\t*/\n\tsetAt: function (index, item)\n\t{\n\t\tif (index < 0 || index >= this.data.contents.length)\n\t\t\treturn false;\n\n\t\titem = Rin.ensureTypeOf(this.itemt, item);\n\n\t\tthis._unbind(this.data.contents[index]);\n\t\tthis.data.contents[index] = item;\n\t\tthis._bind(this.itemId[index], item);\n\n\t\tthis.prepareEvent (\"itemChanged\", { id: this.itemId[index], item: item })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn true;\n\t},\n\n\t/**\n\t**\tNotifies a change in the item at the specified index. Returns false if the index is out of bounds.\n\t**\n\t**\t>> bool updateAt (int index);\n\t*/\n\tupdateAt: function (index)\n\t{\n\t\tif (index < 0 || index >= this.data.contents.length)\n\t\t\treturn false;\n\n\t\tthis.prepareEvent (\"itemChanged\", { id: this.itemId[index], item: this.data.contents[index] })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn true;\n\t},\n\n\t/**\n\t**\tAdds an item to the bottom of the list. Returns null if the item is not an object or a model. The item\n\t**\twill be ensured to be of the model specified in the list.\n\t**\n\t**\t>> Model push (Model item);\n\t*/\n\tpush: function (item)\n\t{\n\t\tif (item && Rin.typeOf(item) != \"object\")\n\t\t\treturn null;\n\n\t\titem = Rin.ensureTypeOf(this.itemt, item);\n\n\t\tthis.itemId.push(this.nextId++);\n\t\tthis.data.contents.push (item);\n\t\tthis._bind(this.nextId-1, item);\n\n\t\tthis.prepareEvent (\"itemAdded\", { id: this.itemId[this.itemId.length-1], item: item, position: 'tail' })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tRemoves and returns an item from the bottom of the list.\n\t**\n\t**\t>> Model pop ();\n\t*/\n\tpop: function ()\n\t{\n\t\treturn this._unbind(this.data.contents.pop());\n\t},\n\n\t/**\n\t**\tAdds an item to the top of the list. Returns null if the item is not an object or a model. The item\n\t**\twill be ensured to be of the model specified in the list.\n\t**\n\t**\t>> Model unshift (Model item);\n\t*/\n\tunshift: function (item)\n\t{\n\t\tif (item && Rin.typeOf(item) != \"object\")\n\t\t\treturn null;\n\n\t\titem = Rin.ensureTypeOf(this.itemt, item);\n\n\t\tthis.itemId.unshift(this.nextId++);\n\t\tthis.data.contents.unshift (item);\n\t\tthis._bind(this.nextId-1, item);\n\n\t\tthis.prepareEvent (\"itemAdded\", { id: this.itemId[0], item: item, position: 'head' })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tRemoves and returns an item from the top of the list.\n\t**\n\t**\t>> Model shift ();\n\t*/\n\tshift: function ()\n\t{\n\t\treturn this._unbind(this.data.contents.shift());\n\t},\n\n\t/**\n\t**\tSearches for an item matching the specified partial definition and returns its index. Returns -1 if the\n\t**\titem was not found. If retObject is set to true the object will be returned instead of its index and null\n\t**\twill be returned when the item is not found.\n\t**\n\t**\tint|object find (object data, bool retObject=false);\n\t*/\n\tfind: function (data, retObject)\n\t{\n\t\tvar contents = this.data.contents;\n\n\t\tfor (var i = 0; i < contents.length; i++)\n\t\t{\n\t\t\tif (Rin.partialCompare (contents[i].data, data))\n\t\t\t\treturn retObject ? contents[i] : i;\n\t\t}\n\n\t\treturn retObject ? null : -1;\n\t}\n});\n","/*\r\n**\trin/schema\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nlet Rin = require('./alpha');\r\n\r\n/**\r\n**\tThe utility functions in this module allow to create a very strict serialization/deserialization schema\r\n**\tto ensure that all values are of the specific type when stored in string format.\r\n*/\r\n\r\nlet Schema = module.exports =\r\n{\r\n\tType: function (proto)\r\n    {\r\n\t\tlet tmp =\r\n\t\t{\r\n            flatten: function (value, context) {\r\n                return value;\r\n            },\r\n\r\n            unflatten: function (value, context) {\r\n                return value;\r\n            }\r\n        };\r\n\r\n        return proto ? Rin.override(tmp, proto) : tmp;\r\n    },\r\n\r\n\tString: function()\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\tflatten: function (value, context) {\r\n\t\t\t\treturn value != null ? value.toString() : null;\r\n\t\t\t},\r\n\r\n\t\t\tunflatten: function (value, context) {\r\n\t\t\t\treturn value != null ? value.toString() : null;\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tInteger: function()\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\tflatten: function (value, context) {\r\n\t\t\t\treturn ~~value;\r\n\t\t\t},\r\n\r\n\t\t\tunflatten: function (value, context) {\r\n\t\t\t\treturn ~~value;\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tNumber: function (precision)\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\t_precision: precision,\r\n\t\t\t_round: false,\r\n\r\n\t\t\tprecision: function (value)\r\n\t\t\t{\r\n\t\t\t\tthis._precision = ~~value;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\tflatten: function (value, context)\r\n\t\t\t{\r\n\t\t\t\tvalue = parseFloat(value);\r\n\r\n\t\t\t\tif (this._precision > 0)\r\n\t\t\t\t\tvalue = (~~(value*Math.pow(10, this._precision))) / Math.pow(10, this._precision);\r\n\r\n\t\t\t\treturn value;\r\n\t\t\t},\r\n\r\n\t\t\tunflatten: function (value, context) {\r\n\t\t\t\treturn parseFloat(value);\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tBool: function (compact)\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\t_compact: compact,\r\n\r\n\t\t\tcompact: function(value)\r\n\t\t\t{\r\n\t\t\t\tthis._compact = value;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\tflatten: function (value, context) {\r\n\t\t\t\tvalue = ~~value;\r\n\t\t\t\treturn this._compact ? (value > 0 ? 1 : 0) : (value > 0 ? true : false);\r\n\t\t\t},\r\n\r\n\t\t\tunflatten: function (value, context) {\r\n\t\t\t\treturn (~~value) ? true : false;\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tSharedString: function()\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\tflatten: function (value, context)\r\n\t\t\t{\r\n\t\t\t\tif (value == null) return 0;\r\n\r\n\t\t\t\tvalue = value.toString();\r\n\r\n                if (!(\"strings\" in context))\r\n                {\r\n                    context.strings_map = { };\r\n                    context.strings = [ ];\r\n                }\r\n\r\n                if (!(value in context.strings_map))\r\n                {\r\n                    context.strings.push(value);\r\n                    context.strings_map[value] = context.strings.length;\r\n                }\r\n\r\n                return context.strings_map[value];\r\n            },\r\n\r\n\t\t\tunflatten: function (value, context)\r\n\t\t\t{\r\n                return value == null || value == 0 ? null : context.strings[~~value - 1];\r\n            }\r\n        });\r\n    },\r\n\r\n\tArray: function (type)\r\n    {\r\n        return Schema.Type({\r\n\r\n\t\t\titemType: type,\r\n\t\t\t_debug: false,\r\n\r\n\t\t\tdebug: function(v) {\r\n\t\t\t\tthis._debug = v;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n            of: function (type) {\r\n                this.itemType = type;\r\n                return this;\r\n            },\r\n\r\n\t\t\tflatten: function (value, context)\r\n\t\t\t{\r\n\t\t\t\tif (value == null) return null;\r\n\r\n                let o = [ ];\r\n                \r\n                for (let i = 0; i < value.length; i++)\r\n                    o.push(this.itemType.flatten(value[i], context));\r\n\r\n                return o;\r\n            },\r\n\r\n\t\t\tunflatten: async function (value, context)\r\n\t\t\t{\r\n\t\t\t\tif (value == null) return null;\r\n\r\n                let o = [ ];\r\n\r\n\t\t\t\tfor (let i = 0; i < value.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\to.push(await this.itemType.unflatten(value[i], context));\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            }\r\n        });\r\n    },\r\n\r\n    Object: function()\r\n    {\r\n        return Schema.Type({\r\n\r\n            properties: [ ],\r\n\r\n            property: function (name, type, defvalue=null)\r\n            {\r\n                this.properties.push({ name: name, type: type, defvalue: defvalue });\r\n                return this;\r\n            },\r\n\r\n            flatten: function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tlet o;\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t{\r\n\t\t\t\t\to = { };\r\n\r\n\t\t\t\t\tfor (let i = 0; i < this.properties.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\to[this.properties[i].name] = this.properties[i].type.flatten(value[this.properties[i].name], context);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\to = [ ];\r\n\r\n\t\t\t\t\tfor (let i = 0; i < this.properties.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\to.push(this.properties[i].type.flatten(value[this.properties[i].name], context));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            },\r\n            \r\n            unflatten: async function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tlet o = { };\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t{\r\n\t\t\t\t\tfor (let i = 0; i < this.properties.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\to[this.properties[i].name] = await this.properties[i].type.unflatten(this.properties[i].name in value ? value[this.properties[i].name] : this.properties[i].defvalue, context);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t\tfor (let i = 0; i < this.properties.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\to[this.properties[i].name] = await this.properties[i].type.unflatten(i in value ? value[i] : this.properties[i].defvalue, context);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            }\r\n        });\r\n\t},\r\n\r\n    Class: function (classConstructor)\r\n    {\r\n\t\treturn Schema.Type\r\n\t\t({\r\n            _constructor: classConstructor,\r\n\r\n            constructor: function (classConstructor)\r\n            {\r\n                this._constructor = classConstructor;\r\n                return this;\r\n            },\r\n\r\n            flatten: function (value, context)\r\n            {\r\n                return value == null ? null : value.flatten(context);\r\n            },\r\n\r\n            unflatten: async function (value, context)\r\n            {\r\n\t\t\t\treturn value == null ? null : await (new this._constructor()).unflatten(value, context);\r\n            }\r\n        });\r\n\t},\r\n\r\n\t/*\r\n\t**\tUsed when you want to specify just a single property.\r\n\t*/\r\n    Property: function(name, type)\r\n    {\r\n        return Schema.Type({\r\n\r\n\t\t\tproperty: name,\r\n\t\t\ttype: type,\r\n\r\n\t\t\tname: function (name)\r\n\t\t\t{\r\n\t\t\t\tthis.property = name;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\tis: function (type)\r\n\t\t\t{\r\n\t\t\t\tthis.type = type;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n            flatten: function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tlet o;\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t{\r\n\t\t\t\t\to = { };\r\n\t\t\t\t\to[this.property] = this.type.flatten(value[this.property], context);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\to = this.type.flatten(value[this.property], context);\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            },\r\n\r\n            unflatten: async function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tlet o = { };\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t\to[this.property] = await this.type.unflatten(value[this.property], context);\r\n\t\t\t\telse\r\n\t\t\t\t\to[this.property] = await this.type.unflatten(value, context);\r\n\r\n                return o;\r\n            }\r\n        });\r\n\t},\r\n\r\n    Map: function()\r\n    {\r\n        return Schema.Type({\r\n\r\n            flatten: function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t\treturn value;\r\n\r\n\t\t\t\tlet o = [ ];\r\n\r\n\t\t\t\tfor (let i in value)\r\n\t\t\t\t{\r\n\t\t\t\t\to.push(i);\r\n\t\t\t\t\to.push(value[i]);\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            },\r\n\r\n            unflatten: function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t\treturn value;\r\n\r\n\t\t\t\tlet o = { };\r\n\r\n\t\t\t\tfor (let i = 0; i < value.length; i += 2)\r\n\t\t\t\t\to[value[i]] = value[i+1];\r\n\r\n                return o;\r\n            }\r\n        });\r\n\t}\r\n};\r\n","/*\r\n**\trin/flattenable\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nlet Class = require('./class');\r\n\r\n/**\r\n**\tClass used to add flattening and unflattening capabilities to any object. A \"flat\" object is an object composed\r\n**\tonly of native types, that is: `null,` `boolean`, `integer`, `number`, `array` or `object`.\r\n*/\r\n\r\nmodule.exports = Class.extend\r\n({\r\n\t/**\r\n\t**\tName of the class.\r\n\t*/\r\n\tclassName: \"Flattenable\",\r\n\r\n\t/**\r\n\t**\tType schema used to flatten/unflatten the contents of this class. See Schema class for more information.\r\n\t*/\r\n\ttypeSchema: null,\r\n\r\n\t/**\r\n\t**\tReturns the flattened contents of the object.\r\n\t*/\r\n\tflatten: function (context)\r\n\t{\r\n\t\treturn this.typeSchema.flatten(this, context);\r\n\t},\r\n\r\n\t/**\r\n\t**\tUnflattens the given object and overrides the local contents.\r\n\t*/\r\n\tunflatten: async function (value, context)\r\n\t{\r\n\t\tObject.assign(this, await this.typeSchema.unflatten(value, context));\r\n\t\tawait this.onUnflattened();\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tExecuted when the unflatten() method is called on the object.\r\n\t*/\r\n\tonUnflattened: async function ()\r\n\t{\r\n\t}\r\n});\r\n","/*\r\n**\trin/collection\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nlet Flattenable = require('./flattenable');\r\nlet Schema = require('./schema');\r\nlet Rin = require('./alpha');\r\n\r\n/**\r\n**\tFlattenable collection class, used to store items and manipulate them. The items should also be flattenable.\r\n*/\r\n\r\nmodule.exports = Flattenable.extend\r\n({\r\n\t/**\r\n\t**\tName of the class.\r\n\t*/\r\n\tclassName: \"Collection\",\r\n\r\n\t/**\r\n\t**\tDescribes the type schema of the underlying items.\r\n\t*/\r\n\titemTypeSchema: null,\r\n\r\n\t/**\r\n\t**\tArray of items.\r\n\t*/\r\n\titems: null, /* Array */\r\n\r\n\t/**\r\n\t**\tConstructs the collection.\r\n\t*/\r\n\t__ctor: function (itemTypeSchema)\r\n\t{\r\n\t\tif (!itemTypeSchema) itemTypeSchema = this.itemTypeSchema;\r\n\r\n\t\tif (itemTypeSchema)\r\n\t\t\tthis.typeSchema = Schema.Property('items').is(Schema.Array().of(itemTypeSchema));\r\n\r\n\t\tthis.reset();\r\n\t},\r\n\r\n\t/*\r\n\t**\tExecuted after the collection has been unflattened, re-adds the items to ensure onItemAdded() is called.\r\n\t*/\r\n\tonUnflattened: function()\r\n\t{\r\n\t\tlet items = this.items;\r\n\t\tthis.reset();\r\n\r\n\t\tfor (let i of items)\r\n\t\t\tthis.add(i);\r\n\t},\r\n\r\n\t/*\r\n\t**\tResets the collection to empty. Note that onItemRemoved will not be called.\r\n\t*/\r\n\treset: function ()\r\n\t{\r\n\t\tthis.items = [];\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tClears the contents of the collection (removes each item manually, onItemRemoved will be called).\r\n\t*/\r\n\tclear: function ()\r\n\t{\r\n\t\tvar items = this.items;\r\n\t\tthis.reset();\r\n\r\n\t\tfor (var i = 0; i < items.length; i++)\r\n\t\t\tthis.onItemRemoved (items[i], 0);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tSorts the collection. A comparison function should be provided, or the name of a property to sort by.\r\n\t**\r\n\t**\tObject sort (fn: Function)\r\n\t**\tObject sort (prop: string, [desc:bool=false])\r\n\t*/\r\n\tsort: function (fn, desc)\r\n\t{\r\n\t\tif (typeof(fn) != \"function\")\r\n\t\t{\r\n\t\t\tthis.items.sort(function(a, b)\r\n\t\t\t{\r\n\t\t\t\treturn (a[fn] <= b[fn] ? -1 : 1) * (desc === true ? -1 : 1);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse\r\n\t\t\tthis.items.sort(fn);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tSearches for an item with the specified fields and returns it. The \"inc\" object is the \"inclusive\" map, meaning all fields must match\r\n\t**\tand the optional \"exc\" is the exclusive map, meaning not even one field should match.\r\n\t**\r\n\t**\tObject findItem (inc: Object, exc: Object);\r\n\t*/\t\r\n\tfindItem: function (inc, exc)\r\n\t{\r\n\t\tif (!this.items) return null;\r\n\r\n\t\tfor (var i = 0; i < this.items.length; i++)\r\n\t\t{\r\n\t\t\tif (exc && Rin.partialCompare(this.items[i], exc))\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif (Rin.partialCompare(this.items[i], inc))\r\n\t\t\t\treturn this.items[i];\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the container array.\r\n\t*/\r\n\tgetItems: function ()\r\n\t{\r\n\t\treturn this.items;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the number of items in the collection.\r\n\t*/\r\n\tlength: function ()\r\n\t{\r\n\t\treturn this.items.length;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns true if the collection is empty.\r\n\t*/\r\n\tisEmpty: function ()\r\n\t{\r\n\t\treturn !this.items.length;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the index of the specified item, or -1 if not found.\r\n\t*/\r\n\tindexOf: function (item)\r\n\t{\r\n\t\treturn this.items.indexOf(item);\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the item at the specified index, or null if not found. When `relative` is true, negative offsets are allowed such that -1 refers to the last item.\r\n\t*/\r\n\tgetAt: function (index, relative=false)\r\n\t{\r\n\t\tif (index < 0 && relative == true)\r\n\t\t\tindex += this.items.length;\r\n\r\n\t\treturn index >= 0 && index < this.items.length ? this.items[index] : null;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the first item in the collection.\r\n\t*/\r\n\tfirst: function ()\r\n\t{\r\n\t\treturn this.getAt(0);\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the last item in the collection.\r\n\t*/\r\n\tlast: function ()\r\n\t{\r\n\t\treturn this.getAt(-1, true);\r\n\t},\r\n\r\n\t/*\r\n\t**\tAdds an item at the specified index, effectively moving the remaining items to the right.\r\n\t*/\r\n\taddAt: function (index, item)\r\n\t{\r\n\t\tif (!item || !this.onBeforeItemAdded (item))\r\n\t\t\treturn this;\r\n\r\n\t\tif (index < 0) index = 0;\r\n\t\tif (index > this.items.length) index = this.items.length;\r\n\r\n\t\tif (index == 0)\r\n\t\t{\r\n\t\t\tthis.items.unshift(item);\r\n\t\t}\r\n\t\telse if (index == this.items.length)\r\n\t\t{\r\n\t\t\tthis.items.push(item);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar tmp = this.items.splice(0, index);\r\n\t\t\ttmp.push(item);\r\n\r\n\t\t\tthis.items = tmp.concat(this.items);\r\n\t\t}\r\n\r\n\t\tthis.onItemAdded (item);\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tAdds an item to the start of the collection, onBeforeItemAdded and onItemAdded will be triggered.\r\n\t*/\r\n\tunshift: function (item)\r\n\t{\r\n\t\treturn this.addAt(0, item);\r\n\t},\r\n\r\n\t/*\r\n\t**\tAdds an item to the end of the collection, onBeforeItemAdded and onItemAdded will be triggered.\r\n\t*/\r\n\tpush: function (item)\r\n\t{\r\n\t\treturn this.addAt(this.items.length, item);\r\n\t},\r\n\r\n\t/*\r\n\t**\tAdds an item to the end of the collection, onBeforeItemAdded and onItemAdded will be triggered.\r\n\t*/\r\n\tadd: function (item)\r\n\t{\r\n\t\treturn this.push(item);\r\n\t},\r\n\r\n\t/*\r\n\t**\tRemoves the item at the specified index. When `relative` is true, negative offsets are allowed such that -1 refers to the last item.\r\n\t*/\r\n\tremoveAt: function (index, relative=false)\r\n\t{\r\n\t\tif (index < 0 && relative == true)\r\n\t\t\tindex += this.items.length;\r\n\r\n\t\tif (index < 0 || index >= this.items.length)\r\n\t\t\treturn null;\r\n\r\n\t\tvar item = this.items[index];\r\n\t\tthis.items.splice (index, 1);\r\n\t\tthis.onItemRemoved (item, index);\r\n\r\n\t\treturn item;\r\n\t},\r\n\r\n\t/*\r\n\t**\tRemoves an item from the end of the collection.\r\n\t*/\r\n\tpop: function (item)\r\n\t{\r\n\t\treturn this.removeAt(-1, true);\r\n\t},\r\n\r\n\t/*\r\n\t**\tRemoves an item from the start of the collection.\r\n\t*/\r\n\tshift: function (item)\r\n\t{\r\n\t\treturn this.removeAt(0);\r\n\t},\r\n\r\n\t/*\r\n\t**\tRemoves the specified item from the collection.\r\n\t*/\r\n\tremove: function (item)\r\n\t{\r\n\t\treturn this.removeAt (this.indexOf(item));\r\n\t},\r\n\r\n\t/*\r\n\t**\tRuns the specified callback for each of the items in the collection, if false is returned by the callback this function\r\n\t**\twill exit immediately. Parameters to the callback are: (item, index, collection).\r\n\t*/\r\n\tforEach: function (callback)\r\n\t{\r\n\t\tif (this.isEmpty())\r\n\t\t\treturn this;\r\n\r\n\t\tfor (var i = 0; i < this.items.length; i++)\r\n\t\t\tif (callback (this.items[i], i, this) === false) break;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tExecutes a method call with the specified parameters on each of the items in the collection, if false is returned by the\r\n\t**\titem's method this function will exit immediately.\r\n\t*/\r\n\tforEachCall: function (method, ...args)\r\n\t{\r\n\t\tif (this.isEmpty())\r\n\t\t\treturn this;\r\n\r\n\t\tfor (var i = 0; i < this.items.length; i++)\r\n\t\t\tif (this.items[i][method] (...args) === false) break;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tExactly the same as forEach but in reverse order.\r\n\t*/\r\n\tforEachRev: function (callback)\r\n\t{\r\n\t\tif (this.isEmpty())\r\n\t\t\treturn this;\r\n\r\n\t\tfor (var i = this.items.length-1; i >= 0; i--)\r\n\t\t\tif (callback (this.items[i], i, this) === false) break;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tExactly the same as forEachCall but in reverse order.\r\n\t*/\r\n\tforEachRevCall: function (method, ...args)\r\n\t{\r\n\t\tif (this.isEmpty())\r\n\t\t\treturn this;\r\n\r\n\t\tfor (var i = this.items.length-1; i >= 0; i--)\r\n\t\t\tif (this.items[i][method] (...args) === false) break;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tHandler for the beforeItemAdded event. If returns false the item will not be added.\r\n\t*/\r\n\tonBeforeItemAdded: function (item)\r\n\t{\r\n\t\treturn true;\r\n\t},\r\n\r\n\t/*\r\n\t**\tHandler for the itemAdded event.\r\n\t*/\r\n\tonItemAdded: function (item)\r\n\t{\r\n\t},\r\n\r\n\t/*\r\n\t**\tHandler for the itemRemoved event.\r\n\t*/\r\n\tonItemRemoved: function (item)\r\n\t{\r\n\t}\r\n});\r\n","/*\n**\trin/template\n**\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\n**\thttps://www.rsthn.com/\n**\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nlet Rin = require('./alpha');\n\n/**\n**\tTemplating module. The template formats available are shown below, note that the sym-open and sym-close symbols are by\n**\tdefault the square brackets, however those can be modified since are just parameters.\n**\n**\tHTML Escaped Output:\t\t\t[data.value]\t\t\t\t\tEscapes HTML characters from the output.\n**\tRaw Output:\t\t\t\t\t\t[!data.value]\t\t\t\t\tDoes not escape HTML characters from the output (used to output direct HTML).\n**\tDouble-Quoted Escaped Output:\t[data.value]\t\t\t\t\tEscapes HTML characters and surrounds with double quotes.\n**\tImmediate Reparse:\t\t\t\t[<....] [@....] \"...\" '...'\t\tReparses the contents as if parseTemplate() was called again.\n**\tImmediate Output:\t\t\t\t[:...]\t\t\t\t\t\t\tTakes the contents and outputs exactly as-is without format and optionally surrounded by the\n**\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsym-open and sym-close symbols when the first character is not '<', sym_open or space.\n**\tFiltered Output:\t\t\t\t[functionName ... <expr> ...]\tRuns a function call, 'expr' can be any of the allowed formats shown here (nested if desired),\n**\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfunctionName should map to one of the available expression functions registered in the\n**\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRin.Template.functions map, each of which have their own parameters.\n*/\n\nlet Template = module.exports =\n{\n\t/*\n\t**\tStrict mode flag. When set, any undefined expression function will trigger an exception.\n\t*/\n\tstrict: false,\n\n\t/**\n\t**\tParses a template and returns the compiled 'parts' structure to be used by the 'expand' method.\n\t**\n\t**\t>> array parseTemplate (string template, char sym_open, char sym_close, bool is_tpl=false);\n\t*/\n\tparseTemplate: function (template, sym_open, sym_close, is_tpl=false, root=1)\n\t{\n\t\tlet nflush = 'string', flush = null, state = 0, count = 0;\n\t\tlet str = '', parts = [], mparts = parts, nparts = false;\n\n\t\tif (is_tpl === true)\n\t\t{\n\t\t\ttemplate = template.trim();\n\t\t\tnflush = 'identifier';\n\t\t\tstate = 10;\n\n\t\t\tmparts.push(parts = []);\n\t\t}\n\n\t\ttemplate += \"\\0\";\n\n\t\tfunction unescape (value)\n\t\t{\n\t\t\tif (typeof(value) == 'object')\n\t\t\t{\n\t\t\t\tif (value instanceof Array)\n\t\t\t\t{\n\t\t\t\t\tfor (let i = 0; i < value.length; i++)\n\t\t\t\t\t\tunescape(value[i]);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvalue.data = unescape(value.data);\n\t\t\t\t}\n\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < value.length; i++)\n\t\t\t{\n\t\t\t\tif (value[i] == '\\\\')\n\t\t\t\t{\n\t\t\t\t\tlet r = value[i+1];\n\n\t\t\t\t\tswitch (r)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase 'n': r = \"\\n\"; break;\n\t\t\t\t\t\tcase 'r': r = \"\\r\"; break;\n\t\t\t\t\t\tcase 'f': r = \"\\f\"; break;\n\t\t\t\t\t\tcase 'v': r = \"\\v\"; break;\n\t\t\t\t\t\tcase 't': r = \"\\t\"; break;\n\t\t\t\t\t\tcase 's': r = \"\\s\"; break;\n\t\t\t\t\t\tcase '\"': r = \"\\\"\"; break;\n\t\t\t\t\t\tcase \"'\": r = \"\\'\"; break;\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = value.substr(0, i) + r + value.substr(i+2);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\n\t\tfunction emit (type, data)\n\t\t{\n\t\t\tif (type == 'template')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data, sym_open, sym_close, true, 0);\n\t\t\t}\n\t\t\telse if (type == 'parse')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data, sym_open, sym_close, false, 0);\n\t\t\t\ttype = 'base-string';\n\n\t\t\t\tif (Rin.typeOf(data) == 'array')\n\t\t\t\t{\n\t\t\t\t\ttype = data[0].type;\n\t\t\t\t\tdata = data[0].data;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (type == 'parse-trim-merge')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data.trim().split('\\n').map(i => i.trim()).join(\"\\n\"), sym_open, sym_close, false, 0);\n\t\t\t}\n\t\t\telse if (type == 'parse-merge')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data, sym_open, sym_close, false, 0);\n\t\t\t}\n\t\t\telse if (type == 'parse-merge-alt')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data, '{', '}', false, 0);\n\t\t\t}\n\n\t\t\tif (type == 'parse-merge' || type == 'parse-merge-alt' || type == 'parse-trim-merge')\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < data.length; i++)\n\t\t\t\t{\n\t\t\t\t\tparts.push(data[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t\tparts.push({ type: type, data: data });\n\n\t\t\tif (nparts)\n\t\t\t{\n\t\t\t\tmparts.push(parts = []);\n\t\t\t\tnparts = false;\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < template.length; i++)\n\t\t{\n\t\t\tif (template[i] == '\\\\')\n\t\t\t{\n\t\t\t\tstr += '\\\\';\n\t\t\t\tstr += template[++i];\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tswitch (state)\n\t\t\t{\n\t\t\t\tcase 0:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == '<')\n\t\t\t\t\t{\n\t\t\t\t\t\tstate = 1; count = 1;\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t\tnflush = 'parse-merge';\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == '@')\n\t\t\t\t\t{\n\t\t\t\t\t\tstate = 1; count = 1;\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t\tnflush = 'parse-trim-merge';\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == ':')\n\t\t\t\t\t{\n\t\t\t\t\t\tstate = 12; count = 1;\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t\tnflush = 'string';\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tstate = 1; count = 1;\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t\tnflush = 'template';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tstr += template[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\n\t\t\t\tcase 1:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (template[i] == sym_close)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + sym_close);\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 0;\n\t\t\t\t\t\t\tflush = nflush;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 10:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tflush = nflush;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == '.')\n\t\t\t\t\t{\n\t\t\t\t\t\temit (nflush, str);\n\t\t\t\t\t\temit ('access', '.');\n\n\t\t\t\t\t\tnflush = 'identifier';\n\t\t\t\t\t\tstr = '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i].match(/[\\t\\n\\r\\f\\v ]/) != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tflush = nflush;\n\t\t\t\t\t\tnflush = 'identifier';\n\t\t\t\t\t\tnparts = true;\n\n\t\t\t\t\t\twhile (template[i].match(/[\\t\\n\\r\\f\\v ]/) != null) i++;\n\t\t\t\t\t\ti--;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == '<')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 11; count = 1; nflush = 'parse-merge';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == '@')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 11; count = 1; nflush = 'parse-trim-merge';\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == '\"')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 14; count = 1; nflush = 'parse-merge';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == '\\'')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 15; count = 1; nflush = 'parse-merge';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == '`')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 16; count = 1; nflush = 'parse-merge-alt';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == ':')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 13; count = 1; nflush = 'string';\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) emit (nflush, str);\n\t\t\t\t\t\tstate = 11; count = 1; str = ''; nflush = 'parse';\n\t\t\t\t\t\tstr += template[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (nflush != 'identifier')\n\t\t\t\t\t{\n\t\t\t\t\t\temit (nflush, str);\n\t\t\t\t\t\tstr = '';\n\t\t\t\t\t\tnflush = 'identifier';\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\t\n\t\t\t\tcase 11:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\n\t\t\t\t\tif (template[i] == sym_close)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + sym_close);\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 10;\n\t\n\t\t\t\t\t\t\tif (nflush == 'parse-merge' || nflush == 'parse-merge-alt' || nflush == 'parse-trim-merge')\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 12:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\n\t\t\t\t\tif (template[i] == sym_close)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + sym_close);\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (str.length != 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (!(str[0] == '<' || str[0] == '[' || str[0] == ' '))\n\t\t\t\t\t\t\t\t\tstr = sym_open + str + sym_close;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tstate = 0;\n\t\t\t\t\t\t\tflush = nflush;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 13:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\n\t\t\t\t\tif (template[i] == sym_close)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + sym_close);\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!(str[0] == '<' || str[0] == '[' || str[0] == ' '))\n\t\t\t\t\t\t\t\tstr = sym_open + str + sym_close;\n\n\t\t\t\t\t\t\tstate = 10;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 14:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (template[i] == '\"')\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + '\"');\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 10;\n\t\n\t\t\t\t\t\t\tif (nflush == 'parse-merge' || nflush == 'parse-merge-alt' || nflush == 'parse-trim-merge')\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 15:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (template[i] == '\\'')\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + '\\'');\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 10;\n\t\n\t\t\t\t\t\t\tif (nflush == 'parse-merge' || nflush == 'parse-merge-alt' || nflush == 'parse-trim-merge')\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 16:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (template[i] == '`')\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + '`');\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 10;\n\t\n\t\t\t\t\t\t\tif (nflush == 'parse-merge' || nflush == 'parse-merge-alt' || nflush == 'parse-trim-merge')\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (flush)\n\t\t\t{\n\t\t\t\temit (flush, str);\n\t\t\t\tflush = str = '';\n\t\t\t}\n\t\t}\n\n\t\tif (!is_tpl)\n\t\t{\n\t\t\tlet i = 0;\n\t\t\twhile (i < mparts.length)\n\t\t\t{\n\t\t\t\tif (mparts[i].type == 'string' && mparts[i].data == '')\n\t\t\t\t\tmparts.splice(i, 1);\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\ti = mparts.length-1;\n\t\t\twhile (i > 0)\n\t\t\t{\n\t\t\t\tif (mparts[i].type == 'string' && mparts[i].data == '')\n\t\t\t\t\tmparts.splice(i--, 1);\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (mparts.length == 0)\n\t\t\t\tmparts.push({ type: 'string', data: '' });\n\t\t}\n\n\t\tif (root)\n\t\t\tunescape(mparts);\n\n\t\treturn mparts;\n\t},\n\n\t/**\n\t**\tParses a template and returns the compiled 'parts' structure to be used by the 'expand' method. This\n\t**\tversion assumes the sym_open and sym_close chars are [ and ] respectively.\n\t**\n\t**\t>> array parse (string template);\n\t*/\n\tparse: function (template)\n\t{\n\t\treturn this.parseTemplate(template.trim(), '[', ']', false);\n\t},\n\n\t/**\n\t**\tRemoves all static parts from a parsed template.\n\t**\n\t**\t>> array clean (array parts);\n\t*/\n\tclean: function (parts)\n\t{\n\t\tfor (let i = 0; i < parts.length; i++)\n\t\t{\n\t\t\tif (parts[i].type != 'template')\n\t\t\t{\n\t\t\t\tparts.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\n\t\treturn parts;\n\t},\n\n\t/**\n\t**\tExpands a template using the given data object, ret can be set to 'text' or 'obj' allowing to expand the template as\n\t**\ta string (text) or an array of objects (obj) respectively. If none provided it will be expanded as text.\n\t**\n\t**\t>> string/array expand (array parts, object data, string ret='text', string mode='base-string');\n\t*/\n\texpand: function (parts, data, ret='text', mode='base-string')\n\t{\n\t\tlet s = [];\n\n\t\t// Expand variable parts.\n\t\tif (mode == 'var')\n\t\t{\n\t\t\tlet escape = true;\n\t\t\tlet quote = false;\n\n\t\t\tlet root = data;\n\t\t\tlet last = null;\n\t\t\tlet first = true;\n\t\t\tlet str = '';\n\n\t\t\tfor (let i = 0; i < parts.length && data != null; i++)\n\t\t\t{\n\t\t\t\tswitch (parts[i].type)\n\t\t\t\t{\n\t\t\t\t\tcase 'identifier':\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tstr += parts[i].data;\n\t\t\t\t\t\tlast = null;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'template':\n\t\t\t\t\t\tlast = this.expand(parts[i].data, root, 'arg', 'template');\n\t\t\t\t\t\tstr += typeof(last) != 'object' ? last : '';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'base-string':\n\t\t\t\t\t\tstr += this.expand(parts[i].data, root, 'arg', 'base-string');\n\t\t\t\t\t\tlast = null;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'access':\n\t\t\t\t\t\tif (!last || typeof(last) != 'object')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!str) str = 'this';\n\n\t\t\t\t\t\t\twhile (true)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (str[0] == '!')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\t\t\t\t\tescape = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (str[0] == '$')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\t\t\t\t\tquote = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (str != 'this' && data != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlet tmp = data;\n\t\t\t\t\t\t\t\tdata = (str in data) ? data[str] : null;\n\n\t\t\t\t\t\t\t\tif (data === null && first)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (str in Template.functions)\n\t\t\t\t\t\t\t\t\t\tdata = Template.functions[str] (null, null, tmp);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfirst = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tdata = last;\n\n\t\t\t\t\t\tstr = '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (str != '')\n\t\t\t{\n\t\t\t\tif (str[0] == '!')\n\t\t\t\t{\n\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\tescape = false;\n\t\t\t\t}\n\t\t\t\telse if (str[0] == '$')\n\t\t\t\t{\n\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\tquote = true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (str != 'this')\n\t\t\t{\n\t\t\t\tlet failed = false;\n\n\t\t\t\tif (data != null)\n\t\t\t\t{\n\t\t\t\t\tif (!(str in data))\n\t\t\t\t\t{\n\t\t\t\t\t\tfailed = true;\n\t\t\t\t\t\tdata = null;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tdata = data[str];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tfailed = true;\n\n\t\t\t\tif (failed && parts.length == 1)\n\t\t\t\t{\n\t\t\t\t\tif (Template.strict == true)\n\t\t\t\t\t\tthrow new Error ('Expression function `'+str+'` not found.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (typeof(data) == 'string')\n\t\t\t{\n\t\t\t\tif (escape)\n\t\t\t\t\tdata = data.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n\n\t\t\t\tif (quote)\n\t\t\t\t\tdata = '\"' + data + '\"';\n\t\t\t}\n\n\t\t\ts.push(data);\n\t\t}\n\n\t\t// Expand variable parts and returns a reference to it.\n\t\tif (ret == 'varref')\n\t\t{\n\t\t\tlet root = data;\n\t\t\tlet last = null;\n\t\t\tlet first = true;\n\t\t\tlet str = '';\n\n\t\t\tfor (let i = 0; i < parts.length && data != null; i++)\n\t\t\t{\n\t\t\t\tswitch (parts[i].type)\n\t\t\t\t{\n\t\t\t\t\tcase 'identifier':\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tstr += parts[i].data;\n\t\t\t\t\t\tlast = null;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'template':\n\t\t\t\t\t\tlast = this.expand(parts[i].data, root, 'arg', 'template');\n\t\t\t\t\t\tstr += typeof(last) != 'object' ? last : '';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'base-string':\n\t\t\t\t\t\tstr += this.expand(parts[i].data, root, 'arg', 'base-string');\n\t\t\t\t\t\tlast = null;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'access':\n\t\t\t\t\t\tif (!last || typeof(last) != 'object')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!str) str = 'this';\n\n\t\t\t\t\t\t\twhile (true)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (str[0] == '!')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (str[0] == '$')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (str != 'this' && data != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlet tmp = data;\n\t\t\t\t\t\t\t\tdata = (str in data) ? data[str] : null;\n\n\t\t\t\t\t\t\t\tif (data === null && first)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (str in Template.functions)\n\t\t\t\t\t\t\t\t\t\tdata = Template.functions[str] (null, null, tmp);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfirst = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tdata = last;\n\n\t\t\t\t\t\tstr = '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (str != '')\n\t\t\t{\n\t\t\t\tif (str[0] == '!')\n\t\t\t\t{\n\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t}\n\t\t\t\telse if (str[0] == '$')\n\t\t\t\t{\n\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn str != 'this' ? [data, str] : null;\n\t\t}\n\n\t\t// Expand function parts.\n\t\tif (mode == 'fn')\n\t\t{\n\t\t\tvar args = [];\n\n\t\t\targs.push(Template.expand(parts[0], data, 'text', 'base-string'));\n\n\t\t\tif ('_'+args[0] in Template.functions)\n\t\t\t\targs[0] = '_'+args[0];\n\n\t\t\tif (!(args[0] in Template.functions))\n\t\t\t{\n\t\t\t\tif (Template.strict == true)\n\t\t\t\t\tthrow new Error ('Expression function `'+args[0]+'` not found.');\n\n\t\t\t\treturn `(Unknown: ${args[0]})`;\n\t\t\t}\n\n\t\t\tif (args[0][0] == '_')\n\t\t\t\treturn Template.functions[args[0]] (parts, data);\n\n\t\t\tfor (let i = 1; i < parts.length; i++)\n\t\t\t\targs.push(Template.expand(parts[i], data, 'arg', 'base-string'));\n\n\t\t\ts.push(Template.functions[args[0]] (args, parts, data));\n\t\t}\n\n\t\t// Template mode.\n\t\tif (mode == 'template')\n\t\t{\n\t\t\tif (parts.length == 1)\n\t\t\t{\n\t\t\t\tif (parts[0].length == 1 && parts[0][0].type == 'string')\n\t\t\t\t\treturn parts[0][0].data;\n\n\t\t\t\tif (parts[0].length == 1 && parts[0][0].type == 'identifier')\n\t\t\t\t{\n\t\t\t\t\tlet name = parts[0][0].data;\n\n\t\t\t\t\tif (name in Template.functions || '_'+name in Template.functions)\n\t\t\t\t\t\treturn Template.expand(parts, data, ret, 'fn');\n\t\t\t\t}\n\t\n\t\t\t\treturn Template.expand(parts[0], data, ret, 'var');\n\t\t\t}\n\n\t\t\treturn Template.expand(parts, data, ret, 'fn');\n\t\t}\n\n\t\t// Expand parts.\n\t\tif (mode == 'base-string')\n\t\t{\n\t\t\tlet index = -1;\n\n\t\t\tfor (let i of parts)\n\t\t\t{\n\t\t\t\tlet tmp = null;\n\t\t\t\tindex++;\n\n\t\t\t\tswitch (i.type)\n\t\t\t\t{\n\t\t\t\t\tcase 'template':\n\t\t\t\t\t\ttmp = Template.expand(i.data, data, ret, 'template');\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'string': case 'identifier':\n\t\t\t\t\t\ttmp = i.data;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'base-string':\n\t\t\t\t\t\ttmp = Template.expand(i.data, data, ret, 'base-string');\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (ret == 'void')\n\t\t\t\t\tcontinue;\n\n\t\t\t\tif (ret == 'last' && index != parts.length-1)\n\t\t\t\t\tcontinue;\n\n\t\t\t\ts.push(tmp);\n\t\t\t}\n\t\t}\n\n\t\t// Return types for direct objects.\n\t\tif (ret == 'obj') return s;\n\n\t\tif (ret == 'last')\n\t\t{\n\t\t\tif (typeOf(s) == 'Rose\\\\Arry')\n\t\t\t\ts = s[0];\n\n\t\t\treturn s;\n\t\t}\n\n\t\t// When the output is not really needed.\n\t\tif (ret == 'void') return null;\n\n\t\t// Return as argument ('object' if only one, or string if more than one), that is, the first item in the result.\n\t\tif (ret == 'arg')\n\t\t{\n\t\t\tif (Rin.typeOf(s) == 'array')\n\t\t\t{\n\t\t\t\tif (s.length != 1)\n\t\t\t\t\treturn s.join('');\n\n\t\t\t\treturn s[0];\n\t\t\t}\n\n\t\t\treturn s;\n\t\t}\n\n\t\tif (ret == 'text' && Rin.typeOf(s) == 'array')\n\t\t{\n\t\t\tlet f = (e => e != null && typeof(e) == 'object' ? ('map' in e ? e.map(f).join('') : ('join' in e ? e.join('') : e.toString())) : e);\n\t\t\ts = s.map(f).join('');\n\t\t}\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tParses the given template and returns a function that when called with an object will expand the template.\n\t**\n\t**\t>> object compile (string template);\n\t*/\n\tcompile: function (template)\n\t{\n\t\ttemplate = Template.parse(template);\n\n\t\treturn function (data=null, mode='text') {\n\t\t\treturn Template.expand(template, data ? data : { }, mode);\n\t\t};\n\t},\n\n\t/**\n\t**\tParses and expands the given template immediately.\n\t**\n\t**\t>> object eval (string template, object data, string mode='text');\n\t*/\n\teval: function (template, data=null, mode='text')\n\t{\n\t\ttemplate = Template.parse(template);\n\t\treturn Template.expand(template, data ? data : { }, mode);\n\t},\n\n\t/**\n\t**\tExpands the template as 'arg' and returns the result.\n\t**\n\t**\t>> object value (string parts, object data);\n\t*/\n\tvalue: function (parts, data=null)\n\t{\n\t\treturn Rin.typeOf(parts) != 'array' ? parts : Template.expand(parts, data ? data : { }, 'arg');\n\t},\n\n\t/**\n\t**\tRegisters an expression function.\n\t**\n\t**\t>> object register (string name, function fn);\n\t*/\n\tregister: function (name, fn)\n\t{\n\t\tTemplate.functions[name] = fn;\n\t},\n\n\t/**\n\t**\tCalls an expression function.\n\t**\n\t**\t>> object call (string name, object args, object data);\n\t*/\n\t'call': function (name, args, data=null)\n\t{\n\t\tif (name in Template.functions)\n\t\t\treturn Template.functions[name] (args, null, data);\n\n\t\treturn null;\n\t},\n\n\t/**\n\t**\tReturns a map given a 'parts' array having values of the form \"name: value\" or \":name value\".\n\t**\n\t**\t>> Map getNamedValues (array parts, object data, int i=1, bool expanded=true);\n\t*/\n\tgetNamedValues: function (parts, data, i=1, expanded=true)\n\t{\n\t\tlet s = { };\n\t\tlet mode = 0;\n\t\n\t\tfor (; i < parts.length; i += 2)\n\t\t{\n\t\t\tlet key = Template.expand(parts[i], data, 'arg');\n\n\t\t\tif (!mode) {\n\t\t\t\tif (key.startsWith(':')) mode = 1; else mode = key.endsWith(':') ? 2 : 3;\n\t\t\t}\n\n\t\t\tif (mode == 1)\n\t\t\t\tkey = key.substr(1);\n\t\t\telse if (mode == 2)\n\t\t\t\tkey = key.substr(0, key.length-1);\n\n\t\t\tif (expanded)\n\t\t\t\ts[key] = Template.expand(parts[i+1], data, 'arg');\n\t\t\telse\n\t\t\t\ts[key] = parts[i+1];\n\t\t}\n\n\t\treturn s;\n\t}\n};\n\n\n/**\n**\tTemplate functions, functions that are used to format data. Each function takes three parameters (args, parts and data). By default the function arguments\n**\tare expanded and passed via 'args' for convenience, however if the function name starts with '_' the 'args' parameter will be skipped and only (parts, data)\n**\twill be available, each 'part' must be expanded manually by calling Template.expand.\n*/\n\nTemplate.functions =\n{\n\t/**\n\t**\tExpression functions.\n\t*/\n\t'null': function(args) { return null; },\n\t'true': function(args) { return true; },\n\t'false': function(args) { return false; },\n\n\t'len': function(args) { return args[1].toString().length; },\n\t'int': function(args) { return ~~args[1]; },\n\t'str': function(args) { return args[1].toString(); },\n\t'float': function(args) { return parseFloat(args[1]); },\n\t'chr': function(args) { return String.fromCharCode(args[1]); },\n\t'ord': function(args) { return args[1].toString().charCodeAt(0); },\n\n\t'not': function(args) { return !args[1]; },\n\t'neg': function(args) { return -args[1]; },\n\t'abs': function(args) { return Math.abs(args[1]); },\n\n\t'and': function(args) { for (let i = 1; i < args.length; i++) if (!args[i]) return false; return true; },\n\t'or': function(args) { for (let i = 1; i < args.length; i++) if (~~args[i]) return true; return false; },\n\n\t'eq': function(args) { return args[1] == args[2]; },\n\t'ne': function(args) { return args[1] != args[2]; },\n\t'lt': function(args) { return args[1] < args[2]; },\n\t'le': function(args) { return args[1] <= args[2]; },\n\t'gt': function(args) { return args[1] > args[2]; },\n\t'ge': function(args) { return args[1] >= args[2]; },\n\t'isnotnull': function(args) { return !!args[1]; },\n\t'isnull': function(args) { return !args[1]; },\n\t'iszero': function(args) { return parseInt(args[1]) == 0; },\n\n\t'eq?': function(args) { return args[1] == args[2]; },\n\t'ne?': function(args) { return args[1] != args[2]; },\n\t'lt?': function(args) { return args[1] < args[2]; },\n\t'le?': function(args) { return args[1] <= args[2]; },\n\t'gt?': function(args) { return args[1] > args[2]; },\n\t'ge?': function(args) { return args[1] >= args[2]; },\n\t'notnull?': function(args) { return !!args[1]; },\n\t'null?': function(args) { return !args[1]; },\n\t'zero?': function(args) { return parseInt(args[1]) == 0; },\n\n\t'typeof': function(args) { return Rin.typeOf(args[1]); },\n\n\t'*': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x *= args[i]; return x; },\n\t'/': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x /= args[i]; return x; },\n\t'+': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x -= -args[i]; return x; },\n\t'-': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x -= args[i]; return x; },\n\t'mul': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x *= args[i]; return x; },\n\t'div': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x /= args[i]; return x; },\n\t'sum': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x -= -args[i]; return x; },\n\t'sub': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x -= args[i]; return x; },\n\t'mod': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x %= args[i]; return x; },\n\t'pow': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x = Math.pow(x, args[i]); return x; },\n\n\t/**\n\t**\tReturns the JSON representation of the expression.\n\t**\n\t**\tjson <expr>\n\t*/\n\t'json': function (args)\n\t{\n\t\treturn JSON.stringify(args[1]);\n\t},\n\n\t/**\n\t**\tSets one or more variables in the data context.\n\t**\n\t**\tset <var-name> <expr> [<var-name> <expr>]*\n\t*/\n\t'_set': function (parts, data)\n\t{\n\t\tfor (let i = 1; i+1 < parts.length; i += 2)\n\t\t{\n\t\t\tlet value = Template.value(parts[i+1], data);\n\n\t\t\tif (parts[i].length > 1)\n\t\t\t{\n\t\t\t\tlet ref = Template.expand(parts[i], data, 'varref');\n\t\t\t\tif (ref != null) ref[0][ref[1]] = value;\n\t\t\t}\n\t\t\telse\n\t\t\t\tdata[Template.value(parts[i], data)] = value;\n\t\t}\n\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tRemoves one or more variables from the data context.\n\t**\n\t**\tunset <var-name> [<var-name>]*\n\t*/\n\t'_unset': function (parts, data)\n\t{\n\t\tfor (let i = 1; i < parts.length; i++)\n\t\t{\n\t\t\tif (parts[i].length > 1)\n\t\t\t{\n\t\t\t\tlet ref = Template.expand(parts[i], data, 'varref');\n\t\t\t\tif (ref != null) delete ref[0][ref[1]];\n\t\t\t}\n\t\t\telse\n\t\t\t\tdelete data[Template.value(parts[i], data)];\n\t\t}\n\n\t\treturn null;\n\t},\n\n\n\t/**\n\t**\tReturns the expression without white-space on the left or right. The expression can be a string or an array.\n\t**\n\t**\ttrim <expr>\n\t*/\n\t'trim': function (args)\n\t{\n\t\treturn args[1] ? (typeof(args[1]) == \"object\" ? args[1].map(e => e.trim()) : args[1].trim()) : '';\n\t},\n\n\t/**\n\t**\tReturns the expression in uppercase. The expression can be a string or an array.\n\t**\n\t**\tupper <expr>\n\t*/\n\t'upper': function (args)\n\t{\n\t\treturn args[1] ? (typeof(args[1]) == \"object\" ? args[1].map(e => e.toUpperCase()) : args[1].toUpperCase()) : '';\n\t},\n\n\t/**\n\t**\tReturns the expression in lower. The expression can be a string or an array.\n\t**\n\t**\tlower <expr>\n\t*/\n\t'lower': function (args)\n\t{\n\t\treturn args[1] ? (typeof(args[1]) == \"object\" ? args[1].map(e => e.toLowerCase()) : args[1].toLowerCase()) : '';\n\t},\n\n\t/**\n\t**\tReturns a sub-string of the given string.\n\t**\n\t**\tsubstr <start> <count> <string>\n\t**\tsubstr <start> <string>\n\t*/\n\t'substr': function (args)\n\t{\n\t\tlet s = args[args.length-1].toString();\n\n\t\tlet start = 0;\n\t\tlet count = null;\n\n\t\tif (args.length == 4)\n\t\t{\n\t\t\tstart = ~~(args[1]);\n\t\t\tcount = ~~(args[2]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstart = ~~(args[1]);\n\t\t\tcount = null;\n\t\t}\n\n\t\tif (start < 0) start += s.length;\n\t\tif (count < 0) count += s.length;\n\n\t\tif (count === null)\n\t\t\tcount = s.length - start;\n\n\t\treturn s.substr(start, count);\n\t},\n\n\t/**\n\t**\tReplaces a matching string with the given replacement string in a given text.\n\t**\n\t**\treplace <search> <replacement> <text>\n\t*/\n\t'replace': function (args)\n\t{\n\t\treturn args[3].split(args[1]).join(args[2]);\n\t},\n\n\t/**\n\t**\tConverts all new-line chars in the expression to <br/>, the expression can be a string or an array.\n\t**\n\t**\tnl2br <expr>\n\t*/\n\t'nl2br': function (args)\n\t{\n\t\treturn args[1] ? (typeof(args[1]) == \"object\" ? args[1].map(e => e.replace(/\\n/g, \"<br/>\")) : args[1].replace(/\\n/g, \"<br/>\")) : '';\n\t},\n\n\t/**\n\t**\tReturns the expression inside an XML tag named 'tag-name', the expression can be a string or an array.\n\t**\n\t**\t% <tag-name> <expr>\n\t*/\n\t'%': function (args)\n\t{\n\t\targs.shift();\n\t\tvar name = args.shift();\n\n\t\tlet s = '';\n\n\t\tfor (let i = 0; i < args.length; i++)\n\t\t{\n\t\t\tif (Rin.typeOf(args[i]) == 'array')\n\t\t\t{\n\t\t\t\ts += `<${name}>`;\n\t\t\t\t\n\t\t\t\tfor (let j = 0; j < args[i].length; j++)\n\t\t\t\t\ts += args[i][j];\n\n\t\t\t\ts += `</${name}>`;\n\t\t\t}\n\t\t\telse\n\t\t\t\ts += `<${name}>${args[i]}</${name}>`;\n\t\t}\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tReturns the expression inside an XML tag named 'tag-name', attributes are supported.\n\t**\n\t**\t%% <tag-name> [<attr> <value>]* [<content>]\n\t*/\n\t'%%': function (args)\n\t{\n\t\targs.shift();\n\t\tvar name = args.shift();\n\n\t\tlet attr = '';\n\t\tlet text = '';\n\n\t\tfor (let i = 0; i < args.length; i += 2)\n\t\t{\n\t\t\tif (i+1 < args.length)\n\t\t\t\tattr += ` ${args[i]}=\"${args[i+1]}\"`;\n\t\t\telse\n\t\t\t\ttext = args[i];\n\t\t}\n\n\t\treturn text ? `<${name}${attr}>${text}</${name}>` : `<${name}${attr}/>`;\n\t},\n\n\t/**\n\t**\tJoins the given array expression into a string. The provided string-expr will be used as separator.\n\t**\n\t**\tjoin <string-expr> <array-expr>\n\t*/\n\t'join': function (args)\n\t{\n\t\tif (args[2] && Rin.typeOf(args[2]) == 'array')\n\t\t\treturn args[2].join(args[1]);\n\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tSplits the given expression by the specified string. Returns an array.\n\t**\n\t**\tsplit <string-expr> <expr>\n\t*/\n\t'split': function (args)\n\t{\n\t\tif (args[2] && typeof(args[2]) == \"string\")\n\t\t\treturn args[2].split(args[1]);\n\n\t\treturn [];\n\t},\n\n\t/**\n\t**\tReturns an array with the keys of the given object-expr.\n\t**\n\t**\tkeys <object-expr>\n\t*/\n\t'keys': function (args)\n\t{\n\t\tif (args[1] && typeof(args[1]) == \"object\")\n\t\t\treturn Object.keys(args[1]);\n\n\t\treturn [];\n\t},\n\n\t/**\n\t**\tReturns an array with the values of the given object-expr.\n\t**\n\t**\tvalues <object-expr>\n\t*/\n\t'values': function (args)\n\t{\n\t\tif (args[1] && typeof(args[1]) == \"object\")\n\t\t\treturn Object.values(args[1]);\n\n\t\treturn [];\n\t},\n\n\t/**\n\t**\tConstructs an array obtained by expanding the given template for each of the items in the list-expr, the mandatory varname\n\t**\tparameter (namely 'i') indicates the name of the variable that will contain the data of each item as the list-expr is\n\t**\ttraversed. Extra variables i# and i## (suffix '#' and '##') are introduced to denote the index/key and numeric index\n\t**\tof the current item respectively, note that the later will always have a numeric value.\n\t**\n\t**\teach <varname> <list-expr> <template>\n\t*/\n\t'_each': function (parts, data)\n\t{\n\t\tlet var_name = Template.expand(parts[1], data, 'arg');\n\t\tlet list = Template.expand(parts[2], data, 'arg');\n\n\t\tlet s = [];\n\t\tlet j = 0;\n\n\t\tif (!list) return s;\n\n\t\tfor (let i in list)\n\t\t{\n\t\t\tdata[var_name] = list[i];\n\t\t\tdata[var_name + '##'] = j++;\n\t\t\tdata[var_name + '#'] = i;\n\n\t\t\ts.push(Template.expand(parts[3], data, 'text'));\n\t\t}\n\n\t\tdelete data[var_name];\n\t\tdelete data[var_name + '##'];\n\t\tdelete data[var_name + '#'];\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tExpands the given template for each of the items in the list-expr, the mandatory varname parameter (namely 'i') indicates the name of the variable\n\t**\tthat will contain the data of each item as the list-expr is traversed. Extra variables i# and i## (suffix '#' and '##') are introduced to denote\n\t**\tthe index/key and numeric index of the current item respectively, note that the later will always have a numeric value.\n\t**\n\t**\tDoes not produce any output (returns null).\n\t**\n\t**\tforeach <varname> <list-expr> <template>\n\t*/\n\t'_foreach': function (parts, data)\n\t{\n\t\tlet var_name = Template.expand(parts[1], data, 'arg');\n\t\tlet list = Template.expand(parts[2], data, 'arg');\n\n\t\tlet j = 0;\n\n\t\tif (!list) return null;\n\n\t\tfor (let i in list)\n\t\t{\n\t\t\tdata[var_name] = list[i];\n\t\t\tdata[var_name + '##'] = j++;\n\t\t\tdata[var_name + '#'] = i;\n\n\t\t\tTemplate.expand(parts[3], data, 'text');\n\t\t}\n\n\t\tdelete data[var_name];\n\t\tdelete data[var_name + '##'];\n\t\tdelete data[var_name + '#'];\n\n\t\treturn null;\n\t},\n\n\t/**\n\t**\tReturns the valueA if the expression is true otherwise valueB, this is a short version of the 'if' function with the\n\t**\tdifference that the result is 'obj' instead of text.\n\t**\n\t**\t? <expr> <valueA> [<valueB>]\n\t*/\n\t'_?': function (parts, data)\n\t{\n\t\tif (Template.expand(parts[1], data, 'arg'))\n\t\t\treturn Template.expand(parts[2], data, 'arg');\n\n\t\tif (parts.length > 3)\n\t\t\treturn Template.expand(parts[3], data, 'arg');\n\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tReturns the valueA if it is not null (or empty or zero), otherwise returns valueB.\n\t**\n\t**\t?? <valueA> <valueB>\n\t*/\n\t'_??': function (parts, data)\n\t{\n\t\tlet value = Template.expand(parts[1], data, 'arg');\n\t\tif (value) return value;\n\t\n\t\treturn Template.expand(parts[2], data, 'arg');\n\t},\n\n\t/**\n\t**\tReturns the value if the expression is true, supports 'elif' and 'else' as well. The result of this function is always text.\n\t**\n\t**\tif <expr> <value> [elif <expr> <value>] [else <value>]\n\t*/\n\t'_if': function (parts, data)\n\t{\n\t\tfor (let i = 0; i < parts.length; i += 3)\n\t\t{\n\t\t\tif (Template.expand(parts[i], data, 'arg') == 'else')\n\t\t\t\treturn Template.expand(parts[i+1], data, 'text');\n\n\t\t\tif (Template.expand(parts[i+1], data, 'arg'))\n\t\t\t\treturn Template.expand(parts[i+2], data, 'text');\n\t\t}\n\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tLoads the expression value and attempts to match one case.\n\t**\n\t**\tswitch <expr> <case1> <value1> ... <caseN> <valueN> default <defvalue> \n\t*/\n\t'_switch': function (parts, data)\n\t{\n\t\tlet value = Template.expand(parts[1], data, 'arg');\n\n\t\tfor (let i = 2; i < parts.length; i += 2)\n\t\t{\n\t\t\tlet case_value = Template.expand(parts[i], data, 'arg');\n\t\t\tif (case_value == value || case_value == 'default')\n\t\t\t\treturn Template.expand(parts[i+1], data, 'text');\n\t\t}\n\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tExits the current inner most loop.\n\t**\n\t**\tbreak\n\t*/\n\t'_break': function (parts, data)\n\t{\n\t\tthrow new Error('EXC_BREAK');\n\t},\n\n\t/**\n\t**\tSkips execution and continues the next cycle of the current inner most loop.\n\t**\n\t**\tcontinue\n\t*/\n\t'_continue': function (parts, data)\n\t{\n\t\tthrow new Error('EXC_CONTINUE');\n\t},\n\n\t/**\n\t**\tConstructs an array with the results of repeating the specified template for a number of times.\n\t**\n\t**\trepeat <varname:i> [from <number>] [to <number>] [count <number>] [step <number>] <template>\n\t*/\n\t'_repeat': function (parts, data)\n\t{\n\t\tif (parts.length < 3 || (parts.length & 1) != 1)\n\t\t\treturn '(`repeat`: Wrong number of parameters)';\n\n\t\tlet var_name = Template.value(parts[1], data);\n\t\tlet count = null;\n\t\tlet from = 0, to = null;\n\t\tlet step = null;\n\n\t\tfor (let i = 2; i < parts.length-1; i+=2)\n\t\t{\n\t\t\tlet value = Template.value(parts[i], data);\n\n\t\t\tswitch (value.toLowerCase())\n\t\t\t{\n\t\t\t\tcase 'from':\n\t\t\t\t\tfrom = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'to':\n\t\t\t\t\tto = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'count':\n\t\t\t\t\tcount = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'step':\n\t\t\t\t\tstep = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet tpl = parts[parts.length-1];\n\t\tlet arr = [];\n\n\t\tif (to !== null)\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = from > to ? -1 : 1;\n\n\t\t\tif (step < 0)\n\t\t\t{\n\t\t\t\tfor (let i = from; i >= to; i += step)\n\t\t\t\t{\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\t\tarr.push(Template.value(tpl, data));\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlet name = e.message;\n\t\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (let i = from; i <= to; i += step)\n\t\t\t\t{\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\t\tarr.push(Template.value(tpl, data));\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlet name = e.message;\n\t\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (count !== null)\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = 1;\n\n\t\t\tfor (let i = from; count > 0; count--, i += step)\n\t\t\t{\n\t\t\t\ttry {\n\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\tarr.push(Template.value(tpl, data));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tlet name = e.message;\n\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = 1;\n\t\n\t\t\tfor (let i = from; ; i += step)\n\t\t\t{\n\t\t\t\ttry {\n\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\tarr.push(Template.value(tpl, data));\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\tlet name = e.message;\n\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdelete data[var_name];\n\t\treturn arr;\n\t},\n\n\t/**\n\t**\tRepeats the specified template for a number of times.\n\t**\n\t**\tfor <varname:i> [from <number>] [to <number>] [count <number>] [step <number>] <template>\n\t*/\n\t'_for': function (parts, data)\n\t{\n\t\tif (parts.length < 3 || (parts.length & 1) != 1)\n\t\t\treturn '(`for`: Wrong number of parameters)';\n\n\t\tlet var_name = Template.value(parts[1], data);\n\t\tlet count = null;\n\t\tlet from = 0; to = null;\n\t\tlet step = null;\n\n\t\tfor (let i = 2; i < parts.length-1; i+=2)\n\t\t{\n\t\t\tvalue = Template.value(parts[i], data);\n\n\t\t\tswitch (value.toLowerCase())\n\t\t\t{\n\t\t\t\tcase 'from':\n\t\t\t\t\tfrom = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'to':\n\t\t\t\t\tto = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'count':\n\t\t\t\t\tcount = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'step':\n\t\t\t\t\tstep = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet tpl = parts[parts.length-1];\n\n\t\tif (to !== null)\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = from > to ? -1 : 1;\n\n\t\t\tif (step < 0)\n\t\t\t{\n\t\t\t\tfor (let i = from; i >= to; i += step)\n\t\t\t\t{\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\t\tTemplate.value(tpl, data);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlet name = e.message;\n\t\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (let i = from; i <= to; i += step)\n\t\t\t\t{\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\t\tTemplate.value(tpl, data);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlet name = e.message;\n\t\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (count !== null)\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = 1;\n\n\t\t\tfor (let i = from; count > 0; count--, i += step)\n\t\t\t{\n\t\t\t\ttry {\n\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\tTemplate.value(tpl, data);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tlet name = e.message;\n\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = 1;\n\t\n\t\t\tfor (let i = from; ; i += step)\n\t\t\t{\n\t\t\t\ttry {\n\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\tTemplate.value(tpl, data);\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\tlet name = e.message;\n\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdelete data[var_name];\n\t\treturn null;\n\t},\n\n\t/**\n\t**\tRepeats the specified template infinitely until a \"break\" is found.\n\t**\n\t**\tloop <template>\n\t*/\n\t'_loop': function (parts, data)\n\t{\n\t\tif (parts.length < 2)\n\t\t\treturn '(`loop`: Wrong number of parameters)';\n\n\t\tlet tpl = parts[1];\n\n\t\twhile (true)\n\t\t{\n\t\t\ttry {\n\t\t\t\tTemplate.value(tpl, data);\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\tlet name = e.message;\n\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t**\tWrites the specified arguments to the console.\n\t**\n\t**\techo <expr> [<expr>...]\n\t*/\n\t'_echo': function (parts, data)\n\t{\n\t\tlet s = '';\n\n\t\tfor (let i = 1; i < parts.length; i++)\n\t\t\ts += Template.expand(parts[i], data, 'arg');\n\n\t\tconsole.log(s);\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tConstructs a list from the given arguments and returns it.\n\t**\n\t**\t# <expr> [<expr>...]\n\t*/\n\t'_#': function (parts, data)\n\t{\n\t\tlet s = [];\n\n\t\tfor (let i = 1; i < parts.length; i++)\n\t\t\ts.push(Template.expand(parts[i], data, 'arg'));\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tConstructs a non-expanded list from the given arguments and returns it.\n\t**\n\t**\t## <expr> [<expr>...]\n\t*/\n\t'_##': function (parts, data)\n\t{\n\t\tlet s = [];\n\n\t\tfor (let i = 1; i < parts.length; i++)\n\t\t\ts.push(parts[i]);\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tConstructs an associative array (dictionary) and returns it.\n\t**\n\t**\t& <name>: <expr> [<name>: <expr>...]\n\t**\t& :<name> <expr> [:<name> <expr>...]\n\t*/\n\t'_&': function (parts, data)\n\t{\n\t\treturn Template.getNamedValues (parts, data, 1, true);\n\t},\n\n\t/**\n\t**\tConstructs a non-expanded associative array (dictionary) and returns it.\n\t**\n\t**\t&& <name>: <expr> [<name>: <expr>...]\n\t**\t&& :<name> <expr> [:<name> <expr>...]\n\t*/\n\t'_&&': function (parts, data)\n\t{\n\t\treturn Template.getNamedValues (parts, data, 1, false);\n\t},\n\n\t/**\n\t**\tReturns true if the specified map contains all the specified keys. If it fails the global variable `err` will contain an error message.\n\t**\n\t**\tcontains <expr> <name> [<name>...]\n\t*/\n\t'contains': function (args, parts, data)\n\t{\n\t\tlet value = args[1];\n\n\t\tif (typeof(value) != 'object')\n\t\t{\n\t\t\tdata.err = 'Argument is not a Map';\n\t\t\treturn false;\n\t\t}\n\n\t\tlet s = '';\n\n\t\tfor (let i = 2; i < args.length; i++)\n\t\t{\n\t\t\tif (!(args[i] in value))\n\t\t\t\ts += ', '+args[i];\n\t\t}\n\n\t\tif (s != '')\n\t\t{\n\t\t\tdata.err = s.substr(1);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t**\tReturns true if the specified map has the specified key. Returns boolean.\n\t**\n\t**\thas <name> <expr>\n\t*/\n\t'has': function (args, parts, data)\n\t{\n\t\tlet value = args[2];\n\n\t\tif (Rin.typeOf(value) != 'object')\n\t\t\treturn false;\n\n\t\treturn args[1] in value;\n\t},\n\n\t/**\n\t**\tReturns a new array/map contaning the transformed values of the array/map (evaluating the template). And just as in 'each', the i# and i## variables be available.\n\t**\n\t**\tmap <varname> <list-expr> <template>\n\t*/\n\t'_map': function (parts, data)\n\t{\n\t\tlet var_name = Template.expand(parts[1], data, 'arg');\n\n\t\tlet list = Template.expand(parts[2], data, 'arg');\n\t\tif (!list) return list;\n\n\t\tlet arrayMode = Rin.typeOf(list) == 'array' ? true : false;\n\t\tlet output = arrayMode ? [] : {};\n\t\tlet j = 0;\n\n\t\tfor (let i in list)\n\t\t{\n\t\t\tdata[var_name] = list[i];\n\t\t\tdata[var_name + '##'] = j++;\n\t\t\tdata[var_name + '#'] = i;\n\n\t\t\tif (arrayMode)\n\t\t\t\toutput.push(Template.expand(parts[3], data, 'arg'));\n\t\t\telse\n\t\t\t\toutput[i] = Template.expand(parts[3], data, 'arg');\n\t\t}\n\n\t\tdelete data[var_name];\n\t\tdelete data[var_name + '##'];\n\t\tdelete data[var_name + '#'];\n\n\t\treturn output;\n\t},\n\n\t/**\n\t**\tReturns a new array/map contaning the elements where the template evaluates to non-zero. Just as in 'each', the i# and i## variables be available.\n\t**\n\t**\tfilter <varname> <list-expr> <template>\n\t*/\n\t'_filter': function (parts, data)\n\t{\n\t\tlet var_name = Template.expand(parts[1], data, 'arg');\n\n\t\tlet list = Template.expand(parts[2], data, 'arg');\n\t\tif (!list) return list;\n\n\t\tlet arrayMode = Rin.typeOf(list) == 'array' ? true : false;\n\t\tlet output = arrayMode ? [] : {};\n\t\tlet j = 0;\n\n\t\tfor (let i in list)\n\t\t{\n\t\t\tdata[var_name] = list[i];\n\t\t\tdata[var_name + '##'] = j++;\n\t\t\tdata[var_name + '#'] = i;\n\n\t\t\tif (~~Template.expand(parts[3], data, 'arg'))\n\t\t\t{\n\t\t\t\tif (arrayMode)\n\t\t\t\t\toutput.push(list[i]);\n\t\t\t\telse\n\t\t\t\t\toutput[i] = list[i];\n\t\t\t}\n\t\t}\n\n\t\tdelete data[var_name];\n\t\tdelete data[var_name + '##'];\n\t\tdelete data[var_name + '#'];\n\n\t\treturn output;\n\t},\n\n\t/**\n\t**\tExpands the specified template string with the given data. The sym_open and sym_close will be '{' and '}' respectively.\n\t**\tIf no data is provided, current data parameter will be used.\n\t**\n\t**\texpand <template> <data>\n\t*/\n\t'expand': function (args, parts, data)\n\t{\n\t\treturn Template.expand (Template.parseTemplate (args[1], '{', '}'), args.length == 3 ? args[2] : data);\n\t},\n\n\t/**\n\t**\tCalls a function described by the given parameter.\n\t**\n\t**\tcall <function> <args...>\n\t*/\n\t'_call': function (parts, data)\n\t{\n\t\tlet ref = Template.expand(parts[1], data, 'varref');\n\n\t\tif (!ref || typeof(ref[0][ref[1]]) != 'function')\n\t\t\tthrow new Error ('Expression is not a function: ' + Template.expand(parts[1], data, 'obj').map(i => i == null ? '.' : i).join(''));\n\n\t\tlet args = [];\n\n\t\tfor (let i = 2; i < parts.length; i++)\n\t\t\targs.push(Template.value(parts[i], data));\n\n\t\treturn ref[0][ref[1]] (...args);\n\t},\n};\n","/*\r\n**\trin/main\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nlet Rin = require('./alpha');\r\n\r\nRin.Rin = Rin;\r\nRin.Class = require('./class');\r\n\r\nRin.Event = require('./event');\r\nRin.EventDispatcher = require('./event-dispatcher');\r\n\r\nRin.Model = require('./model');\r\nRin.ModelList = require('./model-list');\r\n\r\nRin.Schema = require('./schema');\r\nRin.Flattenable = require('./flattenable');\r\nRin.Collection = require('./collection');\r\n\r\nRin.Template = require('./template');\r\n\r\n/* ---- */\r\nObject.assign (module.exports, Rin);\r\n"]}