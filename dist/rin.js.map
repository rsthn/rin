{"version":3,"sources":["alpha.js","class.js","event.js","event-dispatcher.js","model-regex.js","model-constraints.js","model.js","model-list.js","schema.js","flattenable.js","collection.js","template.js","main.js"],"names":["Rin","module","exports","invokeLater","fn","setTimeout","typeOf","o","Array","toString","toLowerCase","isArrayOrObject","clone","elem","i","length","push","merge","output","objs","arr","j","obj","field","override","partialCompare","full","partial","arrayFind","getObject","indexOf","container","value","escape","str","replace","ensureTypeOf","m","isInstanceOf","prototype","className","serialize","JSON","stringify","deserialize","s","parse","require","Class","_class","_super","__ctor","__dtor","constructor","_initSuperRefs","_newSuper","_prot","bind","inherit","proto","self","test","_extend","base","protos","args","apply","call","classInit","extend","create","source","name","_async","list","next","ret","original","eventName","eventArgs","cbHandler","cbContext","reset","wait","resume","silent","handler","context","data","global","from","event","enqueue","evt","Event","listeners","addEventListener","split","ns","removeEventListener","k","splice","prepareEvent","concat","silence","dispatchEvent","email","url","urlNoProt","uname","text","utext","Regex","_getref","substr","get","eval","type","model","ctval","isNaN","parseInt","Error","parseFloat","mclass","ensure","cls","arrayof","arraynull","remove","arraycompliant","isCompliant","required","minlen","maxlen","minval","maxval","mincount","maxcount","pattern","inset","RegExp","join","upper","toUpperCase","lower","EventDispatcher","_Model","defaults","constraints","changedList","_silent","_level","def","undefined","init","set","arguments","update","ready","nsilent","_validate","nvalue","ctname","Constraints","e","message","_set","constraint","_propertyEvent","prev","direct","temp","old","level","n","force","fields","flatten","getInt","getFloat","getBool","getReference","safe","rsafe","classPath","keys","ct","validate","observe","property","unobserve","Model","itemt","contents","_eventGroup","Date","now","_bind","index","item","_onItemEvent","_unbind","count","clear","setData","getData","getAt","removeAt","setAt","updateAt","pop","unshift","shift","find","retObject","Schema","Type","tmp","unflatten","String","Integer","Number","precision","_precision","_round","Math","pow","Bool","compact","_compact","SharedString","strings_map","strings","itemType","_debug","debug","v","of","Object","properties","symbolic","classConstructor","_constructor","Property","is","Map","typeSchema","assign","onUnflattened","Flattenable","itemTypeSchema","items","add","onItemRemoved","sort","desc","a","b","findItem","inc","exc","getItems","isEmpty","onBeforeItemAdded","onItemAdded","addAt","addItems","rel","forEach","callback","forEachCall","method","forEachRev","forEachRevCall","Template","strict","parseTemplate","template","sym_open","sym_close","is_tpl","root","nflush","flush","state","parts","mparts","nparts","emit","trim","map","match","unescape","r","expand","mode","quote","last","first","functions","failed","f","compile","register","fromCharCode","charCodeAt","abs","x","ref","start","attr","values","var_name","case_value","to","step","tpl","console","log","key","err","arrayMode","ModelList","Collection"],"mappings":"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","file":"rin.js","sourceRoot":"..","sourcesContent":["/*\r\n**\trin/alpha\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nlet Rin = module.exports = { };\r\n\r\n/**\r\n**\tInvokes the specified function 'fn' 10ms later.\r\n**\r\n**\t>> void invokeLater (function fn);\r\n*/\r\nRin.invokeLater = function (fn)\r\n{\r\n\tif (fn) setTimeout (function() { fn(); }, 10);\r\n};\r\n\r\n\r\n/**\r\n**\tReturns the type of an element 'o', properly detects arrays and null types. The return string is always in lowercase.\r\n**\r\n**\t>> string typeOf (any o);\r\n*/\r\nRin.typeOf = function (o)\r\n{\r\n\tif (o instanceof Array)\r\n\t\treturn \"array\";\r\n\r\n\tif (o === null)\r\n\t\treturn \"null\";\r\n\r\n\treturn (typeof(o)).toString().toLowerCase();\r\n};\r\n\r\n\r\n/**\r\n**\tReturns boolean indicating if the type of the element is an array or an object.\r\n**\r\n**\t>> bool isArrayOrObject (any o);\r\n*/\r\nRin.isArrayOrObject = function (o)\r\n{\r\n\tswitch (Rin.typeOf(o))\r\n\t{\r\n\t\tcase \"array\": case \"object\":\r\n\t\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n};\r\n\r\n\r\n/**\r\n**\tCreates a clone (deep copy) of the specified element. The element can be an array, an object or a primitive type.\r\n**\r\n**\t>> T clone (T elem);\r\n*/\r\nRin.clone = function (elem)\r\n{\r\n\tvar o;\r\n\r\n\tif (Rin.typeOf(elem) == \"array\")\r\n\t{\r\n\t\to = [ ];\r\n\r\n\t\tfor (let i = 0; i < elem.length; i++)\r\n\t\t\to.push (Rin.clone(elem[i]));\r\n\t}\r\n\telse if (Rin.typeOf(elem) == \"object\")\r\n\t{\r\n\t\to = { };\r\n\r\n\t\tfor (let i in elem)\r\n\t\t\to[i] = Rin.clone(elem[i]);\r\n\t}\r\n\telse\r\n\t{\r\n\t\to = elem;\r\n\t}\r\n\r\n\treturn o;\r\n};\r\n\r\n\r\n/**\r\n**\tMerges all given elements into the first one, object fields are cloned.\r\n**\r\n**\t>> T merge (T... elems)\r\n*/\r\nRin.merge = function (output, ...objs)\r\n{\r\n\tif (Rin.typeOf(output) == \"array\")\r\n\t{\r\n\t\tfor (let i = 0; i < objs.length; i++)\r\n\t\t{\r\n\t\t\tlet arr = objs[i];\r\n\r\n\t\t\tif (Rin.typeOf(arr) != \"array\")\r\n\t\t\t{\r\n\t\t\t\toutput.push(arr);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tfor (let j = 0; j < arr.length; j++)\r\n\t\t\t\t{\r\n\t\t\t\t\toutput.push(Rin.clone(arr[j]));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse if (Rin.typeOf(output) == \"object\")\r\n\t{\r\n\t\tfor (let i = 0; i < objs.length; i++)\r\n\t\t{\r\n\t\t\tlet obj = objs[i];\r\n\t\t\tif (Rin.typeOf(obj) != \"object\") continue;\r\n\r\n\t\t\tfor (let field in obj)\r\n\t\t\t{\r\n\t\t\t\tif (Rin.isArrayOrObject(obj[field]))\r\n\t\t\t\t{\r\n\t\t\t\t\tif (field in output)\r\n\t\t\t\t\t\tRin.merge(output[field], obj[field]);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\toutput[field] = Rin.clone(obj[field]);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\toutput[field] = obj[field];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn output;\r\n};\r\n\r\n\r\n/**\r\n**\tAssigns all fields from the specified objects into the first one.\r\n**\r\n**\t>> object override (object output, object... objs)\r\n*/\r\nRin.override = function (output, ...objs)\r\n{\r\n\tfor (let i = 0; i < objs.length; i++)\r\n\t{\r\n\t\tfor (let j in objs[i])\r\n\t\t{\r\n\t\t\toutput[j] = objs[i][j];\r\n\t\t}\r\n\t}\r\n\r\n\treturn output;\r\n};\r\n\r\n\r\n/*\r\n**\tCompares two objects and returns `true` if all properties in \"partial\" find a match in \"full\".\r\n*/\r\nRin.partialCompare = function (full, partial)\r\n{\r\n\tif (full == null || partial == null) return false;\r\n\r\n\tif (full === partial)\r\n\t\treturn true;\r\n\r\n\tfor (var i in partial)\r\n\t{\r\n\t\tif (full[i] != partial[i])\r\n\t\t\treturn false;\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\n\r\n/*\r\n**\tPerforms a partial search for an object (o) in the specified array and returns its index or `false` if the\r\n**\tobject was not found. When `getObject` is set to `true` the object will be returned instead of an index, or\r\n**\t`null` if not found.\r\n*/\r\nRin.arrayFind = function (arr, o, getObject)\r\n{\r\n\tfor (var i = 0; arr && i < arr.length; i++)\r\n\t{\r\n\t\tif (this.partialCompare (arr[i], o))\r\n\t\t\treturn getObject ? arr[i] : i;\r\n\t}\r\n\r\n\treturn getObject ? null : false;\r\n};\r\n\r\n\r\n/*\r\n**\tTraverses the given object attempting to find the index/key that does an identical match with the specified value,\r\n**\tif not found returns -1, otherwise the index/key where the value was found.\r\n**\r\n**\t>> int indexOf (array container, T value)\r\n**\t>> string indexOf (object container, T value)\r\n*/\r\nRin.indexOf = function (container, value)\r\n{\r\n\tfor (let i in container)\r\n\t{\r\n\t\tif (container[i] == value)\r\n\t\t\treturn i;\r\n\t}\r\n\r\n\treturn -1;\r\n};\r\n\r\n\r\n/**\r\n**\tEscapes a string using HTML entities.\r\n**\r\n**\t>> string escape (string str);\r\n*/\r\nRin.escape = function (str)\r\n{\r\n\treturn (str+\"\").replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n};\r\n\r\n\r\n/**\r\n**\tVerifies if the specified object is of class `m`, if not it will create a new instance of `m` passing `o` as parameter.\r\n**\r\n**\t>> object ensureTypeOf (class m, object o);\r\n*/\r\nRin.ensureTypeOf = function (m, o)\r\n{\r\n\tif (!o || !m || o instanceof m)\r\n\t\treturn o;\r\n\r\n\tif (o.isInstanceOf && m.prototype.className)\r\n\t{\r\n\t\tif (o.isInstanceOf (m.prototype.className))\r\n\t\t\treturn o;\r\n\t}\r\n\r\n\treturn new m (o);\r\n};\r\n\r\n\r\n/**\r\n**\tSerializes an object and returns its JSON string representation.\r\n**\r\n**\t>> string serialize (object o);\r\n*/\r\nRin.serialize = function (o)\r\n{\r\n\treturn JSON.stringify(o);\r\n};\r\n\r\n\r\n/**\r\n**\tDeserializes a string in JSON format and returns the result.\r\n**\r\n**\t>> any deserialize (string s);\r\n*/\r\nRin.deserialize = function (s)\r\n{\r\n\treturn JSON.parse(s);\r\n};\r\n","/*\r\n**\trin/class\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nlet Rin = require('./alpha');\r\n\r\n/**\r\n**\tBase class used to easily create classes and sub-classes with complex multiple inheritance and\r\n**\tsupport for calls to parent class methods.\r\n*/\r\n\r\nlet Class = module.exports = function ()\r\n{\r\n};\r\n\r\n\r\n/**\r\n**\tReference to the class itself.\r\n*/\r\nClass._class = Class;\r\n\r\n\r\n/**\r\n**\tContains the methods of each of the super classes.\r\n*/\r\nClass._super = { };\r\n\r\n\r\n/**\r\n**\tName of the class, if none specified the class will be considered \"final\" and will not be inheritable.\r\n*/\r\nClass.prototype.className = \"Class\";\r\n\r\n\r\n/**\r\n**\tClass constructor, should initialize the state of the instance. Invoked when the `new` keyword is used with the class.\r\n*/\r\nClass.prototype.__ctor = function ()\r\n{\r\n};\r\n\r\n\r\n/**\r\n**\tClass destructor, should clear the instance state and release any used resources, invoked when the global `dispose`\r\n**\tfunction is called with the instance as parameter.\r\n*/\r\nClass.prototype.__dtor = function ()\r\n{\r\n};\r\n\r\n\r\n/**\r\n**\tReturns true if the object is an instance of the specified class (verifies inheritance), the parameter can be a class\r\n**\tname, a class constructor or a class instance, in any case the appropriate checks will be done.\r\n**\r\n**\t>> bool isInstanceOf (string className);\r\n**\t>> bool isInstanceOf (constructor classConstructor);\r\n**\t>> bool isInstanceOf (object classInstance);\r\n*/\r\nClass.prototype.isInstanceOf = function (className)\r\n{\r\n\tclassName = Rin.typeOf(className) == \"string\" ? className : (className.prototype ? className.prototype.className : className.constructor.prototype.className);\r\n\treturn className in this._super ? true : this.className == className;\r\n};\r\n\r\n\r\n/**\r\n**\tInternal method to ensure the _super field of an instance is ready to be used.\r\n**\r\n**\t>> void _initSuperRefs ();\r\n*/\r\nClass.prototype._initSuperRefs = function ()\r\n{\r\n\tvar _super = this.constructor._super;\r\n\tvar _newSuper = { };\r\n\r\n\tfor (let i in _super)\r\n\t{\r\n\t\tlet o = { };\r\n\r\n\t\tlet _prot = _super[i].prototype;\r\n\t\tfor (let j in _prot)\r\n\t\t{\r\n\t\t\tif (Rin.typeOf(_prot[j]) == \"function\")\r\n\t\t\t\to[j] = _prot[j].bind(this);\r\n\t\t}\r\n\r\n\t\t_newSuper[i] = o;\r\n\t}\r\n\r\n\tthis._super = _newSuper;\r\n};\r\n\r\n\r\n/**\r\n**\tExtends the class with the specified prototype. The prototype can be a function (class constructor) or an object. Note that the\r\n**\tclass will be modified (and returned) instead of creating a new class. Must be called at the class-level (**not** instance level).\r\n**\tWhen a class is provided all fields starting with uppercase at the class-level will not be inherited, this is used to create constants\r\n**\ton classes without having them to be copied to derived classes.\r\n**\r\n**\t>> class inherit (constructor classConstructor);\r\n**\t>> class inherit (object obj);\r\n*/\r\nClass.inherit = function (proto)\r\n{\r\n\tvar self = this._class;\r\n\r\n\tvar _super = self._super;\r\n\tvar _class = self._class;\r\n\r\n\tif (Rin.typeOf(proto) == \"function\")\r\n\t{\r\n\t\t// Move constants (uppercased properties) to the class-level instead of prototype-level.\r\n\t\tfor (let i in proto._class)\r\n\t\t\tif (!/^[A-Z]/.test(i)) self[i] = proto._class[i];\r\n\r\n\t\t// Combine methods and properties.\r\n\t\tRin.override (self.prototype, proto._class.prototype);\r\n\r\n\t\t// Combine super methods.\r\n\t\tRin.override (_super, proto._class._super);\r\n\r\n\t\t// Add new super reference if className specified in inherited prototypes.\r\n\t\tif (proto._class.prototype.className)\r\n\t\t\t_super[proto._class.prototype.className] = proto._class;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tRin.override (self.prototype, proto);\r\n\t}\r\n\r\n\tself._super = _super;\r\n\tself._class = _class;\r\n\r\n\treturn self;\r\n};\r\n\r\n\r\n/**\r\n**\tInternal method used to extend a class with one or more prototypes.\r\n**\r\n**\t>> class _extend (object base, object[] protos);\r\n*/\r\nClass.prototype._extend = function (base, protos)\r\n{\r\n\tvar _class = function (...args)\r\n\t{\r\n\t\tthis._initSuperRefs();\r\n\t\tthis.__ctor.apply(this, args);\r\n\t};\r\n\r\n\t_class._class = _class;\r\n\t_class._super = { };\r\n\r\n\tClass.inherit.call (_class, base);\r\n\r\n\tdelete _class.prototype.className;\r\n\r\n\tfor (let i = 0; i < protos.length; i++)\r\n\t\t_class.inherit (protos[i]);\r\n\r\n\tdelete _class._super.Class;\r\n\r\n\tif (\"classInit\" in _class.prototype)\r\n\t\t_class.prototype.classInit();\r\n\r\n\treturn _class;\r\n};\r\n\r\n\r\n/**\r\n**\tCreates a new class with the specified prototypes each of which can be a class constructor or an object.\r\n**\r\n**\t>> constructor extend (object... protos);\r\n*/\r\nClass.extend = function (...protos)\r\n{\r\n\treturn this._class.prototype._extend (this, protos);\r\n};\r\n\r\n\r\n/**\r\n**\tCreates a new instance of a class resulting from extending the self class with the specified prototype.\r\n**\r\n**\t>> object create (object proto);\r\n*/\r\nClass.create = function (proto)\r\n{\r\n\treturn new (this.extend(proto)) ();\r\n};\r\n","/*\r\n**\trin/event\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nlet Rin = require('./alpha');\r\nlet Class = require('./class');\r\n\r\n/**\r\n**\tHolds the information about a triggered event. It also provides a mechanism to allow asynchronous\r\n**\tevent propagation to ensure the event chain order.\r\n*/\r\n\r\nmodule.exports = Class.extend\r\n({\r\n\t/**\r\n\t**\tName of the class.\r\n\t*/\r\n\tclassName: \"Event\",\r\n\r\n\t/**\r\n\t**\tSource of the event.\r\n\t*/\r\n\tsource: null,\r\n\r\n\t/**\r\n\t**\tName of the event.\r\n\t*/\r\n\tname: null,\r\n\r\n\t/**\r\n\t**\tArguments of the event.\r\n\t*/\r\n\targs: null,\r\n\r\n\t/**\r\n\t**\tIndicates if the last event handler wants to use async mode.\r\n\t*/\r\n\t_async: false,\r\n\r\n\t/**\r\n\t**\tQueue of all handlers to invoke.\r\n\t*/\r\n\tlist: null,\r\n\r\n\t/**\r\n\t**\tNext event to be executed in the event chain.\r\n\t*/\r\n\tnext: null,\r\n\r\n\t/**\r\n\t**\tReturn values from event handlers.\r\n\t*/\r\n\tret: null,\r\n\r\n\t/**\r\n\t**\tOriginal root event.\r\n\t*/\r\n\toriginal: null,\r\n\r\n\t/**\r\n\t**\tIndex of the current event handler.\r\n\t*/\r\n\ti: -1,\r\n\r\n\t/**\r\n\t**\tContructs an event object with the specified parameters. Source is the event-dispatcher object, list is\r\n\t**\tan array with all the listeners to invoke. The eventName and eventArgs are the event information to be\r\n\t**\tpassed to each handler and if a callback is specified (cbHandler+cbContext) it will be executed once all\r\n\t**\tthe event handlers have been processed.\r\n\t**\r\n\t**\tEvent __ctor (source: EventDispatcher, list: Array, eventName: string, eventArgs: map, cbHandler: function, cbContext: object);\r\n\t*/\r\n\t__ctor: function (source, list, eventName, eventArgs, cbHandler, cbContext)\r\n\t{\r\n\t\tthis.source = source;\r\n\r\n\t\tthis.name = eventName;\r\n\t\tthis.args = eventArgs;\r\n\r\n\t\tthis.cbHandler = cbHandler;\r\n\t\tthis.cbContext = cbContext;\r\n\r\n\t\tthis.list = list;\r\n\t\tthis.reset();\r\n\t},\r\n\r\n\t/**\r\n\t**\tResets the event to its initial state. An event object can be reused by resetting it and then\r\n\t**\tinvoking the resume event.\r\n\t**\r\n\t**\tEvent reset ();\r\n\t*/\r\n\treset: function ()\r\n\t{\r\n\t\tthis.next = null;\r\n\t\tthis.ret = [];\r\n\r\n\t\tthis._async = false;\r\n\t\tthis.i = -1;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tSets the internal asynchronous flag. Should be called before a handler returns. If a handler\r\n\t**\tcalls this method it should also call resume() when async operations are finished.\r\n\t**\r\n\t**\tEvent wait ();\r\n\t*/\r\n\twait: function ()\r\n\t{\r\n\t\tthis._async = true;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tResumes event propagation. Should be called manually by event handlers that also call wait().\r\n\t**\r\n\t**\tEvent resume ();\r\n\t*/\r\n\tresume: function ()\r\n\t{\r\n\t\tthis._async = false;\r\n\r\n\t\twhile (!this._async)\r\n\t\t{\r\n\t\t\tif (++this.i >= this.list.length)\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tif (this.list[this.i].silent)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif (Rin.typeOf(this.list[this.i].handler) == \"string\")\r\n\t\t\t{\r\n\t\t\t\tif (this.list[this.i].context)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (!this.list[this.i].context[this.list[this.i].handler])\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tif (this.list[this.i].context[this.list[this.i].handler] (this, this.args, this.list[this.i].data) === false)\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif (global[this.list[this.i].handler].call (null, this, this.args, this.list[this.i].data) === false)\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif (this.list[this.i].handler.call (this.list[this.i].context, this, this.args, this.list[this.i].data) === false)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._async)\r\n\t\t\treturn this;\r\n\r\n\t\tif (this.i >= this.list.length && this.next) this.next.resume();\r\n\r\n\t\tif (this.cbHandler)\r\n\t\t\tthis.cbHandler.call (this.cbContext);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tSets the \"original\" property of the event to indicate where the original event comes from.\r\n\t**\r\n\t**\tEvent from (event: Event);\r\n\t*/\r\n\tfrom: function (event)\r\n\t{\r\n\t\tthis.original = event;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tEnqueues the specified event to be executed upon the current event process is finished. The \"original\"\r\n\t**\tproperty of the chained event will be set to the current event.\r\n\t**\r\n\t**\tEvent enqueueEvent (event: Event);\r\n\t*/\r\n\tenqueue: function (event)\r\n\t{\r\n\t\tif (!event) return this;\r\n\r\n\t\tvar evt;\r\n\t\tfor (evt = this; evt.next != null; evt = evt.next);\r\n\r\n\t\tevt.next = event;\r\n\t\tevent.from (this);\r\n\r\n\t\treturn this;\r\n\t}\r\n});\r\n","/*\r\n**\trin/event-dispatcher\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nlet Class = require('./class');\r\nlet Event = require('./event');\r\n\r\n/**\r\n**\tEvent dispatcher allows several event listeners to be attached, these will be invoked whenever the\r\n**\tevent that is being listened to is triggered.\r\n*/\r\n\r\nmodule.exports = Class.extend\r\n({\r\n\t/**\r\n\t**\tName of the class.\r\n\t*/\r\n\tclassName: \"EventDispatcher\",\r\n\r\n\t/**\r\n\t**\tListeners attached to this event dispatcher. Grouped by event name.\r\n\t*/\r\n\tlisteners: null,\r\n\r\n\t/**\r\n\t**\tInitializes the event dispatcher.\r\n\t**\r\n\t**\tEventDispatcher __ctor ();\r\n\t*/\r\n\t__ctor: function ()\r\n\t{\r\n\t\tthis.listeners = { };\r\n\t},\r\n\r\n\t/**\r\n\t**\tAdds an event listener for a specified event to the event dispatcher. The event name can have an optional\r\n\t**\tnamespace indicator which is added to the beginning of the event name and separated using a colon (:). This\r\n\t**\tindicator can be used to later trigger or remove all handlers of an specific namespace.\r\n\t**\r\n\t**\tEventDispatcher addEventListener (eventName: string, handler: function, context: object, data: object);\r\n\t*/\r\n\taddEventListener: function (eventName, handler, context, data)\r\n\t{\r\n\t\teventName = eventName.split(\":\");\r\n\t\tvar name = eventName[eventName.length-1];\r\n\t\tvar ns = eventName.length > 1 ? eventName[0] : null;\r\n\r\n\t\tif (!this.listeners[name])\r\n\t\t\tthis.listeners[name] = [];\r\n\r\n\t\tthis.listeners[name].push ({ ns: ns, handler: handler, context: context, data: data, silent: 0 });\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tRemoves an event listener from the event dispatcher. If only the name is provided all handlers with the\r\n\t**\tspecified name will be removed. If a context is provided without a handler then any handler matching the\r\n\t**\tcontext will be removed. Special event name \"*\" can be used to match all event names.\r\n\t**\r\n\t**\tEventDispatcher removeEventListener (eventName: string, handler: function, context: object);\r\n\t*/\r\n\tremoveEventListener: function (eventName, handler, context)\r\n\t{\r\n\t\teventName = eventName.split(\":\");\r\n\t\tvar name = eventName[eventName.length-1];\r\n\t\tvar ns = eventName.length > 1 ? eventName[0] : null;\r\n\r\n\t\tif (name == \"*\")\r\n\t\t{\r\n\t\t\tfor (var j in this.listeners)\r\n\t\t\t{\r\n\t\t\t\tvar list = this.listeners[j];\r\n\r\n\t\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar k = true;\r\n\r\n\t\t\t\t\tif (handler)\r\n\t\t\t\t\t\tk = k && list[i].handler === handler;\r\n\r\n\t\t\t\t\tif (context)\r\n\t\t\t\t\t\tk = k && list[i].context === context;\r\n\r\n\t\t\t\t\tif (ns)\r\n\t\t\t\t\t\tk = k && list[i].ns == ns;\r\n\r\n\t\t\t\t\tif (k) list.splice(i--, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (!this.listeners[name])\r\n\t\t\t\treturn this;\r\n\r\n\t\t\tvar list = this.listeners[name];\r\n\r\n\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t{\r\n\t\t\t\tvar k = true;\r\n\r\n\t\t\t\tif (handler)\r\n\t\t\t\t\tk = k && list[i].handler === handler;\r\n\r\n\t\t\t\tif (context)\r\n\t\t\t\t\tk = k && list[i].context === context;\r\n\r\n\t\t\t\tif (ns)\r\n\t\t\t\t\tk = k && list[i].ns == ns;\r\n\r\n\t\t\t\tif (k) list.splice(i--, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tPrepares an event with the specified parameters for its later usage. The event is started when\r\n\t**\tthe resume() method is called. If a callback is specified it will be executed once all event\r\n\t**\thandlers have been processed.\r\n\t**\r\n\t**\tEvent prepareEvent (eventName: string, eventArgs: map, cbHandler: function, cbContext: object);\r\n\t**\tEvent prepareEvent (eventName: string, eventArgs: map);\r\n\t*/\r\n\tprepareEvent: function (eventName, eventArgs, cbHandler, cbContext)\r\n\t{\r\n\t\tvar list = [];\r\n\r\n\t\teventName = eventName.split(\":\");\r\n\t\tvar name = eventName[eventName.length-1];\r\n\t\tvar ns = eventName.length > 1 ? eventName[0] : null;\r\n\r\n\t\tif (this.listeners[name])\r\n\t\t\tlist = list.concat (this.listeners[name]);\r\n\r\n\t\tif (this.listeners[\"*\"])\r\n\t\t\tlist = list.concat (this.listeners[\"*\"]);\r\n\r\n\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\tif (list[i].silent) list.splice (i--, 1);\r\n\r\n\t\tif (ns)\r\n\t\t{\r\n\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t\tif (list[i].ns != ns) list.splice (i--, 1);\r\n\t\t}\r\n\r\n\t\treturn new Event (this, list, name, eventArgs, cbHandler, cbContext);\r\n\t},\r\n\r\n\t/**\r\n\t**\tSilences or unsilences all handlers attached to an event such that if the event fires the handler(s) will\r\n\t**\tnot be invoked. It is recommended to use a namespace to ensure other handlers will continue to be run.\r\n\t**\r\n\t**\tEventDispatcher silence (eventName: string);\r\n\t*/\r\n\tsilence: function (eventName, value)\r\n\t{\r\n\t\teventName = eventName.split(\":\");\r\n\r\n\t\tvar name = eventName[eventName.length-1];\r\n\t\tvar ns = eventName.length > 1 ? eventName[0] : null;\r\n\r\n\t\tvalue = value === false ? -1 : 1;\r\n\r\n\t\tif (name == \"*\")\r\n\t\t{\r\n\t\t\tfor (var j in this.listeners)\r\n\t\t\t{\r\n\t\t\t\tvar list = this.listeners[j];\r\n\r\n\t\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (ns && list[i].ns != ns)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tlist[i].silent += value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (!this.listeners[name])\r\n\t\t\t\treturn this;\r\n\r\n\t\t\tvar list = this.listeners[name];\r\n\r\n\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t{\r\n\t\t\t\tif (ns && list[i].ns != ns)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tlist[i].silent += value;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tDispatches an event to the respective listeners. If a callback is specified it will be executed once\r\n\t**\tall event handlers have been processed.\r\n\t**\r\n\t**\tEvent dispatchEvent (eventName: string, eventArgs: map, cbHandler: function, cbContext: object);\r\n\t**\tEvent dispatchEvent (eventName: string, eventArgs: map);\r\n\t*/\r\n\tdispatchEvent: function (eventName, eventArgs, cbHandler, cbContext)\r\n\t{\r\n\t\treturn this.prepareEvent(eventName, eventArgs, cbHandler, cbContext).resume();\r\n\t}\r\n});\r\n","/*\n**\trin/model-regex\n**\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\n**\thttps://www.rsthn.com/\n**\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/**\n**\tCommon regular expressions for pattern validation.\n*/\n\nmodule.exports =\n{\n\temail: /^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)+$/i,\n\turl: /^[\\w-]+:\\/\\/[\\w-]+(\\.\\w+)+.*$/,\n\turlNoProt: /^[\\w-]+(\\.\\w+)+.*$/,\n\tname: /^[-A-Za-z0-9_.]+$/,\n\tuname: /^['\\pL\\pN ]+$/,\n\ttext: /^[^&<>{}]*$/,\n\tutext: /^([\\r\\n\\pL\\pN\\pS &!@#$%*\\[\\]()_+=;',.\\/?:\"~-]+)$/\n};\n","/*\n**\trin/model-constraints\n**\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\n**\thttps://www.rsthn.com/\n**\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nlet Rin = require('./alpha');\nlet Regex = require('./model-regex');\n\n/**\n**\tMap of model constraint handlers. Each function should accept parameters (in order): the model object (model), the constraint value (ctval),\n**\tthe property name (name), the property value (value) and return the corrected value once verified or throw an exception if errors occur.\n*/\n\nmodule.exports =\n{\n\t/**\n\t**\tUtility function (not a handler) to get the real value given a reference string. If the value is not a string, the value itself will\n\t**\tbe returned, if it is a string starting with '#' the model property will be returned, if starts with '@' the object property will be\n\t**\treturned, otherwise the contents of the string will eval'd and returned.\n\t*/\n\t_getref: function (value, obj)\n\t{\n\t\tif (typeof(value) == \"string\")\n\t\t{\n\t\t\tif (value.substr(0, 1) == \"#\")\t\t\tvalue = obj.get(value.substr(1));\n\t\t\telse if (value.substr(0, 1) == \"@\")\t\tvalue = obj[value.substr(1)];\n\n\t\t\tif (typeof(value) == \"string\")\n\t\t\t\treturn eval(value);\n\n\t\t\treturn value;\n\t\t}\n\t\telse\n\t\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the new value is of the valid type before storing it on the property. When possible if the\n\t**\tinput is of compatible type it will be converted to the target type.\n\t*/\n\ttype: function (model, ctval, name, value)\n\t{\n\t\tswitch (ctval)\n\t\t{\n\t\t\tcase \"int\":\n\t\t\t\tvalue = parseInt(value);\n\t\t\t\tif (isNaN(value)) throw new Error (ctval);\n\t\t\t\tbreak;\n\n\t\t\tcase \"float\":\n\t\t\t\tvalue = parseFloat(value);\n\t\t\t\tif (isNaN(value)) throw new Error (ctval);\n\t\t\t\tbreak;\n\n\t\t\tcase \"string\":\n\t\t\t\tvalue = (value === null || value === undefined) ? \"\" : value.toString();\n\t\t\t\tbreak;\n\n\t\t\tcase \"bit\":\n\t\t\t\tif (value === true || value === false) {\n\t\t\t\t\tvalue = value ? 1 : 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvalue = parseInt(value);\n\t\t\t\tif (isNaN(value)) throw new Error (ctval);\n\n\t\t\t\tvalue = value ? 1 : 0;\n\t\t\t\tbreak;\n\n\t\t\tcase \"array\":\n\t\t\t\tif (Rin.typeOf(value) == \"array\")\n\t\t\t\t\tbreak;\n\n\t\t\t\tif (value === null || value === undefined)\n\t\t\t\t{\n\t\t\t\t\tvalue = [];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tthrow new Error (ctval);\n\t\t\t\tbreak;\n\n\t\t\tcase \"bool\":\n\t\t\t\tif (value === \"true\" || value === true) {\n\t\t\t\t\tvalue = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (value === \"false\" || value === false) {\n\t\t\t\t\tvalue = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tthrow new Error (ctval);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the field is of the specified model type.\n\t*/\n\tmodel: function (model, ctval, name, value)\n\t{\n\t\tvar mclass = this._getref(ctval, model);\n\t\tif (!mclass) throw new Error (ctval);\n\n\t\tif (!value)\n\t\t\treturn new mclass();\n\n\t\treturn mclass.ensure (value);\n\t},\n\n\n\t/**\n\t**\tVerifies that the field is of the specified class.\n\t*/\n\tcls: function (model, ctval, name, value)\n\t{\n\t\tvar mclass = this._getref(ctval, model);\n\t\tif (!value) return new mclass();\n\n\t\treturn Rin.ensureTypeOf(mclass, value);\n\t},\n\n\n\t/**\n\t**\tVerifies that the array contents are of the specified class. Returns error if the class does not exist\n\t**\tor if the field is not an array. Therefore a type:array constraint should be used before this one.\n\t*/\n\tarrayof: function (model, ctval, name, value)\n\t{\n\t\tvar mclass = this._getref(ctval, model);\n\t\tif (!value) value = [];\n\n\t\tif (!mclass || Rin.typeOf(value) != \"array\")\n\t\t\tthrow new Error (ctval);\n\n\t\tfor (var i = 0; i < value.length; i++)\n\t\t\tvalue[i] = Rin.ensureTypeOf(mclass, value[i]);\n\t\t\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the array contents are not null. Returns error if the field is not an array, therefore a\n\t**\ttype:array constraint should be used before this one.\n\t*/\n\tarraynull: function (model, ctval, name, value)\n\t{\n\t\tvar remove = false;\n\n\t\tif (Rin.typeOf(ctval) == \"object\")\n\t\t{\n\t\t\tif (ctval.remove) remove = ctval.remove;\n\t\t\tctval = ctval.value;\n\t\t}\n\n\t\tif (ctval) return value;\n\n\t\tif (Rin.typeOf(value) != \"array\")\n\t\t\tthrow new Error (ctval);\n\n\t\tfor (var i = 0; i < value.length; i++)\n\t\t{\n\t\t\tif (value[i] == null)\n\t\t\t{\n\t\t\t\tif (remove)\n\t\t\t\t\tvalue.splice (i--, 1);\n\t\t\t\telse\n\t\t\t\t\tthrow new Error (ctval);\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the array contents are all compliant. Returns error if the field is not an array, therefore\n\t**\ta type:array constraint should be used before this one.\n\t*/\n\tarraycompliant: function (model, ctval, name, value)\n\t{\n\t\tvar remove = false;\n\n\t\tif (Rin.typeOf(ctval) == \"object\")\n\t\t{\n\t\t\tif (ctval.remove) remove = ctval.remove;\n\t\t\tctval = ctval.value;\n\t\t}\n\n\t\tif (!ctval) return value;\n\n\t\tif (Rin.typeOf(value) != \"array\")\n\t\t\tthrow new Error (ctval);\n\n\t\tfor (var i = 0; i < value.length; i++)\n\t\t{\n\t\t\tif (value[i] == null)\n\t\t\t\tcontinue;\n\n\t\t\tif (!value[i].isCompliant())\n\t\t\t{\n\t\t\t\tif (remove)\n\t\t\t\t\tvalue.splice (i--, 1);\n\t\t\t\telse\n\t\t\t\t\tthrow new Error (ctval);\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the presense of the field.\n\t*/\n\trequired: function (model, ctval, name, value)\n\t{\n\t\tif (value === null || value === undefined)\n\t\t\tthrow new Error (ctval ? \"\" : \"null\");\n\n\t\tswitch (Rin.typeOf(value))\n\t\t{\n\t\t\tcase \"array\":\n\t\t\t\tif (value.length == 0) throw new Error (ctval ? \"\" : \"null\");\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tif (value.toString().length == 0) throw new Error (ctval ? \"\" : \"null\");\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the minimum length of the field.\n\t*/\n\tminlen: function (model, ctval, name, value)\n\t{\n\t\tif (value.toString().length < ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the maximum length of the field.\n\t*/\n\tmaxlen: function (model, ctval, name, value)\n\t{\n\t\tif (value.toString().length > ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the minimum value of the field.\n\t*/\n\tminval: function (model, ctval, name, value)\n\t{\n\t\tif (parseFloat(value) < ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the maximum value of the field.\n\t*/\n\tmaxval: function (model, ctval, name, value)\n\t{\n\t\tif (parseFloat(value) > ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the minimum number of items in the array.\n\t*/\n\tmincount: function (model, ctval, name, value)\n\t{\n\t\tif (Rin.typeOf(value) != \"array\" || value.length < ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the maximum number of items in the array.\n\t*/\n\tmaxcount: function (model, ctval, name, value)\n\t{\n\t\tif (Rin.typeOf(value) != \"array\" || value.length > ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the format of the field using a regular expression. The constraint value should be the name of\n\t**\tone of the Model.Regex regular expressions.\n\t*/\n\tpattern: function (model, ctval, name, value)\n\t{\n\t\tif (!Regex[ctval].test (value.toString()))\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the field is inside the specified set of options. The set can be an array or a string with\n\t**\tthe options separated by vertical bar (|). The comparison is case-sensitive.\n\t*/\n\tinset: function (model, ctval, name, value)\n\t{\n\t\tif (Rin.typeOf(ctval) != \"array\")\n\t\t{\n\t\t\tif (!new RegExp(\"^(\"+ctval.toString()+\")$\").test (value.toString()))\n\t\t\t\tthrow new Error (ctval);\n\n\t\t\treturn value;\n\t\t}\n\n\t\tif (ctval.indexOf(value.toString()) == -1)\n\t\t\tthrow new Error (ctval.join(\"|\"));\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tSets the field to upper case.\n\t*/\n\tupper: function (model, ctval, name, value)\n\t{\n\t\treturn ctval ? value.toString().toUpperCase() : value;\n\t},\n\n\n\t/**\n\t**\tSets the field to lower case.\n\t*/\n\tlower: function (model, ctval, name, value)\n\t{\n\t\treturn ctval ? value.toString().toLowerCase() : value;\n\t}\n};\n","/*\n**\trin/model\n**\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\n**\thttps://www.rsthn.com/\n**\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nlet Rin = require('./alpha');\nlet EventDispatcher = require('./event-dispatcher');\n\n/**\n**\tA model is a high-integrity data object used to store properties and more importantly to provide event support to notify of any\n**\tkind of change that occurs to the model's properties. Integrity of the model is maintained by optionally using property constraints.\n*/\n\nlet _Model = module.exports = EventDispatcher.extend\n({\n\t/**\n\t**\tName of the class.\n\t*/\n\tclassName: \"Model\",\n\n\t/**\n\t**\tDefault properties for the model. Can be a map with the property name and its default value or a function\n\t**\treturning a map with dynamic default values. This is used to reset the model to its initial state.\n\t*/\n\tdefaults: null,\n\n\t/**\n\t**\tModel property contraints. A map with the property name and an object specifying the constraints of the\n\t**\tproperty. This is used to determine the type, format and behavior of each property in the model.\n\t*/\n\tconstraints: null,\n\n\t/**\n\t**\tProperties of the model.\n\t*/\n\tdata: null,\n\n\t/**\n\t**\tArray with the name of the properties that have changed. Populated prior modelChanged event.\n\t*/\n\tchangedList: null,\n\n\t/**\n\t**\tSilent mode indicator. While in silent mode events will not be dispatched.\n\t*/\n\t_silent: 0,\n\n\t/**\n\t**\tCurrent nesting level of the set() method. This is used to determine when all the property\n\t**\tchanges are done.\n\t*/\n\t_level: 0,\n\n\t/**\n\t**\tInitializes the model and sets the properties to the specified data object.\n\t**\n\t**\t>> Model __ctor (object data);\n\t**\t>> Model __ctor (object data, object defaults);\n\t*/\n\t__ctor: function (data, defaults)\n\t{\n\t\tthis._super.EventDispatcher.__ctor();\n\n\t\tthis.data = { };\n\n\t\tif (defaults != null)\n\t\t{\n\t\t\tthis.reset (defaults);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar o = null;\n\n\t\t\tif (!this.defaults && this.constraints)\n\t\t\t{\n\t\t\t\tvar o = { };\n\n\t\t\t\tfor (var i in this.constraints)\n\t\t\t\t{\n\t\t\t\t\tvar j = this.constraints[i];\n\t\t\t\t\tif (j.def === null || j.def === undefined)\n\t\t\t\t\t{\n\t\t\t\t\t\to[i] = null;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof(j.def) == \"function\")\n\t\t\t\t\t\to[i] = j.def();\n\t\t\t\t\telse\n\t\t\t\t\t\to[i] = j.def;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.reset(o);\n\t\t}\n\n\t\tthis.init();\n\n\t\tif (data != null)\n\t\t\tthis.set (arguments[0], true);\n\n\t\tif (this.constraints) this.update();\n\n\t\tthis.ready();\n\t},\n\n\t/**\n\t**\tResets the model to its default state and triggers update events. If a map is provided the defaults of\n\t**\tthe model will be set to the specified map.\n\t**\n\t**\t>> Model reset (object defaults, [bool nsilent=true]);\n\t**\t>> Model reset ([bool nsilent=true]);\n\t*/\n\treset: function (defaults, nsilent)\n\t{\n\t\tif (!this.defaults)\n\t\t{\n\t\t\tif (!defaults || (Rin.typeOf(defaults) != \"object\" && Rin.typeOf(defaults) != \"function\"))\n\t\t\t\treturn this;\n\n\t\t\tthis.defaults = defaults;\n\t\t}\n\n\t\tif (Rin.typeOf(this.defaults) == \"function\")\n\t\t\tthis.data = this.defaults();\n\t\telse\n\t\t\tthis.data = Rin.clone(this.defaults);\n\n\t\treturn (nsilent === false || defaults === false) ? this : this.update(null, true);\n\t},\n\n\t/**\n\t**\tInitializes the model. Called before the model properties are set.\n\t**\n\t**\t>> void init ();\n\t*/\n\tinit: function ()\n\t{\n\t},\n\n\t/**\n\t**\tInitialization epilogue. Called after initialization and after model properties are set.\n\t**\n\t**\t>> void ready ();\n\t*/\n\tready: function ()\n\t{\n\t},\n\n\t/**\n\t**\tEnables or disables silent mode. When the model is in silent mode events will not be dispatched.\n\t**\n\t**\t>> Model silent (value: bool);\n\t*/\n\tsilent: function (value)\n\t{\n\t\tthis._silent += value ? 1 : -1;\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tValidates a property name and value against the constraints defined in the model (if any). Returns the\n\t**\tfinal value if successful or throws an empty exception if errors occur.\n\t**\n\t**\t>> T _validate (string name, T value);\n\t*/\n\t_validate: function (name, value)\n\t{\n\t\tif (!this.constraints || !this.constraints[name])\n\t\t\treturn value;\n\n\t\tvar constraints = this.constraints[name];\n\n\t\tvar nvalue = value;\n\n\t\tfor (var ctname in constraints)\n\t\t{\n\t\t\tif (!_Model.Constraints[ctname])\n\t\t\t\tcontinue;\n\n\t\t\ttry {\n\t\t\t\tnvalue = _Model.Constraints[ctname] (this, constraints[ctname], name, nvalue);\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tif (e.message == \"null\")\n\t\t\t\t\tbreak;\n\n\t\t\t\tthrow new Error (`Constraint [${ctname}:${constraints[ctname]}] failed on property '${name}'.`);\n\t\t\t}\n\t\t}\n\n\t\treturn nvalue;\n\t},\n\n\t/**\n\t**\tSets the value of a property and returns the value set. This method is internally used to set properties\n\t**\tone at a time. If constraints are present in the model for the specified property all constraints will be\n\t**\tverified. When constraint errors occur the constraintError event will be raised and the property value\n\t**\twill not be changed.\n\t**\n\t**\t>> T _set (string name, T value);\n\t*/\n\t_set: function (name, value)\n\t{\n\t\tif (!this.constraints || !this.constraints[name])\n\t\t{\n\t\t\tthis.data[name] = value;\n\t\t\treturn value;\n\t\t}\n\n\t\tvar constraints = this.constraints[name];\n\n\t\tvar cvalue = this.data[name];\n\t\tvar nvalue = value;\n\n\t\tfor (var ctname in constraints)\n\t\t{\n\t\t\tif (!_Model.Constraints[ctname])\n\t\t\t\tcontinue;\n\n\t\t\ttry {\n\t\t\t\tnvalue = _Model.Constraints[ctname] (this, constraints[ctname], name, nvalue);\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tif (e.message == \"null\")\n\t\t\t\t\tbreak;\n\n\t\t\t\tif (!this._silent)\n\t\t\t\t\tthis.dispatchEvent (\"constraintError\", { constraint: ctname, message: e.message, name: name, value: value });\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn (this.data[name] = nvalue);\n\t},\n\n\t/**\n\t**\tTriggers property events to indicate a property is changing. First triggers \"propertyChanging\" and then\n\t**\t\"propertyChanged\". If the first event returns false the second event will not be triggered.\n\t**\n\t**\t>> void _propertyEvent (string name, T prev, T value, bool direct=false);\n\t*/\n\t_propertyEvent: function (name, prev, value, direct)\n\t{\n\t\tvar temp = { name: name, old: prev, value: value, level: this._level };\n\n\t\tvar evt = this.dispatchEvent (\"propertyChanging\", temp);\n\n\t\tif (!direct)\n\t\t\ttemp.value = this._set (name, temp.value);\n\t\telse\n\t\t\tthis.data[name] = temp.value;\n\n\t\tif (evt != null && evt.ret.length && evt.ret[0] === false)\n\t\t\treturn;\n\n\t\tthis.dispatchEvent (\"propertyChanged.\" + name, temp);\n\t\tthis.dispatchEvent (\"propertyChanged\", temp);\n\n\t\tthis.changedList.push (name);\n\t},\n\n\t/**\n\t**\tSets one or more properties of the model. Possible arguments can be two strings or a map.\n\t**\n\t**\t>> Model set (string name, T value, bool force=true);\n\t**\t>> Model set (string name, T value, bool silent=false);\n\t**\t>> Model set (string name, T value);\n\t**\t>> Model set (object data);\n\t*/\n\tset: function ()\n\t{\n\t\tvar n = arguments.length;\n\t\tvar force = false, silent = false;\n\n\t\tif ((n > 2 || (n == 2 && Rin.typeOf(arguments[0]) == \"object\")) && Rin.typeOf(arguments[n-1]) == \"boolean\")\n\t\t{\n\t\t\tforce = arguments[--n];\n\t\t\tif (force === false) silent = true;\n\t\t}\n\n\t\tif (this._level == 0)\n\t\t{\n\t\t\tthis.changedList = [];\n\t\t}\n\n\t\tthis._level++;\n\n\t\tif (n == 2)\n\t\t{\n\t\t\tif (this.data[arguments[0]] != arguments[1] || force)\n\t\t\t{\n\t\t\t\tif (!this._silent && !silent)\n\t\t\t\t\tthis._propertyEvent (arguments[0], this.data[arguments[0]], this._validate (arguments[0], arguments[1]));\n\t\t\t\telse\n\t\t\t\t\tthis._set (arguments[0], arguments[1]);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (var i in arguments[0])\n\t\t\t{\n\t\t\t\tif (this.data[i] != arguments[0][i] || force)\n\t\t\t\t{\n\t\t\t\t\tif (!this._silent && !silent)\n\t\t\t\t\t\tthis._propertyEvent (i, this.data[i], this._validate (i, arguments[0][i]));\n\t\t\t\t\telse\n\t\t\t\t\t\tthis._set (i, arguments[0][i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!--this._level && this.changedList.length && !silent && !this._silent)\n\t\t\tthis.dispatchEvent (\"modelChanged\", { fields: this.changedList });\n\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tReturns the value of a property. If no name is specified the whole map of properties will be returned.\n\t**\tIf a boolean value of \"true\" is provided the properties map will be returned but first will be compacted\n\t**\tusing the default data to ensure only valid properties are present.\n\t**\n\t**\t>> T get (string name);\n\t**\t>> object get ();\n\t**\t>> object get (true);\n\t**\t>> object get (false);\n\t**\t\n\t*/\n\tget: function (name, def)\n\t{\n\t\tif (arguments.length == 0 || name === false)\n\t\t\treturn this.data;\n\n\t\tif (arguments.length == 1 && name === true)\n\t\t\treturn this.flatten ();\n\n\t\tif (arguments.length == 2)\n\t\t\treturn this.data[name] === undefined ? def : this.data[name];\n\n\t\treturn this.data[name];\n\t},\n\n\t/**\n\t**\tReturns the value of a property as an integer number.\n\t**\n\t**\t>> int getInt (string name, [int def]);\n\t*/\n\tgetInt: function (name, def)\n\t{\n\t\tif (arguments.length == 2)\n\t\t\treturn this.data[name] === undefined ? def : parseInt (this.data[name]);\n\n\t\treturn parseInt (this.data[name]);\n\t},\n\n\t/**\n\t**\tReturns the value of a property as a floating point number.\n\t**\n\t**\t>> float getFloat (string name, [float def]);\n\t*/\n\tgetFloat: function (name, def)\n\t{\n\t\tif (arguments.length == 2)\n\t\t\treturn this.data[name] === undefined ? def : parseFloat (this.data[name]);\n\n\t\treturn parseFloat (this.data[name]);\n\t},\n\n\t/**\n\t**\tReturns the value of a property as a boolean value (true or false).\n\t**\n\t**\t>> bool getBool (string name, [bool def]);\n\t**\t\n\t*/\n\tgetBool: function (name, def)\n\t{\n\t\tif (arguments.length == 2)\n\t\t\tname = this.data[name] === undefined ? def : this.data[name];\n\t\telse\n\t\t\tname = this.data[name];\n\n\t\tif (name === \"true\" || name === true)\n\t\t\treturn true;\n\n\t\tif (name === \"false\" || name === false)\n\t\t\treturn false;\n\n\t\treturn parseInt (name) ? true : false;\n\t},\n\n\t/**\n\t**\tReturns a reference object for a model property. The resulting object contains two methods\n\t**\tnamed \"get\" and \"set\" to modify the value of the property.\n\t**\n\t**\t>> object getReference (string name);\n\t*/\n\tgetReference: function (name)\n\t{\t\n\t\tvar m = this;\n\n\t\treturn {\n\t\t\tget: function() {\n\t\t\t\treturn m.get(name);\n\t\t\t},\n\n\t\t\tset: function(value) {\n\t\t\t\tm.set(name, value);\n\t\t\t}\n\t\t};\n\t},\n\n\t/**\n\t**\tSets or returns a constraint given the property name. \n\t**\n\t**\t>> Model constraint (string field, string constraint, T value);\n\t**\t>> Model constraint (string field, object constraint);\n\t**\t>> Model constraint (object constraints);\n\t**\t>> object constraint (string field);\n\t*/\n\tconstraint: function (field, constraint, value)\n\t{\n\t\tif (arguments.length == 3 || arguments.length == 2 || (arguments.length == 1 && Rin.typeOf(field) == \"object\"))\n\t\t{\n\t\t\tif (this.constraints === this.constructor.prototype.constraints)\n\t\t\t\tthis.constraints = Rin.clone (this.constraints);\n\n\t\t\tswitch (arguments.length)\n\t\t\t{\n\t\t\t\tcase 1:\n\t\t\t\t\tRin.override (this.constraints, field);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\tRin.override (this.constraints[field], constraint);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3:\n\t\t\t\t\tthis.constraints[field][constraint] = value;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn !field ? this : this.constraints[field];\n\t},\n\n\t/**\n\t**\tReturns a compact version of the model properties. That is, a map only with validated properties that are\n\t**\talso present in the default data map. Returns null if the object is not compliant. If the \"safe\" parameter\n\t**\tis set one last property named \"class\" will be attached, this specifies the original classPath of the object.\n\t**\n\t**\t>> object flatten ([bool safe=false]);\n\t*/\n\tflatten: function (safe, rsafe)\n\t{\n\t\tif (safe)\n\t\t{\n\t\t\tvar data = this.flatten(false, true);\n\t\t\tif (data == null) return null;\n\n\t\t\tdata[\"class\"] = this.classPath;\n\t\t\treturn data;\n\t\t}\n\n\t\tif (!this.constraints && !this.defaults)\n\t\t\treturn this.data;\n\n\t\tif (!this.isCompliant())\n\t\t\treturn { };\n\n\t\tvar constraints = this.constraints;\n\t\tvar keys = this.defaults ? (Rin.typeOf(this.defaults) == \"function\" ? this.defaults() : this.defaults) : this.constraints;\n\n\t\tvar data = { };\n\n\t\tfor (var i in this.data)\n\t\t{\n\t\t\tif (!(i in keys)) continue;\n\n\t\t\tif (constraints && constraints[i])\n\t\t\t{\n\t\t\t\tvar ct = constraints[i];\n\n\t\t\t\tif (ct.model)\n\t\t\t\t{\n\t\t\t\t\tdata[i] = this.data[i] ? this.data[i].flatten(rsafe) : null;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (ct.arrayof)\n\t\t\t\t{\n\t\t\t\t\tdata[i] = [];\n\n\t\t\t\t\tfor (var j = 0; j < this.data[i].length; j++)\n\t\t\t\t\t\tdata[i][j] = this.data[i][j] ? this.data[i][j].flatten(rsafe) : null;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (ct.cls)\n\t\t\t\t{\n\t\t\t\t\tdata[i] = this.data[i] ? this.data[i].flatten() : null;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdata[i] = this.data[i];\n\t\t}\n\n\t\treturn data;\n\t},\n\n\t/**\n\t**\tRemoves a property or a list of properties.\n\t**\n\t**\t>> void remove (string name, [bool nsilent=true]);\n\t**\t>> void remove (array name, [bool nsilent=true]);\n\t*/\n\tremove: function (name, nsilent)\n\t{\n\t\tif (Rin.typeOf(name) == \"array\")\n\t\t{\n\t\t\tfor (var i = 0; i < name.length; i++)\n\t\t\t\tdelete this.data[name[i]];\n\n\t\t\tif (nsilent !== false && !this._silent)\n\t\t\t\tthis.dispatchEvent (\"propertyRemoved\", { fields: name });\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdelete this.data[name];\n\n\t\t\tif (nsilent !== false && !this._silent)\n\t\t\t\tthis.dispatchEvent (\"propertyRemoved\", { fields: [name] });\n\t\t}\n\t},\n\n\t/**\n\t**\tTriggers data change events for one or more properties. Ensure that silent mode is not enabled or else\n\t**\tthis method will have no effect. If no parameters are provided a full update will be triggered on all of\n\t**\tthe model properties.\n\t**\n\t**\t>> Model update (array fields);\n\t**\t>> Model update (string name);\n\t**\t>> Model update ();\n\t*/\n\tupdate: function (fields, direct)\n\t{\n\t\tif (this._silent) return this;\n\n\t\tif (this._level == 0)\n\t\t{\n\t\t\tthis.changedList = [];\n\t\t}\n\n\t\tthis._level++;\n\n\t\tif (fields && Rin.typeOf(fields) == \"string\")\n\t\t{\n\t\t\tthis._propertyEvent (fields, this.data[fields], this.data[fields], direct);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (fields)\n\t\t\t{\n\t\t\t\tfor (var i of fields)\n\t\t\t\t\tthis._propertyEvent (i, this.data[i], this.data[i], direct);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (var i in this.data)\n\t\t\t\t\tthis._propertyEvent (i, this.data[i], this.data[i], direct);\n\t\t\t}\n\t\t}\n\n\t\tif (!--this._level && this.changedList.length && !this._silent)\n\t\t\tthis.dispatchEvent (\"modelChanged\", { fields: this.changedList });\n\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tValidates one or mode model properties using the defined constraints. If no parameters are provided all of\n\t**\tthe properties in the model will be validated.\n\t**\n\t**\t>> Model validate (array fields);\n\t**\t>> Model validate (string name);\n\t**\t>> Model validate ();\n\t*/\n\tvalidate: function (fields)\n\t{\n\t\tif (!this.constraints) return this;\n\n\t\tif (fields && Rin.typeOf(fields) == \"string\")\n\t\t{\n\t\t\tthis._set (fields, this.data[fields])\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (var i in this.data)\n\t\t\t{\n\t\t\t\tif (fields && Rin.indexOf(fields, i) == -1)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tthis._set (i, this.data[i])\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tValidates all the properties in the model and returns a boolean indicating if all of them comply with the\n\t**\tconstraints defined in the model.\n\t**\n\t**\t>> bool isCompliant ();\n\t*/\n\tisCompliant: function ()\n\t{\n\t\tif (!this.constraints) return true;\n\n\t\ttry\n\t\t{\n\t\t\tfor (var i in this.data)\n\t\t\t\tthis._validate (i, this.data[i]);\n\n\t\t\treturn true;\n\t\t}\n\t\tcatch (e) {\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t/**\n\t**\tRegisters an event handler for changes in a specific property of the model.\n\t**\n\t**\t>> void observe (string property, function handler, object context);\n\t*/\n\tobserve: function (property, handler, context)\n\t{\n\t\tthis.addEventListener (\"propertyChanged.\" + property, handler, context);\n\t},\n\n\t/**\n\t**\tUnregisters an event handler from changes in a specific property of the model.\n\t**\n\t**\t>> void unobserve (string property, function handler, object context);\n\t*/\n\tunobserve: function (property, handler, context)\n\t{\n\t\tthis.removeEventListener (\"propertyChanged.\" + property, handler, context);\n\t},\n\n\t/**\n\t**\tSerializes the model into a string.\n\t**\n\t**\tstring toString ();\n\t*/\n\ttoString: function ()\n\t{\n\t\treturn Rin.serialize(this.get (true));\n\t}\n});\n\n\n/**\n**\tImport model constraints.\n*/\n\n_Model.Constraints = require('./model-constraints');\n","/*\n**\trin/model-list\n**\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\n**\thttps://www.rsthn.com/\n**\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nlet Rin = require('./alpha');\nlet Model = require('./model');\n\n/**\n**\tGeneric list for models.\n*/\n\nmodule.exports = Model.extend\n({\n\t/**\n\t**\tName of the class.\n\t*/\n\tclassName: \"List\",\n\n\t/**\n\t**\tClass of the items in the list, can be overriden by child classes to impose a more strict constraint.\n\t*/\n\titemt: Model,\n\n\t/**\n\t**\tMirror of properties.contents\n\t*/\n\tcontents: null,\n\n\t/**\n\t**\tDefault properties of the model.\n\t*/\n\tdefaults:\n\t{\n\t\tcontents: null\n\t},\n\n\t/**\n\t**\tConstraints of the model to ensure integrity.\n\t*/\n\tconstraints:\n\t{\n\t\tcontents: {\n\t\t\ttype: \"array\",\n\t\t\tarrayof: \"@itemt\"\n\t\t}\n\t},\n\n\t/**\n\t**\tInitialization epilogue. Called after initialization and after model properties are set.\n\t**\n\t**\t>> void ready ();\n\t*/\n\tready: function ()\n\t{\n\t\tthis._eventGroup = \"ModelList_\" + Date.now() + \":modelChanged\";\n\n\t\tthis.contents = this.data.contents;\n\t},\n\n\t/**\n\t**\tConnects the event handlers to the item.\n\t**\n\t**\t>> Model _bind (int index, Model item);\n\t*/\n\t_bind: function (index, item)\n\t{\n\t\tif (item && item.addEventListener) item.addEventListener (this._eventGroup, this._onItemEvent, this, index);\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tDisconnects the event handlers from the item.\n\t**\n\t**\t>> Model _unbind (Model item);\n\t*/\n\t_unbind: function (item)\n\t{\n\t\tif (item && item.removeEventListener) item.removeEventListener (this._eventGroup);\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tHandler for item events.\n\t**\n\t**\t>> Model _onItemEvent (Event evt, object args, object data);\n\t*/\n\t_onItemEvent: function (evt, args, data)\n\t{\n\t\tthis.prepareEvent (\"itemChanged\", { index: data, item: evt.source }).from (evt)\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\t},\n\n\t/**\n\t**\tReturns the number of items in the list.\n\t**\n\t**\t>> int count ();\n\t*/\n\tcount: function ()\n\t{\n\t\treturn this.data.contents.length;\n\t},\n\n\t/**\n\t**\tClears the contents of the list.\n\t**\n\t**\t>> void clear ();\n\t*/\n\tclear: function ()\n\t{\n\t\tfor (var i = 0; i < this.data.contents; i++)\n\t\t\tthis._unbind (this.data.contents[i]);\n\n\t\tthis.data.contents = [];\n\n\t\tthis.prepareEvent (\"itemCleared\")\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\t},\n\n\t/**\n\t**\tSets the contents of the list with the specified array. All items will be ensured to be of the same model\n\t**\ttype as the one specified in the list.\n\t**\n\t**\t>> void setData (array data);\n\t*/\n\tsetData: function (data)\n\t{\n\t\tthis.clear ();\n\t\tif (!data) return;\n\n\t\tfor (var i = 0; i < data.length; i++)\n\t\t{\n\t\t\tvar item = Rin.ensureTypeOf(this.itemt, data[i]);\n\t\t\tthis._bind (i, item);\n\n\t\t\tthis.data.contents.push (item);\n\t\t}\n\n\t\tthis.prepareEvent (\"itemsChanged\")\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\t},\n\n\t/**\n\t**\tReturns the raw array contents of the list.\n\t**\n\t**\t>> array getData ();\n\t*/\n\tgetData: function ()\n\t{\n\t\treturn this.data.contents;\n\t},\n\n\t/**\n\t**\tReturns the item at the specified index or null if the index is out of bounds.\n\t**\n\t**\t>> Model getAt (int index);\n\t*/\n\tgetAt: function (index)\n\t{\n\t\tif (index < 0 || index >= this.data.contents.length)\n\t\t\treturn null;\n\n\t\treturn Rin.ensureTypeOf(this.itemt, this.data.contents[index]);\n\t},\n\n\t/**\n\t**\tRemoves and returns the item at the specified index. Returns null if the index is out of bounds.\n\t**\n\t**\t>> Model removeAt (int index);\n\t*/\n\tremoveAt: function (index)\n\t{\n\t\tif (index < 0 || index >= this.data.contents.length)\n\t\t\treturn null;\n\n\t\tvar item = Rin.ensureTypeOf(this.itemt, this.data.contents.splice(index, 1)[0]);\n\t\tthis._unbind (item);\n\n\t\tthis.prepareEvent (\"itemRemoved\", { index: index, item: item })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tSets the item at the specified index. Returns false if the index is out of bounds, true otherwise. The\n\t**\titem will be ensured to be of the model defined in the list.\n\t**\n\t**\t>> bool setAt (int index, Model item);\n\t*/\n\tsetAt: function (index, item)\n\t{\n\t\tif (index < 0 || index >= this.data.contents.length)\n\t\t\treturn false;\n\n\t\titem = Rin.ensureTypeOf(this.itemt, item);\n\n\t\tthis.data.contents[index] = item;\n\t\tthis._bind (index, item);\n\n\t\tthis.prepareEvent (\"itemChanged\", { index: index, item: item })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn true;\n\t},\n\n\t/**\n\t**\tNotifies a change in the item at the specified index. Returns false if the index is out of bounds.\n\t**\n\t**\t>> bool updateAt (int index);\n\t*/\n\tupdateAt: function (index)\n\t{\n\t\tif (index < 0 || index >= this.data.contents.length)\n\t\t\treturn false;\n\n\t\tthis.prepareEvent (\"itemChanged\", { index: index, item: this.data.contents[index] })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn true;\n\t},\n\n\t/**\n\t**\tAdds an item to the bottom of the list. Returns null if the item is not an object or a model. The item\n\t**\twill be ensured to be of the model specified in the list.\n\t**\n\t**\t>> Model push (Model item);\n\t*/\n\tpush: function (item)\n\t{\n\t\tif (item && Rin.typeOf(item) != \"object\")\n\t\t\treturn null;\n\n\t\titem = Rin.ensureTypeOf(this.itemt, item);\n\n\t\tthis.data.contents.push (item);\n\t\tthis._bind (this.data.contents.length-1, item);\n\n\t\tthis.prepareEvent (\"itemAdded\", { index: this.data.contents.length-1, item: item })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tRemoves and returns an item from the bottom of the list.\n\t**\n\t**\t>> Model pop ();\n\t*/\n\tpop: function ()\n\t{\n\t\treturn this._unbind (Rin.ensureTypeOf(this.itemt, this.data.contents.pop()));\n\t},\n\n\t/**\n\t**\tAdds an item to the top of the list. Returns null if the item is not an object or a model. The item\n\t**\twill be ensured to be of the model specified in the list.\n\t**\n\t**\t>> Model unshift (Model item);\n\t*/\n\tunshift: function (item)\n\t{\n\t\tif (item && Rin.typeOf(item) != \"object\")\n\t\t\treturn null;\n\n\t\titem = Rin.ensureTypeOf(this.itemt, item);\n\n\t\tthis.data.contents.unshift (item);\n\t\tthis._bind (0, item);\n\n\t\tthis.prepareEvent (\"itemAdded\", { index: 0, item: item })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tRemoves and returns an item from the top of the list.\n\t**\n\t**\t>> Model shift ();\n\t*/\n\tshift: function ()\n\t{\n\t\treturn this._unbind (Rin.ensureTypeOf(this.itemt, this.data.contents.shift()));\n\t},\n\n\t/**\n\t**\tSearches for an item matching the specified partial definition and returns its index. Returns -1 if the\n\t**\titem was not found. If retObject is set to true the object will be returned instead of its index and null\n\t**\twill be returned when the item is not found.\n\t**\n\t**\tint|object find (object data, bool retObject=false);\n\t*/\n\tfind: function (data, retObject)\n\t{\n\t\tvar contents = this.data.contents;\n\n\t\tfor (var i = 0; i < contents.length; i++)\n\t\t{\n\t\t\tif (Rin.partialCompare (contents[i].data, data))\n\t\t\t\treturn retObject ? contents[i] : i;\n\t\t}\n\n\t\treturn retObject ? null : -1;\n\t}\n});\n","/*\r\n**\trin/schema\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nlet Rin = require('./alpha');\r\n\r\n/**\r\n**\tThe utility functions in this module allow to create a very strict serialization/deserialization schema\r\n**\tto ensure that all values are of the specific type when stored in string format.\r\n*/\r\n\r\nlet Schema = module.exports =\r\n{\r\n\tType: function (proto)\r\n    {\r\n\t\tlet tmp =\r\n\t\t{\r\n            flatten: function (value, context) {\r\n                return value;\r\n            },\r\n\r\n            unflatten: function (value, context) {\r\n                return value;\r\n            }\r\n        };\r\n\r\n        return proto ? Rin.override(tmp, proto) : tmp;\r\n    },\r\n\r\n\tString: function()\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\tflatten: function (value, context) {\r\n\t\t\t\treturn value != null ? value.toString() : null;\r\n\t\t\t},\r\n\r\n\t\t\tunflatten: function (value, context) {\r\n\t\t\t\treturn value != null ? value.toString() : null;\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tInteger: function()\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\tflatten: function (value, context) {\r\n\t\t\t\treturn ~~value;\r\n\t\t\t},\r\n\r\n\t\t\tunflatten: function (value, context) {\r\n\t\t\t\treturn ~~value;\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tNumber: function (precision)\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\t_precision: precision,\r\n\t\t\t_round: false,\r\n\r\n\t\t\tprecision: function (value)\r\n\t\t\t{\r\n\t\t\t\tthis._precision = ~~value;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\tflatten: function (value, context)\r\n\t\t\t{\r\n\t\t\t\tvalue = parseFloat(value);\r\n\r\n\t\t\t\tif (this._precision > 0)\r\n\t\t\t\t\tvalue = (~~(value*Math.pow(10, this._precision))) / Math.pow(10, this._precision);\r\n\r\n\t\t\t\treturn value;\r\n\t\t\t},\r\n\r\n\t\t\tunflatten: function (value, context) {\r\n\t\t\t\treturn parseFloat(value);\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tBool: function (compact)\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\t_compact: compact,\r\n\r\n\t\t\tcompact: function(value)\r\n\t\t\t{\r\n\t\t\t\tthis._compact = value;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\tflatten: function (value, context) {\r\n\t\t\t\tvalue = ~~value;\r\n\t\t\t\treturn this._compact ? (value > 0 ? 1 : 0) : (value > 0 ? true : false);\r\n\t\t\t},\r\n\r\n\t\t\tunflatten: function (value, context) {\r\n\t\t\t\treturn (~~value) ? true : false;\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tSharedString: function()\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\tflatten: function (value, context)\r\n\t\t\t{\r\n\t\t\t\tif (value == null) return 0;\r\n\r\n\t\t\t\tvalue = value.toString();\r\n\r\n                if (!(\"strings\" in context))\r\n                {\r\n                    context.strings_map = { };\r\n                    context.strings = [ ];\r\n                }\r\n\r\n                if (!(value in context.strings_map))\r\n                {\r\n                    context.strings.push(value);\r\n                    context.strings_map[value] = context.strings.length;\r\n                }\r\n\r\n                return context.strings_map[value];\r\n            },\r\n\r\n\t\t\tunflatten: function (value, context)\r\n\t\t\t{\r\n                return value == null || value == 0 ? null : context.strings[~~value - 1];\r\n            }\r\n        });\r\n    },\r\n\r\n\tArray: function (type)\r\n    {\r\n        return Schema.Type({\r\n\r\n\t\t\titemType: type,\r\n\t\t\t_debug: false,\r\n\r\n\t\t\tdebug: function(v) {\r\n\t\t\t\tthis._debug = v;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n            of: function (type) {\r\n                this.itemType = type;\r\n                return this;\r\n            },\r\n\r\n\t\t\tflatten: function (value, context)\r\n\t\t\t{\r\n\t\t\t\tif (value == null) return null;\r\n\r\n                let o = [ ];\r\n                \r\n                for (let i = 0; i < value.length; i++)\r\n                    o.push(this.itemType.flatten(value[i], context));\r\n\r\n                return o;\r\n            },\r\n\r\n\t\t\tunflatten: async function (value, context)\r\n\t\t\t{\r\n\t\t\t\tif (value == null) return null;\r\n\r\n                let o = [ ];\r\n\r\n\t\t\t\tfor (let i = 0; i < value.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\to.push(await this.itemType.unflatten(value[i], context));\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            }\r\n        });\r\n    },\r\n\r\n    Object: function()\r\n    {\r\n        return Schema.Type({\r\n\r\n            properties: [ ],\r\n\r\n            property: function (name, type)\r\n            {\r\n                this.properties.push({ name: name, type: type });\r\n                return this;\r\n            },\r\n\r\n            flatten: function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tlet o;\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t{\r\n\t\t\t\t\to = { };\r\n\r\n\t\t\t\t\tfor (let i = 0; i < this.properties.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\to[this.properties[i].name] = this.properties[i].type.flatten(value[this.properties[i].name], context);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\to = [ ];\r\n\r\n\t\t\t\t\tfor (let i = 0; i < this.properties.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\to.push(this.properties[i].type.flatten(value[this.properties[i].name], context));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            },\r\n            \r\n            unflatten: async function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tlet o = { };\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t{\r\n\t\t\t\t\tfor (let i = 0; i < this.properties.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\to[this.properties[i].name] = await this.properties[i].type.unflatten(value[this.properties[i].name], context);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t\tfor (let i = 0; i < this.properties.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\to[this.properties[i].name] = await this.properties[i].type.unflatten(value[i], context);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            }\r\n        });\r\n\t},\r\n\r\n    Class: function (classConstructor)\r\n    {\r\n\t\treturn Schema.Type\r\n\t\t({\r\n            _constructor: classConstructor,\r\n\r\n            constructor: function (classConstructor)\r\n            {\r\n                this._constructor = classConstructor;\r\n                return this;\r\n            },\r\n\r\n            flatten: function (value, context)\r\n            {\r\n                return value == null ? null : value.flatten(context);\r\n            },\r\n\r\n            unflatten: async function (value, context)\r\n            {\r\n\t\t\t\treturn value == null ? null : await (new this._constructor()).unflatten(value, context);\r\n            }\r\n        });\r\n\t},\r\n\r\n\t/*\r\n\t**\tUsed when you want to specify just a single property.\r\n\t*/\r\n    Property: function(name, type)\r\n    {\r\n        return Schema.Type({\r\n\r\n\t\t\tproperty: name,\r\n\t\t\ttype: type,\r\n\r\n\t\t\tname: function (name)\r\n\t\t\t{\r\n\t\t\t\tthis.property = name;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\tis: function (type)\r\n\t\t\t{\r\n\t\t\t\tthis.type = type;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n            flatten: function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tlet o;\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t{\r\n\t\t\t\t\to = { };\r\n\t\t\t\t\to[this.property] = this.type.flatten(value[this.property], context);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\to = this.type.flatten(value[this.property], context);\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            },\r\n\r\n            unflatten: async function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tlet o = { };\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t\to[this.property] = await this.type.unflatten(value[this.property], context);\r\n\t\t\t\telse\r\n\t\t\t\t\to[this.property] = await this.type.unflatten(value, context);\r\n\r\n                return o;\r\n            }\r\n        });\r\n\t},\r\n\r\n    Map: function()\r\n    {\r\n        return Schema.Type({\r\n\r\n            flatten: function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t\treturn value;\r\n\r\n\t\t\t\tlet o = [ ];\r\n\r\n\t\t\t\tfor (let i in value)\r\n\t\t\t\t{\r\n\t\t\t\t\to.push(i);\r\n\t\t\t\t\to.push(value[i]);\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            },\r\n\r\n            unflatten: function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t\treturn value;\r\n\r\n\t\t\t\tlet o = { };\r\n\r\n\t\t\t\tfor (let i = 0; i < value.length; i += 2)\r\n\t\t\t\t\to[value[i]] = value[i+1];\r\n\r\n                return o;\r\n            }\r\n        });\r\n\t}\r\n};\r\n","/*\r\n**\trin/flattenable\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nlet Class = require('./class');\r\n\r\n/**\r\n**\tClass used to add flattening and unflattening capabilities to any object. A \"flat\" object is an object composed\r\n**\tonly of native types, that is: `null,` `boolean`, `integer`, `number`, `array` or `object`.\r\n*/\r\n\r\nmodule.exports = Class.extend\r\n({\r\n\t/**\r\n\t**\tName of the class.\r\n\t*/\r\n\tclassName: \"Flattenable\",\r\n\r\n\t/**\r\n\t**\tType schema used to flatten/unflatten the contents of this class. See Schema class for more information.\r\n\t*/\r\n\ttypeSchema: null,\r\n\r\n\t/**\r\n\t**\tReturns the flattened contents of the object.\r\n\t*/\r\n\tflatten: function (context)\r\n\t{\r\n\t\treturn this.typeSchema.flatten(this, context);\r\n\t},\r\n\r\n\t/**\r\n\t**\tUnflattens the given object and overrides the local contents.\r\n\t*/\r\n\tunflatten: async function (value, context)\r\n\t{\r\n\t\tObject.assign(this, await this.typeSchema.unflatten(value, context));\r\n\t\tawait this.onUnflattened();\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tExecuted when the unflatten() method is called on the object.\r\n\t*/\r\n\tonUnflattened: async function ()\r\n\t{\r\n\t}\r\n});\r\n","/*\r\n**\trin/collection\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nlet Flattenable = require('./flattenable');\r\nlet Schema = require('./schema');\r\nlet Rin = require('./alpha');\r\n\r\n/**\r\n**\tFlattenable collection class, used to store items and manipulate them. The items should also be flattenable.\r\n*/\r\n\r\nmodule.exports = Flattenable.extend\r\n({\r\n\t/**\r\n\t**\tName of the class.\r\n\t*/\r\n\tclassName: \"Collection\",\r\n\r\n\t/**\r\n\t**\tDescribes the type schema of the underlying items.\r\n\t*/\r\n\titemTypeSchema: null,\r\n\r\n\t/**\r\n\t**\tArray of items.\r\n\t*/\r\n\titems: null, /* Array */\r\n\r\n\t/**\r\n\t**\tConstructs the collection.\r\n\t*/\r\n\t__ctor: function (itemTypeSchema)\r\n\t{\r\n\t\tif (!itemTypeSchema) itemTypeSchema = this.itemTypeSchema;\r\n\r\n\t\tif (itemTypeSchema)\r\n\t\t\tthis.typeSchema = Schema.Property('items').is(Schema.Array().of(itemTypeSchema));\r\n\r\n\t\tthis.reset();\r\n\t},\r\n\r\n\t/*\r\n\t**\tExecuted after the collection has been unflattened, re-adds the items to ensure onItemAdded() is called.\r\n\t*/\r\n\tonUnflattened: function()\r\n\t{\r\n\t\tlet items = this.items;\r\n\t\tthis.reset();\r\n\r\n\t\tfor (let i of items)\r\n\t\t\tthis.add(i);\r\n\t},\r\n\r\n\t/*\r\n\t**\tResets the collection to empty. Note that onItemRemoved will not be called.\r\n\t*/\r\n\treset: function ()\r\n\t{\r\n\t\tthis.items = [];\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tClears the contents of the collection.\r\n\t*/\r\n\tclear: function ()\r\n\t{\r\n\t\tvar items = this.items;\r\n\t\tthis.reset();\r\n\r\n\t\tfor (var i = 0; i < items.length; i++)\r\n\t\t\tthis.onItemRemoved (items[i], 0);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tSorts the collection. A comparison function should be provided, or the name of a property to sort by.\r\n\t**\r\n\t**\tObject sort (fn: Function)\r\n\t**\tObject sort (prop: string, [desc:bool=false])\r\n\t*/\r\n\tsort: function (fn, desc)\r\n\t{\r\n\t\tif (typeof(fn) != \"function\")\r\n\t\t{\r\n\t\t\tthis.items.sort(function(a, b)\r\n\t\t\t{\r\n\t\t\t\treturn (a[fn] <= b[fn] ? -1 : 1) * (desc === true ? -1 : 1);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse\r\n\t\t\tthis.items.sort(fn);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tSearches for an item with the specified fields and returns it. The \"inc\" object is the \"inclusive\" map, meaning all fields must match\r\n\t**\tand the optional \"exc\" is the exclusive map, meaning not even one field should match.\r\n\t**\r\n\t**\tObject findItem (inc: Object, exc: Object);\r\n\t*/\t\r\n\tfindItem: function (inc, exc)\r\n\t{\r\n\t\tif (!this.items) return null;\r\n\r\n\t\tfor (var i = 0; i < this.items.length; i++)\r\n\t\t{\r\n\t\t\tif (exc && Rin.partialCompare(this.items[i], exc))\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif (Rin.partialCompare(this.items[i], inc))\r\n\t\t\t\treturn this.items[i];\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the container array.\r\n\t*/\r\n\tgetItems: function ()\r\n\t{\r\n\t\treturn this.items;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the number of items in the collection.\r\n\t*/\r\n\tcount: function ()\r\n\t{\r\n\t\treturn this.items.length;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns true if the collection is empty.\r\n\t*/\r\n\tisEmpty: function ()\r\n\t{\r\n\t\treturn !this.items.length;\r\n\t},\r\n\r\n\t/*\r\n\t**\tAdds an item to the collection, onBeforeItemAdded and onItemAdded will be triggered.\r\n\t*/\r\n\tadd: function (item)\r\n\t{\r\n\t\tif (!item || !this.onBeforeItemAdded(item))\r\n\t\t\treturn this;\r\n\r\n\t\tthis.items.push (item);\r\n\t\tthis.onItemAdded (item);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tAdds an item at the specified index, effectively moving the remaining items to the right.\r\n\t*/\r\n\taddAt: function (index, item)\r\n\t{\r\n\t\tif (!item || !this.onBeforeItemAdded (item))\r\n\t\t\treturn this;\r\n\r\n\t\tif (index < 0) index = 0;\r\n\t\tif (index > this.items.length) index = this.items.length;\r\n\r\n\t\tif (index == 0)\r\n\t\t{\r\n\t\t\tthis.items.unshift(item);\r\n\t\t}\r\n\t\telse if (index == this.items.length)\r\n\t\t{\r\n\t\t\tthis.items.push(item);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar tmp = this.items.splice(0, index);\r\n\t\t\ttmp.push(item);\r\n\r\n\t\t\tthis.items = tmp.concat(this.items);\r\n\t\t}\r\n\r\n\t\tthis.onItemAdded (item);\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tTraverses the given array and adds all items to the collection.\r\n\t*/\r\n\taddItems: function (list)\r\n\t{\r\n\t\tif (!list) return this;\r\n\r\n\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\tthis.add (list[i]);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the index of the specified item, or -1 if not found.\r\n\t*/\r\n\tindexOf: function (item)\r\n\t{\r\n\t\treturn this.items.indexOf(item);\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the item at the specified index, or null if not found.\r\n\t*/\r\n\tgetAt: function (index, rel)\r\n\t{\r\n\t\tif (index < 0 && rel == true)\r\n\t\t\tindex += this.items.length;\r\n\r\n\t\treturn index >= 0 && index < this.items.length ? this.items[index] : null;\r\n\t},\r\n\r\n\t/*\r\n\t**\tRemoves the item at the specified index.\r\n\t*/\r\n\tremoveAt: function (index)\r\n\t{\r\n\t\tif (index < 0 || index >= this.items.length)\r\n\t\t\treturn this;\r\n\r\n\t\tvar item = this.items[index];\r\n\r\n\t\tthis.items.splice (index, 1);\r\n\r\n\t\tthis.onItemRemoved (item, index);\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tRemoves the specified item.\r\n\t*/\r\n\tremove: function (item)\r\n\t{\r\n\t\tthis.removeAt (this.indexOf(item));\r\n\t},\r\n\r\n\t/*\r\n\t**\tRuns the specified callback for each of the items in the collection, if false is returned by the callback this function\r\n\t**\twill exit immediately. Parameters to the callback are: (item, index, collection).\r\n\t*/\r\n\tforEach: function (callback)\r\n\t{\r\n\t\tif (this.isEmpty())\r\n\t\t\treturn this;\r\n\r\n\t\tfor (var i = 0; i < this.items.length; i++)\r\n\t\t\tif (callback (this.items[i], i, this) === false) break;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tExecutes a method call with the specified parameters on each of the items in the collection, if false is returned by the\r\n\t**\titem's method this function will exit immediately.\r\n\t*/\r\n\tforEachCall: function (method, ...args)\r\n\t{\r\n\t\tif (this.isEmpty())\r\n\t\t\treturn this;\r\n\r\n\t\tfor (var i = 0; i < this.items.length; i++)\r\n\t\t\tif (this.items[i][method] (...args) === false) break;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tExactly the same as forEach but in reverse order.\r\n\t*/\r\n\tforEachRev: function (callback)\r\n\t{\r\n\t\tif (this.isEmpty())\r\n\t\t\treturn this;\r\n\r\n\t\tfor (var i = this.items.length-1; i >= 0; i--)\r\n\t\t\tif (callback (this.items[i], i, this) === false) break;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tExactly the same as forEachCall but in reverse order.\r\n\t*/\r\n\tforEachRevCall: function (method, ...args)\r\n\t{\r\n\t\tif (this.isEmpty())\r\n\t\t\treturn this;\r\n\r\n\t\tfor (var i = this.items.length-1; i >= 0; i--)\r\n\t\t\tif (this.items[i][method] (...args) === false) break;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tHandler for the beforeItemAdded event. If returns false the item will not be added.\r\n\t*/\r\n\tonBeforeItemAdded: function (item)\r\n\t{\r\n\t\treturn true;\r\n\t},\r\n\r\n\t/*\r\n\t**\tHandler for the itemAdded event.\r\n\t*/\r\n\tonItemAdded: function (item)\r\n\t{\r\n\t},\r\n\r\n\t/*\r\n\t**\tHandler for the itemRemoved event.\r\n\t*/\r\n\tonItemRemoved: function (item)\r\n\t{\r\n\t}\r\n});\r\n","/*\n**\trin/template\n**\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\n**\thttps://www.rsthn.com/\n**\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nlet Rin = require('./alpha');\n\n/**\n**\tTemplating module. The template formats available are shown below, note that the sym-open and sym-close symbols are by\n**\tdefault the square brackets, however those can be modified since are just parameters.\n**\n**\tHTML Escaped Output:\t\t\t[data.value]\t\t\t\t\tEscapes HTML characters from the output.\n**\tRaw Output:\t\t\t\t\t\t[!data.value]\t\t\t\t\tDoes not escape HTML characters from the output (used to output direct HTML).\n**\tDouble-Quoted Escaped Output:\t[data.value]\t\t\t\t\tEscapes HTML characters and surrounds with double quotes.\n**\tImmediate Reparse:\t\t\t\t[<....] [@....] \"...\" '...'\t\tReparses the contents as if parseTemplate() was called again.\n**\tImmediate Output:\t\t\t\t[:...]\t\t\t\t\t\t\tTakes the contents and outputs exactly as-is without format and optionally surrounded by the\n**\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsym-open and sym-close symbols when the first character is not '<', sym_open or space.\n**\tFiltered Output:\t\t\t\t[functionName ... <expr> ...]\tRuns a function call, 'expr' can be any of the allowed formats shown here (nested if desired),\n**\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfunctionName should map to one of the available expression functions registered in the\n**\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRin.Template.functions map, each of which have their own parameters.\n*/\n\nlet Template = module.exports =\n{\n\t/*\n\t**\tStrict mode flag. When set, any undefined expression function will trigger an exception.\n\t*/\n\tstrict: false,\n\n\t/**\n\t**\tParses a template and returns the compiled 'parts' structure to be used by the 'expand' method.\n\t**\n\t**\t>> array parseTemplate (string template, char sym_open, char sym_close, bool is_tpl=false);\n\t*/\n\tparseTemplate: function (template, sym_open, sym_close, is_tpl=false, root=1)\n\t{\n\t\tlet nflush = 'string', flush = null, state = 0, count = 0;\n\t\tlet str = '', parts = [], mparts = parts, nparts = false;\n\n\t\tif (is_tpl === true)\n\t\t{\n\t\t\ttemplate = template.trim();\n\t\t\tnflush = 'identifier';\n\t\t\tstate = 10;\n\n\t\t\tmparts.push(parts = []);\n\t\t}\n\n\t\ttemplate += \"\\0\";\n\n\t\tfunction unescape (value)\n\t\t{\n\t\t\tif (typeof(value) == 'object')\n\t\t\t{\n\t\t\t\tif (value instanceof Array)\n\t\t\t\t{\n\t\t\t\t\tfor (let i = 0; i < value.length; i++)\n\t\t\t\t\t\tunescape(value[i]);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvalue.data = unescape(value.data);\n\t\t\t\t}\n\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < value.length; i++)\n\t\t\t{\n\t\t\t\tif (value[i] == '\\\\')\n\t\t\t\t{\n\t\t\t\t\tlet r = value[i+1];\n\n\t\t\t\t\tswitch (r)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase 'n': r = \"\\n\"; break;\n\t\t\t\t\t\tcase 'r': r = \"\\r\"; break;\n\t\t\t\t\t\tcase 'f': r = \"\\f\"; break;\n\t\t\t\t\t\tcase 'v': r = \"\\v\"; break;\n\t\t\t\t\t\tcase 't': r = \"\\t\"; break;\n\t\t\t\t\t\tcase 's': r = \"\\s\"; break;\n\t\t\t\t\t\tcase '\"': r = \"\\\"\"; break;\n\t\t\t\t\t\tcase \"'\": r = \"\\'\"; break;\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = value.substr(0, i) + r + value.substr(i+2);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\n\t\tfunction emit (type, data)\n\t\t{\n\t\t\tif (type == 'template')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data, sym_open, sym_close, true, 0);\n\t\t\t}\n\t\t\telse if (type == 'parse')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data, sym_open, sym_close, false, 0);\n\t\t\t\ttype = 'base-string';\n\n\t\t\t\tif (Rin.typeOf(data) == 'array')\n\t\t\t\t{\n\t\t\t\t\ttype = data[0].type;\n\t\t\t\t\tdata = data[0].data;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (type == 'parse-trim-merge')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data.trim().split('\\n').map(i => i.trim()).join(\"\\n\"), sym_open, sym_close, false, 0);\n\t\t\t}\n\t\t\telse if (type == 'parse-merge')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data, sym_open, sym_close, false, 0);\n\t\t\t}\n\t\t\telse if (type == 'parse-merge-alt')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data, '{', '}', false, 0);\n\t\t\t}\n\n\t\t\tif (type == 'parse-merge' || type == 'parse-merge-alt' || type == 'parse-trim-merge')\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < data.length; i++)\n\t\t\t\t{\n\t\t\t\t\tparts.push(data[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t\tparts.push({ type: type, data: data });\n\n\t\t\tif (nparts)\n\t\t\t{\n\t\t\t\tmparts.push(parts = []);\n\t\t\t\tnparts = false;\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < template.length; i++)\n\t\t{\n\t\t\tif (template[i] == '\\\\')\n\t\t\t{\n\t\t\t\tstr += '\\\\';\n\t\t\t\tstr += template[++i];\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tswitch (state)\n\t\t\t{\n\t\t\t\tcase 0:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == '<')\n\t\t\t\t\t{\n\t\t\t\t\t\tstate = 1; count = 1;\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t\tnflush = 'parse-merge';\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == '@')\n\t\t\t\t\t{\n\t\t\t\t\t\tstate = 1; count = 1;\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t\tnflush = 'parse-trim-merge';\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == ':')\n\t\t\t\t\t{\n\t\t\t\t\t\tstate = 12; count = 1;\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t\tnflush = 'string';\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tstate = 1; count = 1;\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t\tnflush = 'template';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tstr += template[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\n\t\t\t\tcase 1:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (template[i] == sym_close)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + sym_close);\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 0;\n\t\t\t\t\t\t\tflush = nflush;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 10:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tflush = nflush;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == '.')\n\t\t\t\t\t{\n\t\t\t\t\t\temit (nflush, str);\n\t\t\t\t\t\temit ('access', '.');\n\n\t\t\t\t\t\tnflush = 'identifier';\n\t\t\t\t\t\tstr = '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i].match(/[\\t\\n\\r\\f\\v ]/) != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tflush = nflush;\n\t\t\t\t\t\tnflush = 'identifier';\n\t\t\t\t\t\tnparts = true;\n\n\t\t\t\t\t\twhile (template[i].match(/[\\t\\n\\r\\f\\v ]/) != null) i++;\n\t\t\t\t\t\ti--;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == '<')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 11; count = 1; nflush = 'parse-merge';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == '@')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 11; count = 1; nflush = 'parse-trim-merge';\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == '\"')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 14; count = 1; nflush = 'parse-merge';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == '\\'')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 15; count = 1; nflush = 'parse-merge';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == '`')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 16; count = 1; nflush = 'parse-merge-alt';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == ':')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 13; count = 1; nflush = 'string';\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) emit (nflush, str);\n\t\t\t\t\t\tstate = 11; count = 1; str = ''; nflush = 'parse';\n\t\t\t\t\t\tstr += template[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (nflush != 'identifier')\n\t\t\t\t\t{\n\t\t\t\t\t\temit (nflush, str);\n\t\t\t\t\t\tstr = '';\n\t\t\t\t\t\tnflush = 'identifier';\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\t\n\t\t\t\tcase 11:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\n\t\t\t\t\tif (template[i] == sym_close)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + sym_close);\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 10;\n\t\n\t\t\t\t\t\t\tif (nflush == 'parse-merge' || nflush == 'parse-merge-alt' || nflush == 'parse-trim-merge')\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 12:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\n\t\t\t\t\tif (template[i] == sym_close)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + sym_close);\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (str.length != 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (!(str[0] == '<' || str[0] == '[' || str[0] == ' '))\n\t\t\t\t\t\t\t\t\tstr = sym_open + str + sym_close;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tstate = 0;\n\t\t\t\t\t\t\tflush = nflush;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 13:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\n\t\t\t\t\tif (template[i] == sym_close)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + sym_close);\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!(str[0] == '<' || str[0] == '[' || str[0] == ' '))\n\t\t\t\t\t\t\t\tstr = sym_open + str + sym_close;\n\n\t\t\t\t\t\t\tstate = 10;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 14:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (template[i] == '\"')\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + '\"');\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 10;\n\t\n\t\t\t\t\t\t\tif (nflush == 'parse-merge' || nflush == 'parse-merge-alt' || nflush == 'parse-trim-merge')\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 15:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (template[i] == '\\'')\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + '\\'');\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 10;\n\t\n\t\t\t\t\t\t\tif (nflush == 'parse-merge' || nflush == 'parse-merge-alt' || nflush == 'parse-trim-merge')\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 16:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (template[i] == '`')\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + '`');\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 10;\n\t\n\t\t\t\t\t\t\tif (nflush == 'parse-merge' || nflush == 'parse-merge-alt' || nflush == 'parse-trim-merge')\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (flush)\n\t\t\t{\n\t\t\t\temit (flush, str);\n\t\t\t\tflush = str = '';\n\t\t\t}\n\t\t}\n\n\t\tif (!is_tpl)\n\t\t{\n\t\t\tlet i = 0;\n\t\t\twhile (i < mparts.length)\n\t\t\t{\n\t\t\t\tif (mparts[i].type == 'string' && mparts[i].data == '')\n\t\t\t\t\tmparts.splice(i, 1);\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\ti = mparts.length-1;\n\t\t\twhile (i > 0)\n\t\t\t{\n\t\t\t\tif (mparts[i].type == 'string' && mparts[i].data == '')\n\t\t\t\t\tmparts.splice(i--, 1);\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (mparts.length == 0)\n\t\t\t\tmparts.push({ type: 'string', data: '' });\n\t\t}\n\n\t\tif (root)\n\t\t\tunescape(mparts);\n\n\t\treturn mparts;\n\t},\n\n\t/**\n\t**\tParses a template and returns the compiled 'parts' structure to be used by the 'expand' method. This\n\t**\tversion assumes the sym_open and sym_close chars are [ and ] respectively.\n\t**\n\t**\t>> array parse (string template);\n\t*/\n\tparse: function (template)\n\t{\n\t\treturn this.parseTemplate(template.trim(), '[', ']', false);\n\t},\n\n\t/**\n\t**\tExpands a template using the given data object, ret can be set to 'text' or 'obj' allowing to expand the template as\n\t**\ta string (text) or an array of objects (obj) respectively. If none provided it will be expanded as text.\n\t**\n\t**\t>> string/array expand (array parts, object data, string ret='text', string mode='base-string');\n\t*/\n\texpand: function (parts, data, ret='text', mode='base-string')\n\t{\n\t\tlet s = [];\n\n\t\t// Expand variable parts.\n\t\tif (mode == 'var')\n\t\t{\n\t\t\tlet escape = true;\n\t\t\tlet quote = false;\n\n\t\t\tlet root = data;\n\t\t\tlet last = null;\n\t\t\tlet first = true;\n\t\t\tlet str = '';\n\n\t\t\tfor (let i = 0; i < parts.length && data != null; i++)\n\t\t\t{\n\t\t\t\tswitch (parts[i].type)\n\t\t\t\t{\n\t\t\t\t\tcase 'identifier':\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tstr += parts[i].data;\n\t\t\t\t\t\tlast = null;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'template':\n\t\t\t\t\t\tlast = this.expand(parts[i].data, root, 'arg', 'template');\n\t\t\t\t\t\tstr += typeof(last) != 'object' ? last : '';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'base-string':\n\t\t\t\t\t\tstr += this.expand(parts[i].data, root, 'arg', 'base-string');\n\t\t\t\t\t\tlast = null;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'access':\n\t\t\t\t\t\tif (!last || typeof(last) != 'object')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!str) str = 'this';\n\n\t\t\t\t\t\t\twhile (true)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (str[0] == '!')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\t\t\t\t\tescape = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (str[0] == '$')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\t\t\t\t\tquote = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (str != 'this' && data != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlet tmp = data;\n\t\t\t\t\t\t\t\tdata = (str in data) ? data[str] : null;\n\n\t\t\t\t\t\t\t\tif (data === null && first)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (str in Template.functions)\n\t\t\t\t\t\t\t\t\t\tdata = Template.functions[str] (null, null, tmp);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfirst = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tdata = last;\n\n\t\t\t\t\t\tstr = '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (str != '')\n\t\t\t{\n\t\t\t\tif (str[0] == '!')\n\t\t\t\t{\n\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\tescape = false;\n\t\t\t\t}\n\t\t\t\telse if (str[0] == '$')\n\t\t\t\t{\n\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\tquote = true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (str != 'this')\n\t\t\t{\n\t\t\t\tlet failed = false;\n\n\t\t\t\tif (data != null)\n\t\t\t\t{\n\t\t\t\t\tif (!(str in data))\n\t\t\t\t\t{\n\t\t\t\t\t\tfailed = true;\n\t\t\t\t\t\tdata = null;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tdata = data[str];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tfailed = true;\n\n\t\t\t\tif (failed && parts.length == 1)\n\t\t\t\t{\n\t\t\t\t\tif (Template.strict == true)\n\t\t\t\t\t\tthrow new Error ('Expression function `'+str+'` not found.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (typeof(data) == 'string')\n\t\t\t{\n\t\t\t\tif (escape)\n\t\t\t\t\tdata = data.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n\n\t\t\t\tif (quote)\n\t\t\t\t\tdata = '\"' + data + '\"';\n\t\t\t}\n\n\t\t\ts.push(data);\n\t\t}\n\n\t\t// Expand variable parts and returns a reference to it.\n\t\tif (ret == 'varref')\n\t\t{\n\t\t\tlet root = data;\n\t\t\tlet last = null;\n\t\t\tlet first = true;\n\t\t\tlet str = '';\n\n\t\t\tfor (let i = 0; i < parts.length && data != null; i++)\n\t\t\t{\n\t\t\t\tswitch (parts[i].type)\n\t\t\t\t{\n\t\t\t\t\tcase 'identifier':\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tstr += parts[i].data;\n\t\t\t\t\t\tlast = null;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'template':\n\t\t\t\t\t\tlast = this.expand(parts[i].data, root, 'arg', 'template');\n\t\t\t\t\t\tstr += typeof(last) != 'object' ? last : '';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'base-string':\n\t\t\t\t\t\tstr += this.expand(parts[i].data, root, 'arg', 'base-string');\n\t\t\t\t\t\tlast = null;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'access':\n\t\t\t\t\t\tif (!last || typeof(last) != 'object')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!str) str = 'this';\n\n\t\t\t\t\t\t\twhile (true)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (str[0] == '!')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (str[0] == '$')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (str != 'this' && data != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlet tmp = data;\n\t\t\t\t\t\t\t\tdata = (str in data) ? data[str] : null;\n\n\t\t\t\t\t\t\t\tif (data === null && first)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (str in Template.functions)\n\t\t\t\t\t\t\t\t\t\tdata = Template.functions[str] (null, null, tmp);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfirst = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tdata = last;\n\n\t\t\t\t\t\tstr = '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (str != '')\n\t\t\t{\n\t\t\t\tif (str[0] == '!')\n\t\t\t\t{\n\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t}\n\t\t\t\telse if (str[0] == '$')\n\t\t\t\t{\n\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn str != 'this' ? [data, str] : null;\n\t\t}\n\n\t\t// Expand function parts.\n\t\tif (mode == 'fn')\n\t\t{\n\t\t\tvar args = [];\n\n\t\t\targs.push(Template.expand(parts[0], data, 'text', 'base-string'));\n\n\t\t\tif ('_'+args[0] in Template.functions)\n\t\t\t\targs[0] = '_'+args[0];\n\n\t\t\tif (!(args[0] in Template.functions))\n\t\t\t{\n\t\t\t\tif (Template.strict == true)\n\t\t\t\t\tthrow new Error ('Expression function `'+args[0]+'` not found.');\n\n\t\t\t\treturn `(Unknown: ${args[0]})`;\n\t\t\t}\n\n\t\t\tif (args[0][0] == '_')\n\t\t\t\treturn Template.functions[args[0]] (parts, data);\n\n\t\t\tfor (let i = 1; i < parts.length; i++)\n\t\t\t\targs.push(Template.expand(parts[i], data, 'arg', 'base-string'));\n\n\t\t\ts.push(Template.functions[args[0]] (args, parts, data));\n\t\t}\n\n\t\t// Template mode.\n\t\tif (mode == 'template')\n\t\t{\n\t\t\tif (parts.length == 1)\n\t\t\t{\n\t\t\t\tif (parts[0].length == 1 && parts[0][0].type == 'string')\n\t\t\t\t\treturn parts[0][0].data;\n\n\t\t\t\tif (parts[0].length == 1 && parts[0][0].type == 'identifier')\n\t\t\t\t{\n\t\t\t\t\tlet name = parts[0][0].data;\n\n\t\t\t\t\tif (name in Template.functions || '_'+name in Template.functions)\n\t\t\t\t\t\treturn Template.expand(parts, data, ret, 'fn');\n\t\t\t\t}\n\t\n\t\t\t\treturn Template.expand(parts[0], data, ret, 'var');\n\t\t\t}\n\n\t\t\treturn Template.expand(parts, data, ret, 'fn');\n\t\t}\n\n\t\t// Expand parts.\n\t\tif (mode == 'base-string')\n\t\t{\n\t\t\tlet index = -1;\n\n\t\t\tfor (let i of parts)\n\t\t\t{\n\t\t\t\tlet tmp = null;\n\t\t\t\tindex++;\n\n\t\t\t\tswitch (i.type)\n\t\t\t\t{\n\t\t\t\t\tcase 'template':\n\t\t\t\t\t\ttmp = Template.expand(i.data, data, ret, 'template');\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'string': case 'identifier':\n\t\t\t\t\t\ttmp = i.data;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'base-string':\n\t\t\t\t\t\ttmp = Template.expand(i.data, data, ret, 'base-string');\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (ret == 'void')\n\t\t\t\t\tcontinue;\n\n\t\t\t\tif (ret == 'last' && index != parts.length-1)\n\t\t\t\t\tcontinue;\n\n\t\t\t\ts.push(tmp);\n\t\t\t}\n\t\t}\n\n\t\t// Return types for direct objects.\n\t\tif (ret == 'obj') return s;\n\n\t\tif (ret == 'last')\n\t\t{\n\t\t\tif (typeOf(s) == 'Rose\\\\Arry')\n\t\t\t\ts = s[0];\n\n\t\t\treturn s;\n\t\t}\n\n\t\t// When the output is not really needed.\n\t\tif (ret == 'void') return null;\n\n\t\t// Return as argument ('object' if only one, or string if more than one), that is, the first item in the result.\n\t\tif (ret == 'arg')\n\t\t{\n\t\t\tif (Rin.typeOf(s) == 'array')\n\t\t\t{\n\t\t\t\tif (s.length != 1)\n\t\t\t\t\treturn s.join('');\n\n\t\t\t\treturn s[0];\n\t\t\t}\n\n\t\t\treturn s;\n\t\t}\n\n\t\tif (ret == 'text' && Rin.typeOf(s) == 'array')\n\t\t{\n\t\t\tlet f = (e => e != null && typeof(e) == 'object' ? ('map' in e ? e.map(f).join('') : ('join' in e ? e.join('') : e.toString())) : e);\n\t\t\ts = s.map(f).join('');\n\t\t}\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tParses the given template and returns a function that when called with an object will expand the template.\n\t**\n\t**\t>> object compile (string template);\n\t*/\n\tcompile: function (template)\n\t{\n\t\ttemplate = Template.parse(template);\n\n\t\treturn function (data=null, mode='text') {\n\t\t\treturn Template.expand(template, data ? data : { }, mode);\n\t\t};\n\t},\n\n\t/**\n\t**\tParses and expands the given template immediately.\n\t**\n\t**\t>> object eval (string template, object data, string mode='text');\n\t*/\n\teval: function (template, data=null, mode='text')\n\t{\n\t\ttemplate = Template.parse(template);\n\t\treturn Template.expand(template, data ? data : { }, mode);\n\t},\n\n\t/**\n\t**\tExpands the template as 'arg' and returns the result.\n\t**\n\t**\t>> object value (string parts, object data);\n\t*/\n\tvalue: function (parts, data=null)\n\t{\n\t\treturn Rin.typeOf(parts) != 'array' ? parts : Template.expand(parts, data ? data : { }, 'arg');\n\t},\n\n\t/**\n\t**\tRegisters an expression function.\n\t**\n\t**\t>> object register (string name, function fn);\n\t*/\n\tregister: function (name, fn)\n\t{\n\t\tTemplate.functions[name] = fn;\n\t}\n};\n\n\n/**\n**\tTemplate functions, functions that are used to format data. Each function takes three parameters (args, parts and data). By default the function arguments\n**\tare expanded and passed via 'args' for convenience, however if the function name starts with '_' the 'args' parameter will be skipped and only (parts, data)\n**\twill be available, each 'part' must be expanded manually by calling Template.expand.\n*/\n\nTemplate.functions =\n{\n\t/**\n\t**\tExpression functions.\n\t*/\n\t'null': function(args) { return null; },\n\t'true': function(args) { return true; },\n\t'false': function(args) { return false; },\n\n\t'len': function(args) { return args[1].toString().length; },\n\t'int': function(args) { return ~~args[1]; },\n\t'str': function(args) { return args[1].toString(); },\n\t'float': function(args) { return parseFloat(args[1]); },\n\t'chr': function(args) { return String.fromCharCode(args[1]); },\n\t'ord': function(args) { return args[1].toString().charCodeAt(0); },\n\n\t'not': function(args) { return !args[1]; },\n\t'neg': function(args) { return -args[1]; },\n\t'abs': function(args) { return Math.abs(args[1]); },\n\n\t'eq': function(args) { return args[1] == args[2]; },\n\t'ne': function(args) { return args[1] != args[2]; },\n\t'lt': function(args) { return args[1] < args[2]; },\n\t'le': function(args) { return args[1] <= args[2]; },\n\t'gt': function(args) { return args[1] > args[2]; },\n\t'ge': function(args) { return args[1] >= args[2]; },\n\t'and': function(args) { for (let i = 1; i < args.length; i++) if (!args[i]) return false; return true; },\n\t'or': function(args) { for (let i = 1; i < args.length; i++) if (~~args[i]) return true; return false; },\n\n\t'isnotnull': function(args) { return !!args[1]; },\n\t'isnull': function(args) { return !args[1]; },\n\t'typeof': function(args) { return Rin.typeOf(args[1]); },\n\n\t'*': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x *= args[i]; return x; },\n\t'mul': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x *= args[i]; return x; },\n\t'/': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x /= args[i]; return x; },\n\t'div': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x /= args[i]; return x; },\n\t'+': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x -= -args[i]; return x; },\n\t'sum': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x -= -args[i]; return x; },\n\t'-': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x -= args[i]; return x; },\n\t'sub': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x -= args[i]; return x; },\n\t'mod': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x %= args[i]; return x; },\n\t'**': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x = Math.pow(x, args[i]); return x; },\n\t'pow': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x = Math.pow(x, args[i]); return x; },\n\n\t/**\n\t**\tReturns the JSON representation of the expression.\n\t**\n\t**\tjson <expr>\n\t*/\n\t'json': function (args)\n\t{\n\t\treturn JSON.stringify(args[1]);\n\t},\n\n\t/**\n\t**\tSets a variable in the data context.\n\t**\n\t**\tset <var-name> <expr>\n\t*/\n\t'_set': function (parts, data)\n\t{\n\t\tlet value = Template.value(parts[2], data);\n\n\t\tif (parts[1].length > 1)\n\t\t{\n\t\t\tlet ref = Template.expand(parts[1], data, 'varref');\n\t\t\tif (ref != null) ref[0][ref[1]] = value;\n\t\t\treturn '';\n\t\t}\n\t\n\t\tdata[Template.value(parts[1], data)] = value;\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tReturns the expression without white-space on the left or right. The expression can be a string or an array.\n\t**\n\t**\ttrim <expr>\n\t*/\n\t'trim': function (args)\n\t{\n\t\treturn args[1] ? (typeof(args[1]) == \"object\" ? args[1].map(e => e.trim()) : args[1].trim()) : '';\n\t},\n\n\t/**\n\t**\tReturns the expression in uppercase. The expression can be a string or an array.\n\t**\n\t**\tupper <expr>\n\t*/\n\t'upper': function (args)\n\t{\n\t\treturn args[1] ? (typeof(args[1]) == \"object\" ? args[1].map(e => e.toUpperCase()) : args[1].toUpperCase()) : '';\n\t},\n\n\t/**\n\t**\tReturns the expression in lower. The expression can be a string or an array.\n\t**\n\t**\tlower <expr>\n\t*/\n\t'lower': function (args)\n\t{\n\t\treturn args[1] ? (typeof(args[1]) == \"object\" ? args[1].map(e => e.toLowerCase()) : args[1].toLowerCase()) : '';\n\t},\n\n\t/**\n\t**\tReturns a sub-string of the given string.\n\t**\n\t**\tsubstr <start> <count> <string>\n\t**\tsubstr <start> <string>\n\t*/\n\t'substr': function (args)\n\t{\n\t\tlet s = args[args.length-1].toString();\n\n\t\tlet start = 0;\n\t\tlet count = null;\n\n\t\tif (args.length == 4)\n\t\t{\n\t\t\tstart = ~~(args[1]);\n\t\t\tcount = ~~(args[2]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstart = ~~(args[1]);\n\t\t\tcount = null;\n\t\t}\n\n\t\tif (start < 0) start += s.length;\n\t\tif (count < 0) count += s.length;\n\n\t\tif (count === null)\n\t\t\tcount = s.length - start;\n\n\t\treturn s.substr(start, count);\n\t},\n\n\t/**\n\t**\tReplaces a matching string with the given replacement string in a given text.\n\t**\n\t**\treplace <search> <replacement> <text>\n\t*/\n\t'replace': function (args)\n\t{\n\t\treturn args[3].split(args[1]).join(args[2]);\n\t},\n\n\t/**\n\t**\tConverts all new-line chars in the expression to <br/>, the expression can be a string or an array.\n\t**\n\t**\tnl2br <expr>\n\t*/\n\t'nl2br': function (args)\n\t{\n\t\treturn args[1] ? (typeof(args[1]) == \"object\" ? args[1].map(e => e.replace(/\\n/g, \"<br/>\")) : args[1].replace(/\\n/g, \"<br/>\")) : '';\n\t},\n\n\t/**\n\t**\tReturns the expression inside an XML tag named 'tag-name', the expression can be a string or an array.\n\t**\n\t**\t% <tag-name> <expr>\n\t*/\n\t'%': function (args)\n\t{\n\t\targs.shift();\n\t\tvar name = args.shift();\n\n\t\tlet s = '';\n\n\t\tfor (let i = 0; i < args.length; i++)\n\t\t{\n\t\t\tif (Rin.typeOf(args[i]) == 'array')\n\t\t\t{\n\t\t\t\ts += `<${name}>`;\n\t\t\t\t\n\t\t\t\tfor (let j = 0; j < args[i].length; j++)\n\t\t\t\t\ts += args[i][j];\n\n\t\t\t\ts += `</${name}>`;\n\t\t\t}\n\t\t\telse\n\t\t\t\ts += `<${name}>${args[i]}</${name}>`;\n\t\t}\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tReturns the expression inside an XML tag named 'tag-name', attributes are supported.\n\t**\n\t**\t%% <tag-name> [<attr> <value>]* [<content>]\n\t*/\n\t'%%': function (args)\n\t{\n\t\targs.shift();\n\t\tvar name = args.shift();\n\n\t\tlet attr = '';\n\t\tlet text = '';\n\n\t\tfor (let i = 0; i < args.length; i += 2)\n\t\t{\n\t\t\tif (i+1 < args.length)\n\t\t\t\tattr += ` ${args[i]}=\"${args[i+1]}\"`;\n\t\t\telse\n\t\t\t\ttext = args[i];\n\t\t}\n\n\t\treturn text ? `<${name}${attr}>${text}</${name}>` : `<${name}${attr}/>`;\n\t},\n\n\t/**\n\t**\tJoins the given array expression into a string. The provided string-expr will be used as separator.\n\t**\n\t**\tjoin <string-expr> <array-expr>\n\t*/\n\t'join': function (args)\n\t{\n\t\tif (args[2] && Rin.typeOf(args[2]) == 'array')\n\t\t\treturn args[2].join(args[1]);\n\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tSplits the given expression by the specified string. Returns an array.\n\t**\n\t**\tsplit <string-expr> <expr>\n\t*/\n\t'split': function (args)\n\t{\n\t\tif (args[2] && typeof(args[2]) == \"string\")\n\t\t\treturn args[2].split(args[1]);\n\n\t\treturn [];\n\t},\n\n\t/**\n\t**\tReturns an array with the keys of the given object-expr.\n\t**\n\t**\tkeys <object-expr>\n\t*/\n\t'keys': function (args)\n\t{\n\t\tif (args[1] && typeof(args[1]) == \"object\")\n\t\t\treturn Object.keys(args[1]);\n\n\t\treturn [];\n\t},\n\n\t/**\n\t**\tReturns an array with the values of the given object-expr.\n\t**\n\t**\tvalues <object-expr>\n\t*/\n\t'values': function (args)\n\t{\n\t\tif (args[1] && typeof(args[1]) == \"object\")\n\t\t\treturn Object.values(args[1]);\n\n\t\treturn [];\n\t},\n\n\t/**\n\t**\tConstructs an array obtained by expanding the given template for each of the items in the list-expr, the mandatory varname\n\t**\tparameter (namely 'i') indicates the name of the variable that will contain the data of each item as the list-expr is\n\t**\ttraversed. Extra variables i# and i## (suffix '#' and '##') are introduced to denote the index/key and numeric index\n\t**\tof the current item respectively, note that the later will always have a numeric value.\n\t**\n\t**\teach <varname> <list-expr> <template>\n\t*/\n\t'_each': function (parts, data)\n\t{\n\t\tlet var_name = Template.expand(parts[1], data, 'arg');\n\t\tlet list = Template.expand(parts[2], data, 'arg');\n\n\t\tlet s = [];\n\t\tlet j = 0;\n\n\t\tif (!list) return s;\n\n\t\tfor (let i in list)\n\t\t{\n\t\t\tdata[var_name] = list[i];\n\t\t\tdata[var_name + '##'] = j++;\n\t\t\tdata[var_name + '#'] = i;\n\n\t\t\ts.push(Template.expand(parts[3], data, 'text'));\n\t\t}\n\n\t\tdelete data[var_name];\n\t\tdelete data[var_name + '##'];\n\t\tdelete data[var_name + '#'];\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tExpands the given template for each of the items in the list-expr, the mandatory varname parameter (namely 'i') indicates the name of the variable\n\t**\tthat will contain the data of each item as the list-expr is traversed. Extra variables i# and i## (suffix '#' and '##') are introduced to denote\n\t**\tthe index/key and numeric index of the current item respectively, note that the later will always have a numeric value.\n\t**\n\t**\tDoes not produce any output (returns null).\n\t**\n\t**\tforeach <varname> <list-expr> <template>\n\t*/\n\t'_foreach': function (parts, data)\n\t{\n\t\tlet var_name = Template.expand(parts[1], data, 'arg');\n\t\tlet list = Template.expand(parts[2], data, 'arg');\n\n\t\tlet j = 0;\n\n\t\tif (!list) return null;\n\n\t\tfor (let i in list)\n\t\t{\n\t\t\tdata[var_name] = list[i];\n\t\t\tdata[var_name + '##'] = j++;\n\t\t\tdata[var_name + '#'] = i;\n\n\t\t\tTemplate.expand(parts[3], data, 'text');\n\t\t}\n\n\t\tdelete data[var_name];\n\t\tdelete data[var_name + '##'];\n\t\tdelete data[var_name + '#'];\n\n\t\treturn null;\n\t},\n\n\t/**\n\t**\tReturns the valueA if the expression is true otherwise valueB, this is a short version of the 'if' function with the\n\t**\tdifference that the result is 'obj' instead of text.\n\t**\n\t**\t? <expr> <valueA> [<valueB>]\n\t*/\n\t'_?': function (parts, data)\n\t{\n\t\tif (Template.expand(parts[1], data, 'arg'))\n\t\t\treturn Template.expand(parts[2], data, 'arg');\n\n\t\tif (parts.length > 3)\n\t\t\treturn Template.expand(parts[3], data, 'arg');\n\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tReturns the valueA if it is not null (or empty or zero), otherwise returns valueB.\n\t**\n\t**\t?? <valueA> <valueB>\n\t*/\n\t'_??': function (parts, data)\n\t{\n\t\tlet value = Template.expand(parts[1], data, 'arg');\n\t\tif (value) return value;\n\t\n\t\treturn Template.expand(parts[2], data, 'arg');\n\t},\n\n\t/**\n\t**\tReturns the value if the expression is true, supports 'elif' and 'else' as well. The result of this function is always text.\n\t**\n\t**\tif <expr> <value> [elif <expr> <value>] [else <value>]\n\t*/\n\t'_if': function (parts, data)\n\t{\n\t\tfor (let i = 0; i < parts.length; i += 3)\n\t\t{\n\t\t\tif (Template.expand(parts[i], data, 'arg') == 'else')\n\t\t\t\treturn Template.expand(parts[i+1], data, 'text');\n\n\t\t\tif (Template.expand(parts[i+1], data, 'arg'))\n\t\t\t\treturn Template.expand(parts[i+2], data, 'text');\n\t\t}\n\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tLoads the expression value and attempts to match one case.\n\t**\n\t**\tswitch <expr> <case1> <value1> ... <caseN> <valueN> default <defvalue> \n\t*/\n\t'_switch': function (parts, data)\n\t{\n\t\tlet value = Template.expand(parts[1], data, 'arg');\n\n\t\tfor (let i = 2; i < parts.length; i += 2)\n\t\t{\n\t\t\tlet case_value = Template.expand(parts[i], data, 'arg');\n\t\t\tif (case_value == value || case_value == 'default')\n\t\t\t\treturn Template.expand(parts[i+1], data, 'text');\n\t\t}\n\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tExits the current inner most loop.\n\t**\n\t**\tbreak\n\t*/\n\t'_break': function (parts, data)\n\t{\n\t\tthrow new Error('EXC_BREAK');\n\t},\n\n\t/**\n\t**\tSkips execution and continues the next cycle of the current inner most loop.\n\t**\n\t**\tcontinue\n\t*/\n\t'_continue': function (parts, data)\n\t{\n\t\tthrow new Error('EXC_CONTINUE');\n\t},\n\n\t/**\n\t**\tConstructs an array with the results of repeating the specified template for a number of times.\n\t**\n\t**\trepeat <varname:i> [from <number>] [to <number>] [count <number>] [step <number>] <template>\n\t*/\n\t'_repeat': function (parts, data)\n\t{\n\t\tif (parts.length < 3 || (parts.length & 1) != 1)\n\t\t\treturn '(`repeat`: Wrong number of parameters)';\n\n\t\tlet var_name = Template.value(parts[1], data);\n\t\tlet count = null;\n\t\tlet from = 0, to = null;\n\t\tlet step = null;\n\n\t\tfor (let i = 2; i < parts.length-1; i+=2)\n\t\t{\n\t\t\tlet value = Template.value(parts[i], data);\n\n\t\t\tswitch (value.toLowerCase())\n\t\t\t{\n\t\t\t\tcase 'from':\n\t\t\t\t\tfrom = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'to':\n\t\t\t\t\tto = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'count':\n\t\t\t\t\tcount = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'step':\n\t\t\t\t\tstep = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet tpl = parts[parts.length-1];\n\t\tlet arr = [];\n\n\t\tif (to !== null)\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = from > to ? -1 : 1;\n\n\t\t\tif (step < 0)\n\t\t\t{\n\t\t\t\tfor (let i = from; i >= to; i += step)\n\t\t\t\t{\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\t\tarr.push(Template.value(tpl, data));\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlet name = e.message;\n\t\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (let i = from; i <= to; i += step)\n\t\t\t\t{\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\t\tarr.push(Template.value(tpl, data));\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlet name = e.message;\n\t\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (count !== null)\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = 1;\n\n\t\t\tfor (let i = from; count > 0; count--, i += step)\n\t\t\t{\n\t\t\t\ttry {\n\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\tarr.push(Template.value(tpl, data));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tlet name = e.message;\n\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdelete data[var_name];\n\t\treturn arr;\n\t},\n\n\t/**\n\t**\tRepeats the specified template for a number of times.\n\t**\n\t**\tfor <varname:i> [from <number>] [to <number>] [count <number>] [step <number>] <template>\n\t*/\n\t'_for': function (parts, data)\n\t{\n\t\tif (parts.length < 3 || (parts.length & 1) != 1)\n\t\t\treturn '(`for`: Wrong number of parameters)';\n\n\t\tlet var_name = Template.value(parts[1], data);\n\t\tlet count = null;\n\t\tlet from = 0; to = null;\n\t\tlet step = null;\n\n\t\tfor (let i = 2; i < parts.length-1; i+=2)\n\t\t{\n\t\t\tvalue = Template.value(parts[i], data);\n\n\t\t\tswitch (value.toLowerCase())\n\t\t\t{\n\t\t\t\tcase 'from':\n\t\t\t\t\tfrom = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'to':\n\t\t\t\t\tto = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'count':\n\t\t\t\t\tcount = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'step':\n\t\t\t\t\tstep = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet tpl = parts[parts.length-1];\n\n\t\tif (to !== null)\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = from > to ? -1 : 1;\n\n\t\t\tif (step < 0)\n\t\t\t{\n\t\t\t\tfor (let i = from; i >= to; i += step)\n\t\t\t\t{\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\t\tTemplate.value(tpl, data);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlet name = e.message;\n\t\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (let i = from; i <= to; i += step)\n\t\t\t\t{\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\t\tTemplate.value(tpl, data);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlet name = e.message;\n\t\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (count !== null)\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = 1;\n\n\t\t\tfor (let i = from; count > 0; count--, i += step)\n\t\t\t{\n\t\t\t\ttry {\n\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\tTemplate.value(tpl, data);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tlet name = e.message;\n\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdelete data[var_name];\n\t\treturn null;\n\t},\n\n\t/**\n\t**\tWrites the specified arguments to the console.\n\t**\n\t**\techo <expr> [<expr>...]\n\t*/\n\t'_echo': function (parts, data)\n\t{\n\t\tlet s = '';\n\n\t\tfor (let i = 1; i < parts.length; i++)\n\t\t\ts += Template.expand(parts[i], data, 'arg');\n\n\t\tconsole.log(s);\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tConstructs a list from the given arguments and returns it.\n\t**\n\t**\t# <expr> [<expr>...]\n\t*/\n\t'_#': function (parts, data)\n\t{\n\t\tlet s = [];\n\n\t\tfor (let i = 1; i < parts.length; i++)\n\t\t\ts.push(Template.expand(parts[i], data, 'arg'));\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tConstructs a non-expanded list from the given arguments and returns it.\n\t**\n\t**\t## <expr> [<expr>...]\n\t*/\n\t'_##': function (parts, data)\n\t{\n\t\tlet s = [];\n\n\t\tfor (let i = 1; i < parts.length; i++)\n\t\t\ts.push(parts[i]);\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tConstructs an associative array (dictionary) and returns it.\n\t**\n\t**\t& <name>: <expr> [<name>: <expr>...]\n\t*/\n\t'_&': function (parts, data)\n\t{\n\t\tlet s = { };\n\n\t\tfor (let i = 1; i < parts.length; i += 2)\n\t\t{\n\t\t\tlet key = Template.expand(parts[i], data, 'arg');\n\t\t\tif (key.substr(-1) == ':')\n\t\t\t\tkey = key.substr(0, key.length-1);\n\n\t\t\ts[key] = Template.expand(parts[i+1], data, 'arg');\n\t\t}\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tConstructs a non-expanded associative array (dictionary) and returns it.\n\t**\n\t**\t&& <name>: <expr> [<name>: <expr>...]\n\t*/\n\t'_&&': function (parts, data)\n\t{\n\t\tlet s = { };\n\n\t\tfor (let i = 1; i < parts.length; i += 2)\n\t\t{\n\t\t\tlet key = Template.expand(parts[i], data, 'arg');\n\t\t\tif (key.substr(-1) == ':')\n\t\t\t\tkey = key.substr(0, key.length-1);\n\n\t\t\ts[key] = parts[i+1];\n\t\t}\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tReturns true if the specified map contains all the specified keys. If it fails the global variable `err` will contain an error message.\n\t**\n\t**\tcontains <expr> <name> [<name>...]\n\t*/\n\t'contains': function (args, parts, data)\n\t{\n\t\tlet value = args[1];\n\n\t\tif (typeof(value) != 'object')\n\t\t{\n\t\t\tdata.err = 'Argument is not a Map';\n\t\t\treturn false;\n\t\t}\n\n\t\tlet s = '';\n\n\t\tfor (let i = 2; i < args.length; i++)\n\t\t{\n\t\t\tif (!(args[i] in value))\n\t\t\t\ts += ', '+args[i];\n\t\t}\n\n\t\tif (s != '')\n\t\t{\n\t\t\tdata.err = s.substr(1);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t**\tReturns true if the specified map has the specified key. Returns boolean.\n\t**\n\t**\thas <name> <expr>\n\t*/\n\t'has': function (args, parts, data)\n\t{\n\t\tlet value = args[2];\n\n\t\tif (Rin.typeOf(value) != 'object')\n\t\t\treturn false;\n\n\t\treturn args[1] in value;\n\t},\n\n\t/**\n\t**\tReturns a new array/map contaning the transformed values of the array/map (evaluating the template). And just as in 'each', the i# and i## variables be available.\n\t**\n\t**\tmap <varname> <list-expr> <template>\n\t*/\n\t'_map': function (parts, data)\n\t{\n\t\tlet var_name = Template.expand(parts[1], data, 'arg');\n\n\t\tlet list = Template.expand(parts[2], data, 'arg');\n\t\tif (!list) return list;\n\n\t\tlet arrayMode = Rin.typeOf(list) == 'array' ? true : false;\n\t\tlet output = arrayMode ? [] : {};\n\t\tlet j = 0;\n\n\t\tfor (let i in list)\n\t\t{\n\t\t\tdata[var_name] = list[i];\n\t\t\tdata[var_name + '##'] = j++;\n\t\t\tdata[var_name + '#'] = i;\n\n\t\t\tif (arrayMode)\n\t\t\t\toutput.push(Template.expand(parts[3], data, 'arg'));\n\t\t\telse\n\t\t\t\toutput[i] = Template.expand(parts[3], data, 'arg');\n\t\t}\n\n\t\tdelete data[var_name];\n\t\tdelete data[var_name + '##'];\n\t\tdelete data[var_name + '#'];\n\n\t\treturn output;\n\t},\n\n\t/**\n\t**\tReturns a new array/map contaning the elements where the template evaluates to non-zero. Just as in 'each', the i# and i## variables be available.\n\t**\n\t**\tfilter <varname> <list-expr> <template>\n\t*/\n\t'_filter': function (parts, data)\n\t{\n\t\tlet var_name = Template.expand(parts[1], data, 'arg');\n\n\t\tlet list = Template.expand(parts[2], data, 'arg');\n\t\tif (!list) return list;\n\n\t\tlet arrayMode = Rin.typeOf(list) == 'array' ? true : false;\n\t\tlet output = arrayMode ? [] : {};\n\t\tlet j = 0;\n\n\t\tfor (let i in list)\n\t\t{\n\t\t\tdata[var_name] = list[i];\n\t\t\tdata[var_name + '##'] = j++;\n\t\t\tdata[var_name + '#'] = i;\n\n\t\t\tif (~~Template.expand(parts[3], data, 'arg'))\n\t\t\t{\n\t\t\t\tif (arrayMode)\n\t\t\t\t\toutput.push(list[i]);\n\t\t\t\telse\n\t\t\t\t\toutput[i] = list[i];\n\t\t\t}\n\t\t}\n\n\t\tdelete data[var_name];\n\t\tdelete data[var_name + '##'];\n\t\tdelete data[var_name + '#'];\n\n\t\treturn output;\n\t},\n\n\t/**\n\t**\tExpands the specified template string with the given data. The sym_open and sym_close will be '{' and '}' respectively.\n\t**\tIf no data is provided, current data parameter will be used.\n\t**\n\t**\texpand <template> <data>\n\t*/\n\t'expand': function (args, parts, data)\n\t{\n\t\treturn Template.expand (Template.parseTemplate (args[1], '{', '}'), args.length == 3 ? args[2] : data);\n\t},\n\n\t/**\n\t**\tCalls a function described by the given parameter.\n\t**\n\t**\tcall <function> <args...>\n\t*/\n\t'_call': function (parts, data)\n\t{\n\t\tlet ref = Template.expand(parts[1], data, 'varref');\n\n\t\tif (!ref || typeof(ref[0][ref[1]]) != 'function')\n\t\t\tthrow new Error ('Expression is not a function: ' + Template.expand(parts[1], data, 'obj').map(i => i == null ? '.' : i).join(''));\n\n\t\tlet args = [];\n\n\t\tfor (let i = 2; i < parts.length; i++)\n\t\t\targs.push(Template.value(parts[i], data));\n\n\t\treturn ref[0][ref[1]] (...args);\n\t},\n};\n","/*\r\n**\trin/main\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nlet Rin = require('./alpha');\r\n\r\nRin.Rin = Rin;\r\nRin.Class = require('./class');\r\n\r\nRin.Event = require('./event');\r\nRin.EventDispatcher = require('./event-dispatcher');\r\n\r\nRin.Model = require('./model');\r\nRin.ModelList = require('./model-list');\r\n\r\nRin.Schema = require('./schema');\r\nRin.Flattenable = require('./flattenable');\r\nRin.Collection = require('./collection');\r\n\r\nRin.Template = require('./template');\r\n\r\n/* ---- */\r\nObject.assign (module.exports, Rin);\r\n"]}