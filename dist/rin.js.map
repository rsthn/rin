{"version":3,"sources":["alpha.js","class.js","event.js","event-dispatcher.js","model-regex.js","model-constraints.js","model.js","model-list.js","schema.js","flattenable.js","collection.js","template.js","main.js"],"names":["Rin","module","exports","invokeLater","fn","setTimeout","wait","millis","Promise","resolve","reject","typeOf","o","Array","toString","toLowerCase","isArrayOrObject","clone","elem","i","length","push","merge","output","objs","arr","j","obj","field","override","partialCompare","full","partial","arrayFind","getObject","indexOf","container","value","forceArray","escape","str","replace","ensureTypeOf","m","isInstanceOf","prototype","className","serialize","JSON","stringify","deserialize","s","parse","hookAppend","object","functionName","newFunction","conditional","oldFunction","bind","args","unhook","hookPrepend","require","Class","_class","_super","__ctor","__dtor","constructor","_initSuperRefs","_newSuper","_prot","inherit","proto","self","test","_extend","base","protos","apply","call","classInit","extend","create","source","name","_async","list","next","ret","original","eventName","eventArgs","cbHandler","cbContext","reset","resume","silent","handler","context","data","global","from","event","enqueue","evt","Event","listeners","namespace","setNamespace","addEventListener","split","ns","removeEventListener","k","splice","prepareEvent","concat","silence","dispatchEvent","email","url","urlNoProt","uname","text","utext","Regex","_getref","substr","get","eval","type","model","ctval","isNaN","parseInt","Error","parseFloat","mclass","ensure","cls","arrayof","arraynull","remove","arraycompliant","isCompliant","required","minlen","maxlen","minval","maxval","mincount","maxcount","pattern","inset","RegExp","join","upper","toUpperCase","lower","EventDispatcher","_Model","defaults","constraints","changedList","_silent","_level","def","undefined","init","set","arguments","update","ready","nsilent","_validate","nvalue","ctname","Constraints","e","message","_set","constraint","_propertyEvent","prev","direct","temp","old","level","n","force","fields","flatten","getInt","getFloat","getBool","getReference","safe","rsafe","classPath","keys","ct","validate","observe","property","unobserve","Model","itemt","contents","_eventGroup","Date","now","_bind","index","item","_onItemEvent","_unbind","count","clear","setData","getData","getAt","removeAt","setAt","updateAt","pop","unshift","shift","find","retObject","Schema","Type","tmp","unflatten","String","Integer","Number","precision","_precision","_round","Math","pow","Bool","compact","_compact","SharedString","strings_map","strings","itemType","_debug","debug","v","of","Object","properties","symbolic","classConstructor","_constructor","Property","is","Map","typeSchema","assign","onUnflattened","Flattenable","itemTypeSchema","items","add","onItemRemoved","sort","desc","a","b","findItem","inc","exc","getItems","isEmpty","relative","first","last","addAt","onBeforeItemAdded","onItemAdded","forEach","callback","forEachCall","method","forEachRev","forEachRevCall","Template","strict","parseTemplate","template","sym_open","sym_close","is_tpl","root","nflush","flush","state","parts","mparts","nparts","emit","trim","map","match","unescape","r","expand","mode","quote","functions","failed","f","compile","register","getNamedValues","expanded","key","startsWith","endsWith","fromCharCode","charCodeAt","abs","x","ref","start","attr","values","var_name","case_value","to","step","tpl","console","log","err","arrayMode","ModelList","Collection"],"mappings":"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","file":"rin.js","sourceRoot":"..","sourcesContent":["/*\r\n**\trin/alpha\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nlet Rin = module.exports = { };\r\n\r\n/**\r\n**\tInvokes the specified function 'fn' 10ms later.\r\n**\r\n**\t>> void invokeLater (function fn);\r\n*/\r\nRin.invokeLater = function (fn)\r\n{\r\n\tif (fn) setTimeout (function() { fn(); }, 10);\r\n};\r\n\r\n\r\n/**\r\n**\tWaits for the specified amount of milliseconds. Returns a Promise.\r\n**\r\n**\t>> Promise wait (int millis);\r\n*/\r\nRin.wait = function (millis)\r\n{\r\n\treturn new Promise(function (resolve, reject) {\r\n\t\tsetTimeout (resolve, millis);\r\n\t});\r\n};\r\n\r\n\r\n/**\r\n**\tReturns the type of an element 'o', properly detects arrays and null types. The return string is always in lowercase.\r\n**\r\n**\t>> string typeOf (any o);\r\n*/\r\nRin.typeOf = function (o)\r\n{\r\n\tif (o instanceof Array)\r\n\t\treturn \"array\";\r\n\r\n\tif (o === null)\r\n\t\treturn \"null\";\r\n\r\n\treturn (typeof(o)).toString().toLowerCase();\r\n};\r\n\r\n\r\n/**\r\n**\tReturns boolean indicating if the type of the element is an array or an object.\r\n**\r\n**\t>> bool isArrayOrObject (any o);\r\n*/\r\nRin.isArrayOrObject = function (o)\r\n{\r\n\tswitch (Rin.typeOf(o))\r\n\t{\r\n\t\tcase \"array\": case \"object\":\r\n\t\t\treturn true;\r\n\t}\r\n\r\n\treturn false;\r\n};\r\n\r\n\r\n/**\r\n**\tCreates a clone (deep copy) of the specified element. The element can be an array, an object or a primitive type.\r\n**\r\n**\t>> T clone (T elem);\r\n*/\r\nRin.clone = function (elem)\r\n{\r\n\tvar o;\r\n\r\n\tif (Rin.typeOf(elem) == \"array\")\r\n\t{\r\n\t\to = [ ];\r\n\r\n\t\tfor (let i = 0; i < elem.length; i++)\r\n\t\t\to.push (Rin.clone(elem[i]));\r\n\t}\r\n\telse if (Rin.typeOf(elem) == \"object\")\r\n\t{\r\n\t\to = { };\r\n\r\n\t\tfor (let i in elem)\r\n\t\t\to[i] = Rin.clone(elem[i]);\r\n\t}\r\n\telse\r\n\t{\r\n\t\to = elem;\r\n\t}\r\n\r\n\treturn o;\r\n};\r\n\r\n\r\n/**\r\n**\tMerges all given elements into the first one, object fields are cloned.\r\n**\r\n**\t>> T merge (T... elems)\r\n*/\r\nRin.merge = function (output, ...objs)\r\n{\r\n\tif (Rin.typeOf(output) == \"array\")\r\n\t{\r\n\t\tfor (let i = 0; i < objs.length; i++)\r\n\t\t{\r\n\t\t\tlet arr = objs[i];\r\n\r\n\t\t\tif (Rin.typeOf(arr) != \"array\")\r\n\t\t\t{\r\n\t\t\t\toutput.push(arr);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tfor (let j = 0; j < arr.length; j++)\r\n\t\t\t\t{\r\n\t\t\t\t\toutput.push(Rin.clone(arr[j]));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\telse if (Rin.typeOf(output) == \"object\")\r\n\t{\r\n\t\tfor (let i = 0; i < objs.length; i++)\r\n\t\t{\r\n\t\t\tlet obj = objs[i];\r\n\t\t\tif (Rin.typeOf(obj) != \"object\") continue;\r\n\r\n\t\t\tfor (let field in obj)\r\n\t\t\t{\r\n\t\t\t\tif (Rin.isArrayOrObject(obj[field]))\r\n\t\t\t\t{\r\n\t\t\t\t\tif (field in output)\r\n\t\t\t\t\t\tRin.merge(output[field], obj[field]);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\toutput[field] = Rin.clone(obj[field]);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\toutput[field] = obj[field];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn output;\r\n};\r\n\r\n\r\n/**\r\n**\tAssigns all fields from the specified objects into the first one.\r\n**\r\n**\t>> object override (object output, object... objs)\r\n*/\r\nRin.override = function (output, ...objs)\r\n{\r\n\tfor (let i = 0; i < objs.length; i++)\r\n\t{\r\n\t\tfor (let j in objs[i])\r\n\t\t{\r\n\t\t\toutput[j] = objs[i][j];\r\n\t\t}\r\n\t}\r\n\r\n\treturn output;\r\n};\r\n\r\n\r\n/*\r\n**\tCompares two objects and returns `true` if all properties in \"partial\" find a match in \"full\".\r\n*/\r\nRin.partialCompare = function (full, partial)\r\n{\r\n\tif (full == null || partial == null) return false;\r\n\r\n\tif (full === partial)\r\n\t\treturn true;\r\n\r\n\tfor (var i in partial)\r\n\t{\r\n\t\tif (full[i] != partial[i])\r\n\t\t\treturn false;\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\n\r\n/*\r\n**\tPerforms a partial search for an object (o) in the specified array and returns its index or `false` if the\r\n**\tobject was not found. When `getObject` is set to `true` the object will be returned instead of an index, or\r\n**\t`null` if not found.\r\n*/\r\nRin.arrayFind = function (arr, o, getObject)\r\n{\r\n\tfor (var i = 0; arr && i < arr.length; i++)\r\n\t{\r\n\t\tif (this.partialCompare (arr[i], o))\r\n\t\t\treturn getObject ? arr[i] : i;\r\n\t}\r\n\r\n\treturn getObject ? null : false;\r\n};\r\n\r\n\r\n/*\r\n**\tTraverses the given object attempting to find the index/key that does an identical match with the specified value,\r\n**\tif not found returns -1, otherwise the index/key where the value was found.\r\n**\r\n**\t>> int indexOf (array container, T value)\r\n**\t>> string indexOf (object container, T value)\r\n*/\r\nRin.indexOf = function (container, value, forceArray=false)\r\n{\r\n\tif (forceArray)\r\n\t{\r\n\t\tfor (let i = 0; i < container.length; i++)\r\n\t\t{\r\n\t\t\tif (container[i] === value)\r\n\t\t\t\treturn i;\r\n\t\t}\r\n\t\r\n\t\treturn -1;\r\n\t}\r\n\r\n\tfor (let i in container)\r\n\t{\r\n\t\tif (container[i] === value)\r\n\t\t\treturn i;\r\n\t}\r\n\r\n\treturn -1;\r\n};\r\n\r\n\r\n/**\r\n**\tEscapes a string using HTML entities.\r\n**\r\n**\t>> string escape (string str);\r\n*/\r\nRin.escape = function (str)\r\n{\r\n\treturn (str+\"\").replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\r\n};\r\n\r\n\r\n/**\r\n**\tVerifies if the specified object is of class `m`, if not it will create a new instance of `m` passing `o` as parameter.\r\n**\r\n**\t>> object ensureTypeOf (class m, object o);\r\n*/\r\nRin.ensureTypeOf = function (m, o)\r\n{\r\n\tif (!o || !m || o instanceof m)\r\n\t\treturn o;\r\n\r\n\tif (o.isInstanceOf && m.prototype.className)\r\n\t{\r\n\t\tif (o.isInstanceOf (m.prototype.className))\r\n\t\t\treturn o;\r\n\t}\r\n\r\n\treturn new m (o);\r\n};\r\n\r\n\r\n/**\r\n**\tSerializes an object and returns its JSON string representation.\r\n**\r\n**\t>> string serialize (object o);\r\n*/\r\nRin.serialize = function (o)\r\n{\r\n\treturn JSON.stringify(o);\r\n};\r\n\r\n\r\n/**\r\n**\tDeserializes a string in JSON format and returns the result.\r\n**\r\n**\t>> any deserialize (string s);\r\n*/\r\nRin.deserialize = function (s)\r\n{\r\n\treturn JSON.parse(s);\r\n};\r\n\r\n\r\n/**\r\n**\tChains a new function to an existing one on some object, such that invoking the function on the object will cause\r\n**\tboth functions to run (order would be oldFunction then newFunction).\r\n**\r\n**\tIf the `conditional` flag is set to `true`, the second function will be run only if the first one returns non-false.\r\n**\tReturns an object with a single method 'unhook' which will revert the changes to leave only the original function.\r\n**\r\n**\t>> object{function unhook} hook (Object object, String functionName, function newFunction, bool conditional=false);\r\n*/\r\nRin.hookAppend = function (object, functionName, newFunction, conditional=true)\r\n{\r\n\tconst oldFunction = object[functionName].bind(object);\r\n\r\n\tif (conditional)\r\n\t{\r\n\t\tobject[functionName] = (...args) => {\r\n\t\t\tif (oldFunction (...args) !== false)\r\n\t\t\t\tnewFunction (...args);\r\n\t\t};\r\n\t}\r\n\telse\r\n\t{\r\n\t\tobject[functionName] = (...args) => {\r\n\t\t\toldFunction (...args);\r\n\t\t\tnewFunction (...args);\r\n\t\t};\r\n\t}\r\n\r\n\treturn { \r\n\t\tunhook: function() {\r\n\t\t\tobject[functionName] = oldFunction;\r\n\t\t}\r\n\t};\r\n};\r\n\r\n\r\n/**\r\n**\tChains a new function to an existing one on some object, such that invoking the function on the object will cause\r\n**\tboth functions to run (order would be oldFunction then newFunction).\r\n**\r\n**\tIf the `conditional` flag is set to `true`, the second function will be run only if the first one returns non-false.\r\n**\tReturns an object with a single method 'unhook' which will revert the changes to leave only the original function.\r\n**\r\n**\t>> object{function unhook} hook (Object object, String functionName, function newFunction, bool conditional=false);\r\n*/\r\nRin.hookPrepend = function (object, functionName, newFunction, conditional=true)\r\n{\r\n\tconst oldFunction = object[functionName].bind(object);\r\n\r\n\tif (conditional)\r\n\t{\r\n\t\tobject[functionName] = (...args) => {\r\n\t\t\tif (newFunction (...args) !== false)\r\n\t\t\t\toldFunction (...args);\r\n\t\t};\r\n\t}\r\n\telse\r\n\t{\r\n\t\tobject[functionName] = (...args) => {\r\n\t\t\tnewFunction (...args);\r\n\t\t\toldFunction (...args);\r\n\t\t};\r\n\t}\r\n\r\n\treturn { \r\n\t\tunhook: function() {\r\n\t\t\tobject[functionName] = oldFunction;\r\n\t\t}\r\n\t};\r\n};\r\n","/*\r\n**\trin/class\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nlet Rin = require('./alpha');\r\n\r\n/**\r\n**\tBase class used to easily create classes and sub-classes with complex multiple inheritance and\r\n**\tsupport for calls to parent class methods.\r\n*/\r\n\r\nlet Class = module.exports = function ()\r\n{\r\n};\r\n\r\n\r\n/**\r\n**\tReference to the class itself.\r\n*/\r\nClass._class = Class;\r\n\r\n\r\n/**\r\n**\tContains the methods of each of the super classes.\r\n*/\r\nClass._super = { };\r\n\r\n\r\n/**\r\n**\tName of the class, if none specified the class will be considered \"final\" and will not be inheritable.\r\n*/\r\nClass.prototype.className = \"Class\";\r\n\r\n\r\n/**\r\n**\tClass constructor, should initialize the state of the instance. Invoked when the `new` keyword is used with the class.\r\n*/\r\nClass.prototype.__ctor = function ()\r\n{\r\n};\r\n\r\n\r\n/**\r\n**\tClass destructor, should clear the instance state and release any used resources, invoked when the global `dispose`\r\n**\tfunction is called with the instance as parameter.\r\n*/\r\nClass.prototype.__dtor = function ()\r\n{\r\n};\r\n\r\n\r\n/**\r\n**\tReturns true if the object is an instance of the specified class (verifies inheritance), the parameter can be a class\r\n**\tname, a class constructor or a class instance, in any case the appropriate checks will be done.\r\n**\r\n**\t>> bool isInstanceOf (string className);\r\n**\t>> bool isInstanceOf (constructor classConstructor);\r\n**\t>> bool isInstanceOf (object classInstance);\r\n*/\r\nClass.prototype.isInstanceOf = function (className)\r\n{\r\n\tclassName = Rin.typeOf(className) == \"string\" ? className : (className.prototype ? className.prototype.className : className.constructor.prototype.className);\r\n\treturn className in this._super ? true : this.className == className;\r\n};\r\n\r\n\r\n/**\r\n**\tInternal method to ensure the _super field of an instance is ready to be used.\r\n**\r\n**\t>> void _initSuperRefs ();\r\n*/\r\nClass.prototype._initSuperRefs = function ()\r\n{\r\n\tvar _super = this.constructor._super;\r\n\tvar _newSuper = { };\r\n\r\n\tfor (let i in _super)\r\n\t{\r\n\t\tlet o = { };\r\n\r\n\t\tlet _prot = _super[i].prototype;\r\n\t\tfor (let j in _prot)\r\n\t\t{\r\n\t\t\tif (Rin.typeOf(_prot[j]) == \"function\")\r\n\t\t\t\to[j] = _prot[j].bind(this);\r\n\t\t}\r\n\r\n\t\t_newSuper[i] = o;\r\n\t}\r\n\r\n\tthis._super = _newSuper;\r\n};\r\n\r\n\r\n/**\r\n**\tExtends the class with the specified prototype. The prototype can be a function (class constructor) or an object. Note that the\r\n**\tclass will be modified (and returned) instead of creating a new class. Must be called at the class-level (**not** instance level).\r\n**\tWhen a class is provided all fields starting with uppercase at the class-level will not be inherited, this is used to create constants\r\n**\ton classes without having them to be copied to derived classes.\r\n**\r\n**\t>> class inherit (constructor classConstructor);\r\n**\t>> class inherit (object obj);\r\n*/\r\nClass.inherit = function (proto)\r\n{\r\n\tvar self = this._class;\r\n\r\n\tvar _super = self._super;\r\n\tvar _class = self._class;\r\n\r\n\tif (Rin.typeOf(proto) == \"function\")\r\n\t{\r\n\t\t// Move constants (uppercased properties) to the class-level instead of prototype-level.\r\n\t\tfor (let i in proto._class)\r\n\t\t\tif (!/^[A-Z]/.test(i)) self[i] = proto._class[i];\r\n\r\n\t\t// Combine methods and properties.\r\n\t\tRin.override (self.prototype, proto._class.prototype);\r\n\r\n\t\t// Combine super methods.\r\n\t\tRin.override (_super, proto._class._super);\r\n\r\n\t\t// Add new super reference if className specified in inherited prototypes.\r\n\t\tif (proto._class.prototype.className)\r\n\t\t\t_super[proto._class.prototype.className] = proto._class;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tRin.override (self.prototype, proto);\r\n\t}\r\n\r\n\tself._super = _super;\r\n\tself._class = _class;\r\n\r\n\treturn self;\r\n};\r\n\r\n\r\n/**\r\n**\tInternal method used to extend a class with one or more prototypes.\r\n**\r\n**\t>> class _extend (object base, object[] protos);\r\n*/\r\nClass.prototype._extend = function (base, protos)\r\n{\r\n\tvar _class = function (...args)\r\n\t{\r\n\t\tthis._initSuperRefs();\r\n\t\tthis.__ctor.apply(this, args);\r\n\t};\r\n\r\n\t_class._class = _class;\r\n\t_class._super = { };\r\n\r\n\tClass.inherit.call (_class, base);\r\n\r\n\tdelete _class.prototype.className;\r\n\r\n\tfor (let i = 0; i < protos.length; i++)\r\n\t\t_class.inherit (protos[i]);\r\n\r\n\tdelete _class._super.Class;\r\n\r\n\tif (\"classInit\" in _class.prototype)\r\n\t\t_class.prototype.classInit();\r\n\r\n\treturn _class;\r\n};\r\n\r\n\r\n/**\r\n**\tCreates a new class with the specified prototypes each of which can be a class constructor or an object.\r\n**\r\n**\t>> constructor extend (object... protos);\r\n*/\r\nClass.extend = function (...protos)\r\n{\r\n\treturn this._class.prototype._extend (this, protos);\r\n};\r\n\r\n\r\n/**\r\n**\tCreates a new instance of a class resulting from extending the self class with the specified prototype.\r\n**\r\n**\t>> object create (object proto);\r\n*/\r\nClass.create = function (proto)\r\n{\r\n\treturn new (this.extend(proto)) ();\r\n};\r\n","/*\r\n**\trin/event\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nlet Rin = require('./alpha');\r\nlet Class = require('./class');\r\n\r\n/**\r\n**\tHolds the information about a triggered event. It also provides a mechanism to allow asynchronous\r\n**\tevent propagation to ensure the event chain order.\r\n*/\r\n\r\nmodule.exports = Class.extend\r\n({\r\n\t/**\r\n\t**\tName of the class.\r\n\t*/\r\n\tclassName: \"Event\",\r\n\r\n\t/**\r\n\t**\tSource of the event.\r\n\t*/\r\n\tsource: null,\r\n\r\n\t/**\r\n\t**\tName of the event.\r\n\t*/\r\n\tname: null,\r\n\r\n\t/**\r\n\t**\tArguments of the event.\r\n\t*/\r\n\targs: null,\r\n\r\n\t/**\r\n\t**\tIndicates if the last event handler wants to use async mode.\r\n\t*/\r\n\t_async: false,\r\n\r\n\t/**\r\n\t**\tQueue of all handlers to invoke.\r\n\t*/\r\n\tlist: null,\r\n\r\n\t/**\r\n\t**\tNext event to be executed in the event chain.\r\n\t*/\r\n\tnext: null,\r\n\r\n\t/**\r\n\t**\tReturn values from event handlers.\r\n\t*/\r\n\tret: null,\r\n\r\n\t/**\r\n\t**\tOriginal root event.\r\n\t*/\r\n\toriginal: null,\r\n\r\n\t/**\r\n\t**\tIndex of the current event handler.\r\n\t*/\r\n\ti: -1,\r\n\r\n\t/**\r\n\t**\tContructs an event object with the specified parameters. Source is the event-dispatcher object, list is\r\n\t**\tan array with all the listeners to invoke. The eventName and eventArgs are the event information to be\r\n\t**\tpassed to each handler and if a callback is specified (cbHandler+cbContext) it will be executed once all\r\n\t**\tthe event handlers have been processed.\r\n\t**\r\n\t**\tEvent __ctor (source: EventDispatcher, list: Array, eventName: string, eventArgs: map, cbHandler: function, cbContext: object);\r\n\t*/\r\n\t__ctor: function (source, list, eventName, eventArgs, cbHandler, cbContext)\r\n\t{\r\n\t\tthis.source = source;\r\n\r\n\t\tthis.name = eventName;\r\n\t\tthis.args = eventArgs;\r\n\r\n\t\tthis.cbHandler = cbHandler;\r\n\t\tthis.cbContext = cbContext;\r\n\r\n\t\tthis.list = list;\r\n\t\tthis.reset();\r\n\t},\r\n\r\n\t/**\r\n\t**\tResets the event to its initial state. An event object can be reused by resetting it and then\r\n\t**\tinvoking the resume event.\r\n\t**\r\n\t**\tEvent reset ();\r\n\t*/\r\n\treset: function ()\r\n\t{\r\n\t\tthis.next = null;\r\n\t\tthis.ret = [];\r\n\r\n\t\tthis._async = false;\r\n\t\tthis.i = -1;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tSets the internal asynchronous flag. Should be called before a handler returns. If a handler\r\n\t**\tcalls this method it should also call resume() when async operations are finished.\r\n\t**\r\n\t**\tEvent wait ();\r\n\t*/\r\n\twait: function ()\r\n\t{\r\n\t\tthis._async = true;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tResumes event propagation. Should be called manually by event handlers that also call wait().\r\n\t**\r\n\t**\tEvent resume ();\r\n\t*/\r\n\tresume: function ()\r\n\t{\r\n\t\tthis._async = false;\r\n\r\n\t\twhile (!this._async)\r\n\t\t{\r\n\t\t\tif (++this.i >= this.list.length)\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tif (this.list[this.i].silent)\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif (Rin.typeOf(this.list[this.i].handler) == \"string\")\r\n\t\t\t{\r\n\t\t\t\tif (this.list[this.i].context)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (!this.list[this.i].context[this.list[this.i].handler])\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tif (this.list[this.i].context[this.list[this.i].handler] (this, this.args, this.list[this.i].data) === false)\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif (global[this.list[this.i].handler].call (null, this, this.args, this.list[this.i].data) === false)\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif (this.list[this.i].handler.call (this.list[this.i].context, this, this.args, this.list[this.i].data) === false)\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._async)\r\n\t\t\treturn this;\r\n\r\n\t\tif (this.i >= this.list.length && this.next) this.next.resume();\r\n\r\n\t\tif (this.cbHandler)\r\n\t\t\tthis.cbHandler.call (this.cbContext);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tSets the \"original\" property of the event to indicate where the original event comes from.\r\n\t**\r\n\t**\tEvent from (event: Event);\r\n\t*/\r\n\tfrom: function (event)\r\n\t{\r\n\t\tthis.original = event;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tEnqueues the specified event to be executed upon the current event process is finished. The \"original\"\r\n\t**\tproperty of the chained event will be set to the current event.\r\n\t**\r\n\t**\tEvent enqueueEvent (event: Event);\r\n\t*/\r\n\tenqueue: function (event)\r\n\t{\r\n\t\tif (!event) return this;\r\n\r\n\t\tvar evt;\r\n\t\tfor (evt = this; evt.next != null; evt = evt.next);\r\n\r\n\t\tevt.next = event;\r\n\t\tevent.from (this);\r\n\r\n\t\treturn this;\r\n\t}\r\n});\r\n","/*\r\n**\trin/event-dispatcher\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nlet Class = require('./class');\r\nlet Event = require('./event');\r\n\r\n/**\r\n**\tEvent dispatcher allows several event listeners to be attached, these will be invoked whenever the\r\n**\tevent that is being listened to is triggered.\r\n*/\r\n\r\nmodule.exports = Class.extend\r\n({\r\n\t/**\r\n\t**\tName of the class.\r\n\t*/\r\n\tclassName: \"EventDispatcher\",\r\n\r\n\t/**\r\n\t**\tListeners attached to this event dispatcher. Grouped by event name.\r\n\t*/\r\n\tlisteners: null,\r\n\r\n\t/**\r\n\t**\tNamespace for event dispatching. Defaults to null. Can be modified using setNamespace().\r\n\t*/\r\n\tnamespace: null,\r\n\r\n\t/**\r\n\t**\tInitializes the event dispatcher.\r\n\t**\r\n\t**\tEventDispatcher __ctor ();\r\n\t*/\r\n\t__ctor: function ()\r\n\t{\r\n\t\tthis.listeners = { };\r\n\t},\r\n\r\n\t/**\r\n\t**\tSets the event dispatching namespace. Used to force all events dispatched to have the specified namespace.\r\n\t**\r\n\t**\tEventDispatcher setNamespace (value: string);\r\n\t*/\r\n\tsetNamespace: function (value)\r\n\t{\r\n\t\tthis.namespace = value;\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tAdds an event listener for a specified event to the event dispatcher. The event name can have an optional\r\n\t**\tnamespace indicator which is added to the beginning of the event name and separated using a colon (:). This\r\n\t**\tindicator can be used to later trigger or remove all handlers of an specific namespace.\r\n\t**\r\n\t**\tEventDispatcher addEventListener (eventName: string, handler: function, context: object, data: object);\r\n\t*/\r\n\taddEventListener: function (eventName, handler, context, data)\r\n\t{\r\n\t\teventName = eventName.split(\":\");\r\n\t\tvar name = eventName[eventName.length-1];\r\n\t\tvar ns = eventName.length > 1 ? eventName[0] : null;\r\n\r\n\t\tif (!this.listeners[name])\r\n\t\t\tthis.listeners[name] = [];\r\n\r\n\t\tthis.listeners[name].push ({ ns: ns, handler: handler, context: context, data: data, silent: 0 });\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tRemoves an event listener from the event dispatcher. If only the name is provided all handlers with the\r\n\t**\tspecified name will be removed. If a context is provided without a handler then any handler matching the\r\n\t**\tcontext will be removed. Special event name \"*\" can be used to match all event names.\r\n\t**\r\n\t**\tEventDispatcher removeEventListener (eventName: string, handler: function, context: object);\r\n\t*/\r\n\tremoveEventListener: function (eventName, handler, context)\r\n\t{\r\n\t\teventName = eventName.split(\":\");\r\n\t\tvar name = eventName[eventName.length-1];\r\n\t\tvar ns = eventName.length > 1 ? eventName[0] : null;\r\n\r\n\t\tif (name == \"*\")\r\n\t\t{\r\n\t\t\tfor (var j in this.listeners)\r\n\t\t\t{\r\n\t\t\t\tvar list = this.listeners[j];\r\n\r\n\t\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tvar k = true;\r\n\r\n\t\t\t\t\tif (handler)\r\n\t\t\t\t\t\tk = k && list[i].handler === handler;\r\n\r\n\t\t\t\t\tif (context)\r\n\t\t\t\t\t\tk = k && list[i].context === context;\r\n\r\n\t\t\t\t\tif (ns)\r\n\t\t\t\t\t\tk = k && list[i].ns == ns;\r\n\r\n\t\t\t\t\tif (k) list.splice(i--, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (!this.listeners[name])\r\n\t\t\t\treturn this;\r\n\r\n\t\t\tvar list = this.listeners[name];\r\n\r\n\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t{\r\n\t\t\t\tvar k = true;\r\n\r\n\t\t\t\tif (handler)\r\n\t\t\t\t\tk = k && list[i].handler === handler;\r\n\r\n\t\t\t\tif (context)\r\n\t\t\t\t\tk = k && list[i].context === context;\r\n\r\n\t\t\t\tif (ns)\r\n\t\t\t\t\tk = k && list[i].ns == ns;\r\n\r\n\t\t\t\tif (k) list.splice(i--, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tPrepares an event with the specified parameters for its later usage. The event is started when\r\n\t**\tthe resume() method is called. If a callback is specified it will be executed once all event\r\n\t**\thandlers have been processed.\r\n\t**\r\n\t**\tEvent prepareEvent (eventName: string, eventArgs: map, cbHandler: function, cbContext: object);\r\n\t**\tEvent prepareEvent (eventName: string, eventArgs: map);\r\n\t*/\r\n\tprepareEvent: function (eventName, eventArgs, cbHandler, cbContext)\r\n\t{\r\n\t\tvar list = [];\r\n\r\n\t\teventName = eventName.split(\":\");\r\n\t\tvar name = eventName[eventName.length-1];\r\n\t\tvar ns = eventName.length > 1 ? eventName[0] : null;\r\n\r\n\t\tif (this.listeners[name])\r\n\t\t\tlist = list.concat (this.listeners[name]);\r\n\r\n\t\tif (this.listeners[\"*\"])\r\n\t\t\tlist = list.concat (this.listeners[\"*\"]);\r\n\r\n\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\tif (list[i].silent) list.splice (i--, 1);\r\n\r\n\t\tif (ns)\r\n\t\t{\r\n\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t\tif (list[i].ns != ns) list.splice (i--, 1);\r\n\t\t}\r\n\r\n\t\treturn new Event (this, list, name, eventArgs, cbHandler, cbContext);\r\n\t},\r\n\r\n\t/**\r\n\t**\tSilences or unsilences all handlers attached to an event such that if the event fires the handler(s) will\r\n\t**\tnot be invoked. It is recommended to use a namespace to ensure other handlers will continue to be run.\r\n\t**\r\n\t**\tEventDispatcher silence (eventName: string);\r\n\t*/\r\n\tsilence: function (eventName, value)\r\n\t{\r\n\t\teventName = eventName.split(\":\");\r\n\r\n\t\tvar name = eventName[eventName.length-1];\r\n\t\tvar ns = eventName.length > 1 ? eventName[0] : null;\r\n\r\n\t\tvalue = value === false ? -1 : 1;\r\n\r\n\t\tif (name == \"*\")\r\n\t\t{\r\n\t\t\tfor (var j in this.listeners)\r\n\t\t\t{\r\n\t\t\t\tvar list = this.listeners[j];\r\n\r\n\t\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (ns && list[i].ns != ns)\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tlist[i].silent += value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tif (!this.listeners[name])\r\n\t\t\t\treturn this;\r\n\r\n\t\t\tvar list = this.listeners[name];\r\n\r\n\t\t\tfor (var i = 0; i < list.length; i++)\r\n\t\t\t{\r\n\t\t\t\tif (ns && list[i].ns != ns)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tlist[i].silent += value;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/**\r\n\t**\tDispatches an event to the respective listeners. If a callback is specified it will be executed once\r\n\t**\tall event handlers have been processed.\r\n\t**\r\n\t**\tEvent dispatchEvent (eventName: string, eventArgs: map, cbHandler: function, cbContext: object);\r\n\t**\tEvent dispatchEvent (eventName: string, eventArgs: map);\r\n\t*/\r\n\tdispatchEvent: function (eventName, eventArgs, cbHandler, cbContext)\r\n\t{\r\n\t\treturn this.prepareEvent(this.namespace ? this.namespace+':'+eventName: eventName, eventArgs, cbHandler, cbContext).resume();\r\n\t}\r\n});\r\n","/*\n**\trin/model-regex\n**\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\n**\thttps://www.rsthn.com/\n**\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/**\n**\tCommon regular expressions for pattern validation.\n*/\n\nmodule.exports =\n{\n\temail: /^[_a-z0-9-]+(\\.[_a-z0-9-]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)+$/i,\n\turl: /^[\\w-]+:\\/\\/[\\w-]+(\\.\\w+)+.*$/,\n\turlNoProt: /^[\\w-]+(\\.\\w+)+.*$/,\n\tname: /^[-A-Za-z0-9_.]+$/,\n\tuname: /^['\\pL\\pN ]+$/,\n\ttext: /^[^&<>{}]*$/,\n\tutext: /^([\\r\\n\\pL\\pN\\pS &!@#$%*\\[\\]()_+=;',.\\/?:\"~-]+)$/\n};\n","/*\n**\trin/model-constraints\n**\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\n**\thttps://www.rsthn.com/\n**\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nlet Rin = require('./alpha');\nlet Regex = require('./model-regex');\n\n/**\n**\tMap of model constraint handlers. Each function should accept parameters (in order): the model object (model), the constraint value (ctval),\n**\tthe property name (name), the property value (value) and return the corrected value once verified or throw an exception if errors occur.\n*/\n\nmodule.exports =\n{\n\t/**\n\t**\tUtility function (not a handler) to get the real value given a reference string. If the value is not a string, the value itself will\n\t**\tbe returned, if it is a string starting with '#' the model property will be returned, if starts with '@' the object property will be\n\t**\treturned, otherwise the contents of the string will eval'd and returned.\n\t*/\n\t_getref: function (value, obj)\n\t{\n\t\tif (typeof(value) == \"string\")\n\t\t{\n\t\t\tif (value.substr(0, 1) == \"#\")\t\t\tvalue = obj.get(value.substr(1));\n\t\t\telse if (value.substr(0, 1) == \"@\")\t\tvalue = obj[value.substr(1)];\n\n\t\t\tif (typeof(value) == \"string\")\n\t\t\t\treturn eval(value);\n\n\t\t\treturn value;\n\t\t}\n\t\telse\n\t\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the new value is of the valid type before storing it on the property. When possible if the\n\t**\tinput is of compatible type it will be converted to the target type.\n\t*/\n\ttype: function (model, ctval, name, value)\n\t{\n\t\tswitch (ctval)\n\t\t{\n\t\t\tcase \"int\":\n\t\t\t\tvalue = parseInt(value);\n\t\t\t\tif (isNaN(value)) throw new Error (ctval);\n\t\t\t\tbreak;\n\n\t\t\tcase \"float\":\n\t\t\t\tvalue = parseFloat(value);\n\t\t\t\tif (isNaN(value)) throw new Error (ctval);\n\t\t\t\tbreak;\n\n\t\t\tcase \"string\":\n\t\t\t\tvalue = (value === null || value === undefined) ? \"\" : value.toString();\n\t\t\t\tbreak;\n\n\t\t\tcase \"bit\":\n\t\t\t\tif (value === true || value === false) {\n\t\t\t\t\tvalue = value ? 1 : 0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tvalue = parseInt(value);\n\t\t\t\tif (isNaN(value)) throw new Error (ctval);\n\n\t\t\t\tvalue = value ? 1 : 0;\n\t\t\t\tbreak;\n\n\t\t\tcase \"array\":\n\t\t\t\tif (Rin.typeOf(value) == \"array\")\n\t\t\t\t\tbreak;\n\n\t\t\t\tif (value === null || value === undefined)\n\t\t\t\t{\n\t\t\t\t\tvalue = [];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tthrow new Error (ctval);\n\t\t\t\tbreak;\n\n\t\t\tcase \"bool\":\n\t\t\t\tif (value === \"true\" || value === true) {\n\t\t\t\t\tvalue = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (value === \"false\" || value === false) {\n\t\t\t\t\tvalue = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tthrow new Error (ctval);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the field is of the specified model type.\n\t*/\n\tmodel: function (model, ctval, name, value)\n\t{\n\t\tvar mclass = this._getref(ctval, model);\n\t\tif (!mclass) throw new Error (ctval);\n\n\t\tif (!value)\n\t\t\treturn new mclass();\n\n\t\treturn mclass.ensure (value);\n\t},\n\n\n\t/**\n\t**\tVerifies that the field is of the specified class.\n\t*/\n\tcls: function (model, ctval, name, value)\n\t{\n\t\tvar mclass = this._getref(ctval, model);\n\t\tif (!value) return new mclass();\n\n\t\treturn Rin.ensureTypeOf(mclass, value);\n\t},\n\n\n\t/**\n\t**\tVerifies that the array contents are of the specified class. Returns error if the class does not exist\n\t**\tor if the field is not an array. Therefore a type:array constraint should be used before this one.\n\t*/\n\tarrayof: function (model, ctval, name, value)\n\t{\n\t\tvar mclass = this._getref(ctval, model);\n\t\tif (!value) value = [];\n\n\t\tif (!mclass || Rin.typeOf(value) != \"array\")\n\t\t\tthrow new Error (ctval);\n\n\t\tfor (var i = 0; i < value.length; i++)\n\t\t\tvalue[i] = Rin.ensureTypeOf(mclass, value[i]);\n\t\t\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the array contents are not null. Returns error if the field is not an array, therefore a\n\t**\ttype:array constraint should be used before this one.\n\t*/\n\tarraynull: function (model, ctval, name, value)\n\t{\n\t\tvar remove = false;\n\n\t\tif (Rin.typeOf(ctval) == \"object\")\n\t\t{\n\t\t\tif (ctval.remove) remove = ctval.remove;\n\t\t\tctval = ctval.value;\n\t\t}\n\n\t\tif (ctval) return value;\n\n\t\tif (Rin.typeOf(value) != \"array\")\n\t\t\tthrow new Error (ctval);\n\n\t\tfor (var i = 0; i < value.length; i++)\n\t\t{\n\t\t\tif (value[i] == null)\n\t\t\t{\n\t\t\t\tif (remove)\n\t\t\t\t\tvalue.splice (i--, 1);\n\t\t\t\telse\n\t\t\t\t\tthrow new Error (ctval);\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the array contents are all compliant. Returns error if the field is not an array, therefore\n\t**\ta type:array constraint should be used before this one.\n\t*/\n\tarraycompliant: function (model, ctval, name, value)\n\t{\n\t\tvar remove = false;\n\n\t\tif (Rin.typeOf(ctval) == \"object\")\n\t\t{\n\t\t\tif (ctval.remove) remove = ctval.remove;\n\t\t\tctval = ctval.value;\n\t\t}\n\n\t\tif (!ctval) return value;\n\n\t\tif (Rin.typeOf(value) != \"array\")\n\t\t\tthrow new Error (ctval);\n\n\t\tfor (var i = 0; i < value.length; i++)\n\t\t{\n\t\t\tif (value[i] == null)\n\t\t\t\tcontinue;\n\n\t\t\tif (!value[i].isCompliant())\n\t\t\t{\n\t\t\t\tif (remove)\n\t\t\t\t\tvalue.splice (i--, 1);\n\t\t\t\telse\n\t\t\t\t\tthrow new Error (ctval);\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the presense of the field.\n\t*/\n\trequired: function (model, ctval, name, value)\n\t{\n\t\tif (value === null || value === undefined)\n\t\t\tthrow new Error (ctval ? \"\" : \"null\");\n\n\t\tswitch (Rin.typeOf(value))\n\t\t{\n\t\t\tcase \"array\":\n\t\t\t\tif (value.length == 0) throw new Error (ctval ? \"\" : \"null\");\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tif (value.toString().length == 0) throw new Error (ctval ? \"\" : \"null\");\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the minimum length of the field.\n\t*/\n\tminlen: function (model, ctval, name, value)\n\t{\n\t\tif (value.toString().length < ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the maximum length of the field.\n\t*/\n\tmaxlen: function (model, ctval, name, value)\n\t{\n\t\tif (value.toString().length > ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the minimum value of the field.\n\t*/\n\tminval: function (model, ctval, name, value)\n\t{\n\t\tif (parseFloat(value) < ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the maximum value of the field.\n\t*/\n\tmaxval: function (model, ctval, name, value)\n\t{\n\t\tif (parseFloat(value) > ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the minimum number of items in the array.\n\t*/\n\tmincount: function (model, ctval, name, value)\n\t{\n\t\tif (Rin.typeOf(value) != \"array\" || value.length < ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the maximum number of items in the array.\n\t*/\n\tmaxcount: function (model, ctval, name, value)\n\t{\n\t\tif (Rin.typeOf(value) != \"array\" || value.length > ctval)\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies the format of the field using a regular expression. The constraint value should be the name of\n\t**\tone of the Model.Regex regular expressions.\n\t*/\n\tpattern: function (model, ctval, name, value)\n\t{\n\t\tif (!Regex[ctval].test (value.toString()))\n\t\t\tthrow new Error (ctval);\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tVerifies that the field is inside the specified set of options. The set can be an array or a string with\n\t**\tthe options separated by vertical bar (|). The comparison is case-sensitive.\n\t*/\n\tinset: function (model, ctval, name, value)\n\t{\n\t\tif (Rin.typeOf(ctval) != \"array\")\n\t\t{\n\t\t\tif (!new RegExp(\"^(\"+ctval.toString()+\")$\").test (value.toString()))\n\t\t\t\tthrow new Error (ctval);\n\n\t\t\treturn value;\n\t\t}\n\n\t\tif (ctval.indexOf(value.toString()) == -1)\n\t\t\tthrow new Error (ctval.join(\"|\"));\n\n\t\treturn value;\n\t},\n\n\n\t/**\n\t**\tSets the field to upper case.\n\t*/\n\tupper: function (model, ctval, name, value)\n\t{\n\t\treturn ctval ? value.toString().toUpperCase() : value;\n\t},\n\n\n\t/**\n\t**\tSets the field to lower case.\n\t*/\n\tlower: function (model, ctval, name, value)\n\t{\n\t\treturn ctval ? value.toString().toLowerCase() : value;\n\t}\n};\n","/*\n**\trin/model\n**\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\n**\thttps://www.rsthn.com/\n**\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nlet Rin = require('./alpha');\nlet EventDispatcher = require('./event-dispatcher');\n\n/**\n**\tA model is a high-integrity data object used to store properties and more importantly to provide event support to notify of any\n**\tkind of change that occurs to the model's properties. Integrity of the model is maintained by optionally using property constraints.\n*/\n\nlet _Model = module.exports = EventDispatcher.extend\n({\n\t/**\n\t**\tName of the class.\n\t*/\n\tclassName: \"Model\",\n\n\t/**\n\t**\tDefault properties for the model. Can be a map with the property name and its default value or a function\n\t**\treturning a map with dynamic default values. This is used to reset the model to its initial state.\n\t*/\n\tdefaults: null,\n\n\t/**\n\t**\tModel property contraints. A map with the property name and an object specifying the constraints of the\n\t**\tproperty. This is used to determine the type, format and behavior of each property in the model.\n\t*/\n\tconstraints: null,\n\n\t/**\n\t**\tProperties of the model.\n\t*/\n\tdata: null,\n\n\t/**\n\t**\tArray with the name of the properties that have changed. Populated prior modelChanged event.\n\t*/\n\tchangedList: null,\n\n\t/**\n\t**\tSilent mode indicator. While in silent mode events will not be dispatched.\n\t*/\n\t_silent: 0,\n\n\t/**\n\t**\tCurrent nesting level of the set() method. This is used to determine when all the property\n\t**\tchanges are done.\n\t*/\n\t_level: 0,\n\n\t/**\n\t**\tInitializes the model and sets the properties to the specified data object.\n\t**\n\t**\t>> Model __ctor (object data);\n\t**\t>> Model __ctor (object data, object defaults);\n\t*/\n\t__ctor: function (data, defaults)\n\t{\n\t\tthis._super.EventDispatcher.__ctor();\n\n\t\tthis.data = { };\n\n\t\tif (defaults != null)\n\t\t{\n\t\t\tthis.reset (defaults);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tvar o = null;\n\n\t\t\tif (!this.defaults && this.constraints)\n\t\t\t{\n\t\t\t\tvar o = { };\n\n\t\t\t\tfor (var i in this.constraints)\n\t\t\t\t{\n\t\t\t\t\tvar j = this.constraints[i];\n\t\t\t\t\tif (j.def === null || j.def === undefined)\n\t\t\t\t\t{\n\t\t\t\t\t\to[i] = null;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof(j.def) == \"function\")\n\t\t\t\t\t\to[i] = j.def();\n\t\t\t\t\telse\n\t\t\t\t\t\to[i] = j.def;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.reset(o);\n\t\t}\n\n\t\tthis.init();\n\n\t\tif (data != null)\n\t\t\tthis.set (arguments[0], true);\n\n\t\tif (this.constraints) this.update();\n\n\t\tthis.ready();\n\t},\n\n\t/**\n\t**\tResets the model to its default state and triggers update events. If a map is provided the defaults of\n\t**\tthe model will be set to the specified map.\n\t**\n\t**\t>> Model reset (object defaults, [bool nsilent=true]);\n\t**\t>> Model reset ([bool nsilent=true]);\n\t*/\n\treset: function (defaults, nsilent)\n\t{\n\t\tif (!this.defaults)\n\t\t{\n\t\t\tif (!defaults || (Rin.typeOf(defaults) != \"object\" && Rin.typeOf(defaults) != \"function\"))\n\t\t\t\treturn this;\n\n\t\t\tthis.defaults = defaults;\n\t\t}\n\n\t\tif (Rin.typeOf(this.defaults) == \"function\")\n\t\t\tthis.data = this.defaults();\n\t\telse\n\t\t\tthis.data = Rin.clone(this.defaults);\n\n\t\treturn (nsilent === false || defaults === false) ? this : this.update(null, true);\n\t},\n\n\t/**\n\t**\tInitializes the model. Called before the model properties are set.\n\t**\n\t**\t>> void init ();\n\t*/\n\tinit: function ()\n\t{\n\t},\n\n\t/**\n\t**\tInitialization epilogue. Called after initialization and after model properties are set.\n\t**\n\t**\t>> void ready ();\n\t*/\n\tready: function ()\n\t{\n\t},\n\n\t/**\n\t**\tEnables or disables silent mode. When the model is in silent mode events will not be dispatched.\n\t**\n\t**\t>> Model silent (value: bool);\n\t*/\n\tsilent: function (value)\n\t{\n\t\tthis._silent += value ? 1 : -1;\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tValidates a property name and value against the constraints defined in the model (if any). Returns the\n\t**\tfinal value if successful or throws an empty exception if errors occur.\n\t**\n\t**\t>> T _validate (string name, T value);\n\t*/\n\t_validate: function (name, value)\n\t{\n\t\tif (!this.constraints || !this.constraints[name])\n\t\t\treturn value;\n\n\t\tvar constraints = this.constraints[name];\n\n\t\tvar nvalue = value;\n\n\t\tfor (var ctname in constraints)\n\t\t{\n\t\t\tif (!_Model.Constraints[ctname])\n\t\t\t\tcontinue;\n\n\t\t\ttry {\n\t\t\t\tnvalue = _Model.Constraints[ctname] (this, constraints[ctname], name, nvalue);\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tif (e.message == \"null\")\n\t\t\t\t\tbreak;\n\n\t\t\t\tthrow new Error (`Constraint [${ctname}:${constraints[ctname]}] failed on property '${name}'.`);\n\t\t\t}\n\t\t}\n\n\t\treturn nvalue;\n\t},\n\n\t/**\n\t**\tSets the value of a property and returns the value set. This method is internally used to set properties\n\t**\tone at a time. If constraints are present in the model for the specified property all constraints will be\n\t**\tverified. When constraint errors occur the constraintError event will be raised and the property value\n\t**\twill not be changed.\n\t**\n\t**\t>> T _set (string name, T value);\n\t*/\n\t_set: function (name, value)\n\t{\n\t\tif (!this.constraints || !this.constraints[name])\n\t\t{\n\t\t\tthis.data[name] = value;\n\t\t\treturn value;\n\t\t}\n\n\t\tvar constraints = this.constraints[name];\n\n\t\tvar cvalue = this.data[name];\n\t\tvar nvalue = value;\n\n\t\tfor (var ctname in constraints)\n\t\t{\n\t\t\tif (!_Model.Constraints[ctname])\n\t\t\t\tcontinue;\n\n\t\t\ttry {\n\t\t\t\tnvalue = _Model.Constraints[ctname] (this, constraints[ctname], name, nvalue);\n\t\t\t}\n\t\t\tcatch (e)\n\t\t\t{\n\t\t\t\tif (e.message == \"null\")\n\t\t\t\t\tbreak;\n\n\t\t\t\tif (!this._silent)\n\t\t\t\t\tthis.dispatchEvent (\"constraintError\", { constraint: ctname, message: e.message, name: name, value: value });\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn (this.data[name] = nvalue);\n\t},\n\n\t/**\n\t**\tTriggers property events to indicate a property is changing. First triggers \"propertyChanging\" and then\n\t**\t\"propertyChanged\". If the first event returns false the second event will not be triggered.\n\t**\n\t**\t>> void _propertyEvent (string name, T prev, T value, bool direct=false);\n\t*/\n\t_propertyEvent: function (name, prev, value, direct)\n\t{\n\t\tvar temp = { name: name, old: prev, value: value, level: this._level };\n\n\t\tvar evt = this.dispatchEvent (\"propertyChanging\", temp);\n\n\t\tif (!direct)\n\t\t\ttemp.value = this._set (name, temp.value);\n\t\telse\n\t\t\tthis.data[name] = temp.value;\n\n\t\tif (evt != null && evt.ret.length && evt.ret[0] === false)\n\t\t\treturn;\n\n\t\tthis.dispatchEvent (\"propertyChanged.\" + name, temp);\n\t\tthis.dispatchEvent (\"propertyChanged\", temp);\n\n\t\tthis.changedList.push (name);\n\t},\n\n\t/**\n\t**\tSets one or more properties of the model. Possible arguments can be two strings or a map.\n\t**\n\t**\t>> Model set (string name, T value, bool force=true);\n\t**\t>> Model set (string name, T value, bool silent=false);\n\t**\t>> Model set (string name, T value);\n\t**\t>> Model set (object data);\n\t*/\n\tset: function ()\n\t{\n\t\tvar n = arguments.length;\n\t\tvar force = false, silent = false;\n\n\t\tif ((n > 2 || (n == 2 && Rin.typeOf(arguments[0]) == \"object\")) && Rin.typeOf(arguments[n-1]) == \"boolean\")\n\t\t{\n\t\t\tforce = arguments[--n];\n\t\t\tif (force === false) silent = true;\n\t\t}\n\n\t\tif (this._level == 0)\n\t\t{\n\t\t\tthis.changedList = [];\n\t\t}\n\n\t\tthis._level++;\n\n\t\tif (n == 2)\n\t\t{\n\t\t\tif (this.data[arguments[0]] != arguments[1] || force)\n\t\t\t{\n\t\t\t\tif (!this._silent && !silent)\n\t\t\t\t\tthis._propertyEvent (arguments[0], this.data[arguments[0]], this._validate (arguments[0], arguments[1]));\n\t\t\t\telse\n\t\t\t\t\tthis._set (arguments[0], arguments[1]);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (var i in arguments[0])\n\t\t\t{\n\t\t\t\tif (this.data[i] != arguments[0][i] || force)\n\t\t\t\t{\n\t\t\t\t\tif (!this._silent && !silent)\n\t\t\t\t\t\tthis._propertyEvent (i, this.data[i], this._validate (i, arguments[0][i]));\n\t\t\t\t\telse\n\t\t\t\t\t\tthis._set (i, arguments[0][i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!--this._level && this.changedList.length && !silent && !this._silent)\n\t\t\tthis.dispatchEvent (\"modelChanged\", { fields: this.changedList });\n\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tReturns the value of a property. If no name is specified the whole map of properties will be returned.\n\t**\tIf a boolean value of \"true\" is provided the properties map will be returned but first will be compacted\n\t**\tusing the default data to ensure only valid properties are present.\n\t**\n\t**\t>> T get (string name);\n\t**\t>> object get ();\n\t**\t>> object get (true);\n\t**\t>> object get (false);\n\t**\t\n\t*/\n\tget: function (name, def)\n\t{\n\t\tif (arguments.length == 0 || name === false)\n\t\t\treturn this.data;\n\n\t\tif (arguments.length == 1 && name === true)\n\t\t\treturn this.flatten ();\n\n\t\tif (arguments.length == 2)\n\t\t\treturn this.data[name] === undefined ? def : this.data[name];\n\n\t\treturn this.data[name];\n\t},\n\n\t/**\n\t**\tReturns the value of a property as an integer number.\n\t**\n\t**\t>> int getInt (string name, [int def]);\n\t*/\n\tgetInt: function (name, def)\n\t{\n\t\tif (arguments.length == 2)\n\t\t\treturn this.data[name] === undefined ? def : parseInt (this.data[name]);\n\n\t\treturn parseInt (this.data[name]);\n\t},\n\n\t/**\n\t**\tReturns the value of a property as a floating point number.\n\t**\n\t**\t>> float getFloat (string name, [float def]);\n\t*/\n\tgetFloat: function (name, def)\n\t{\n\t\tif (arguments.length == 2)\n\t\t\treturn this.data[name] === undefined ? def : parseFloat (this.data[name]);\n\n\t\treturn parseFloat (this.data[name]);\n\t},\n\n\t/**\n\t**\tReturns the value of a property as a boolean value (true or false).\n\t**\n\t**\t>> bool getBool (string name, [bool def]);\n\t**\t\n\t*/\n\tgetBool: function (name, def)\n\t{\n\t\tif (arguments.length == 2)\n\t\t\tname = this.data[name] === undefined ? def : this.data[name];\n\t\telse\n\t\t\tname = this.data[name];\n\n\t\tif (name === \"true\" || name === true)\n\t\t\treturn true;\n\n\t\tif (name === \"false\" || name === false)\n\t\t\treturn false;\n\n\t\treturn parseInt (name) ? true : false;\n\t},\n\n\t/**\n\t**\tReturns a reference object for a model property. The resulting object contains two methods\n\t**\tnamed \"get\" and \"set\" to modify the value of the property.\n\t**\n\t**\t>> object getReference (string name);\n\t*/\n\tgetReference: function (name)\n\t{\t\n\t\tvar m = this;\n\n\t\treturn {\n\t\t\tget: function() {\n\t\t\t\treturn m.get(name);\n\t\t\t},\n\n\t\t\tset: function(value) {\n\t\t\t\tm.set(name, value);\n\t\t\t}\n\t\t};\n\t},\n\n\t/**\n\t**\tSets or returns a constraint given the property name. \n\t**\n\t**\t>> Model constraint (string field, string constraint, T value);\n\t**\t>> Model constraint (string field, object constraint);\n\t**\t>> Model constraint (object constraints);\n\t**\t>> object constraint (string field);\n\t*/\n\tconstraint: function (field, constraint, value)\n\t{\n\t\tif (arguments.length == 3 || arguments.length == 2 || (arguments.length == 1 && Rin.typeOf(field) == \"object\"))\n\t\t{\n\t\t\tif (this.constraints === this.constructor.prototype.constraints)\n\t\t\t\tthis.constraints = Rin.clone (this.constraints);\n\n\t\t\tswitch (arguments.length)\n\t\t\t{\n\t\t\t\tcase 1:\n\t\t\t\t\tRin.override (this.constraints, field);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\tRin.override (this.constraints[field], constraint);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3:\n\t\t\t\t\tthis.constraints[field][constraint] = value;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn !field ? this : this.constraints[field];\n\t},\n\n\t/**\n\t**\tReturns a compact version of the model properties. That is, a map only with validated properties that are\n\t**\talso present in the default data map. Returns null if the object is not compliant. If the \"safe\" parameter\n\t**\tis set one last property named \"class\" will be attached, this specifies the original classPath of the object.\n\t**\n\t**\t>> object flatten ([bool safe=false]);\n\t*/\n\tflatten: function (safe, rsafe)\n\t{\n\t\tif (safe)\n\t\t{\n\t\t\tvar data = this.flatten(false, true);\n\t\t\tif (data == null) return null;\n\n\t\t\tdata[\"class\"] = this.classPath;\n\t\t\treturn data;\n\t\t}\n\n\t\tif (!this.constraints && !this.defaults)\n\t\t\treturn this.data;\n\n\t\tif (!this.isCompliant())\n\t\t\treturn { };\n\n\t\tvar constraints = this.constraints;\n\t\tvar keys = this.defaults ? (Rin.typeOf(this.defaults) == \"function\" ? this.defaults() : this.defaults) : this.constraints;\n\n\t\tvar data = { };\n\n\t\tfor (var i in this.data)\n\t\t{\n\t\t\tif (!(i in keys)) continue;\n\n\t\t\tif (constraints && constraints[i])\n\t\t\t{\n\t\t\t\tvar ct = constraints[i];\n\n\t\t\t\tif (ct.model)\n\t\t\t\t{\n\t\t\t\t\tdata[i] = this.data[i] ? this.data[i].flatten(rsafe) : null;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (ct.arrayof)\n\t\t\t\t{\n\t\t\t\t\tdata[i] = [];\n\n\t\t\t\t\tfor (var j = 0; j < this.data[i].length; j++)\n\t\t\t\t\t\tdata[i][j] = this.data[i][j] ? this.data[i][j].flatten(rsafe) : null;\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (ct.cls)\n\t\t\t\t{\n\t\t\t\t\tdata[i] = this.data[i] ? this.data[i].flatten() : null;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdata[i] = this.data[i];\n\t\t}\n\n\t\treturn data;\n\t},\n\n\t/**\n\t**\tRemoves a property or a list of properties.\n\t**\n\t**\t>> void remove (string name, [bool nsilent=true]);\n\t**\t>> void remove (array name, [bool nsilent=true]);\n\t*/\n\tremove: function (name, nsilent)\n\t{\n\t\tif (Rin.typeOf(name) == \"array\")\n\t\t{\n\t\t\tfor (var i = 0; i < name.length; i++)\n\t\t\t\tdelete this.data[name[i]];\n\n\t\t\tif (nsilent !== false && !this._silent)\n\t\t\t\tthis.dispatchEvent (\"propertyRemoved\", { fields: name });\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdelete this.data[name];\n\n\t\t\tif (nsilent !== false && !this._silent)\n\t\t\t\tthis.dispatchEvent (\"propertyRemoved\", { fields: [name] });\n\t\t}\n\t},\n\n\t/**\n\t**\tTriggers data change events for one or more properties. Ensure that silent mode is not enabled or else\n\t**\tthis method will have no effect. If no parameters are provided a full update will be triggered on all of\n\t**\tthe model properties.\n\t**\n\t**\t>> Model update (array fields);\n\t**\t>> Model update (string name);\n\t**\t>> Model update (bool forceModelChanged);\n\t**\t>> Model update ();\n\t*/\n\tupdate: function (fields, direct)\n\t{\n\t\tif (this._silent) return this;\n\n\t\tif (this._level == 0)\n\t\t{\n\t\t\tthis.changedList = [];\n\t\t}\n\n\t\tthis._level++;\n\n\t\tif (fields && Rin.typeOf(fields) == 'string')\n\t\t{\n\t\t\tthis._propertyEvent (fields, this.data[fields], this.data[fields], direct);\n\t\t}\n\t\telse if (fields && Rin.typeOf(fields) == 'array')\n\t\t{\n\t\t\tfor (var i of fields)\n\t\t\t\tthis._propertyEvent (i, this.data[i], this.data[i], direct);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (var i in this.data)\n\t\t\t\tthis._propertyEvent (i, this.data[i], this.data[i], direct);\n\t\t}\n\n\t\tif (!--this._level && !this._silent && (this.changedList.length != 0 || fields === true))\n\t\t\tthis.dispatchEvent (\"modelChanged\", { fields: this.changedList });\n\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tValidates one or mode model properties using the defined constraints. If no parameters are provided all of\n\t**\tthe properties in the model will be validated.\n\t**\n\t**\t>> Model validate (array fields);\n\t**\t>> Model validate (string name);\n\t**\t>> Model validate ();\n\t*/\n\tvalidate: function (fields)\n\t{\n\t\tif (!this.constraints) return this;\n\n\t\tif (fields && Rin.typeOf(fields) == \"string\")\n\t\t{\n\t\t\tthis._set (fields, this.data[fields])\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (var i in this.data)\n\t\t\t{\n\t\t\t\tif (fields && Rin.indexOf(fields, i) == -1)\n\t\t\t\t\tcontinue;\n\n\t\t\t\tthis._set (i, this.data[i])\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t/**\n\t**\tValidates all the properties in the model and returns a boolean indicating if all of them comply with the\n\t**\tconstraints defined in the model.\n\t**\n\t**\t>> bool isCompliant ();\n\t*/\n\tisCompliant: function ()\n\t{\n\t\tif (!this.constraints) return true;\n\n\t\ttry\n\t\t{\n\t\t\tfor (var i in this.data)\n\t\t\t\tthis._validate (i, this.data[i]);\n\n\t\t\treturn true;\n\t\t}\n\t\tcatch (e) {\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t/**\n\t**\tRegisters an event handler for changes in a specific property of the model.\n\t**\n\t**\t>> void observe (string property, function handler, object context);\n\t*/\n\tobserve: function (property, handler, context)\n\t{\n\t\tthis.addEventListener (\"propertyChanged.\" + property, handler, context);\n\t},\n\n\t/**\n\t**\tUnregisters an event handler from changes in a specific property of the model.\n\t**\n\t**\t>> void unobserve (string property, function handler, object context);\n\t*/\n\tunobserve: function (property, handler, context)\n\t{\n\t\tthis.removeEventListener (\"propertyChanged.\" + property, handler, context);\n\t},\n\n\t/**\n\t**\tSerializes the model into a string.\n\t**\n\t**\tstring toString ();\n\t*/\n\ttoString: function ()\n\t{\n\t\treturn Rin.serialize(this.get (true));\n\t}\n});\n\n\n/**\n**\tImport model constraints.\n*/\n\n_Model.Constraints = require('./model-constraints');\n","/*\n**\trin/model-list\n**\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\n**\thttps://www.rsthn.com/\n**\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nlet Rin = require('./alpha');\nlet Model = require('./model');\n\n/**\n**\tGeneric list for models.\n*/\n\nmodule.exports = Model.extend\n({\n\t/**\n\t**\tName of the class.\n\t*/\n\tclassName: \"List\",\n\n\t/**\n\t**\tClass of the items in the list, can be overriden by child classes to impose a more strict constraint.\n\t*/\n\titemt: Model,\n\n\t/**\n\t**\tMirror of properties.contents\n\t*/\n\tcontents: null,\n\n\t/**\n\t**\tDefault properties of the model.\n\t*/\n\tdefaults:\n\t{\n\t\tcontents: null\n\t},\n\n\t/**\n\t**\tConstraints of the model to ensure integrity.\n\t*/\n\tconstraints:\n\t{\n\t\tcontents: {\n\t\t\ttype: \"array\",\n\t\t\tarrayof: \"@itemt\"\n\t\t}\n\t},\n\n\t/**\n\t**\tInitialization epilogue. Called after initialization and after model properties are set.\n\t**\n\t**\t>> void ready ();\n\t*/\n\tready: function ()\n\t{\n\t\tthis._eventGroup = \"ModelList_\" + Date.now() + \":modelChanged\";\n\n\t\tthis.contents = this.data.contents;\n\t},\n\n\t/**\n\t**\tConnects the event handlers to the item.\n\t**\n\t**\t>> Model _bind (int index, Model item);\n\t*/\n\t_bind: function (index, item)\n\t{\n\t\tif (item && item.addEventListener) item.addEventListener (this._eventGroup, this._onItemEvent, this, index);\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tDisconnects the event handlers from the item.\n\t**\n\t**\t>> Model _unbind (Model item);\n\t*/\n\t_unbind: function (item)\n\t{\n\t\tif (item && item.removeEventListener) item.removeEventListener (this._eventGroup);\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tHandler for item events.\n\t**\n\t**\t>> Model _onItemEvent (Event evt, object args, object data);\n\t*/\n\t_onItemEvent: function (evt, args, data)\n\t{\n\t\tthis.prepareEvent (\"itemChanged\", { index: data, item: evt.source }).from (evt)\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\t},\n\n\t/**\n\t**\tReturns the number of items in the list.\n\t**\n\t**\t>> int count ();\n\t*/\n\tcount: function ()\n\t{\n\t\treturn this.data.contents.length;\n\t},\n\n\t/**\n\t**\tClears the contents of the list.\n\t**\n\t**\t>> void clear ();\n\t*/\n\tclear: function ()\n\t{\n\t\tfor (var i = 0; i < this.data.contents; i++)\n\t\t\tthis._unbind (this.data.contents[i]);\n\n\t\tthis.data.contents = [];\n\n\t\tthis.prepareEvent (\"itemCleared\")\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\t},\n\n\t/**\n\t**\tSets the contents of the list with the specified array. All items will be ensured to be of the same model\n\t**\ttype as the one specified in the list.\n\t**\n\t**\t>> void setData (array data);\n\t*/\n\tsetData: function (data)\n\t{\n\t\tthis.clear ();\n\t\tif (!data) return;\n\n\t\tfor (var i = 0; i < data.length; i++)\n\t\t{\n\t\t\tvar item = Rin.ensureTypeOf(this.itemt, data[i]);\n\t\t\tthis._bind (i, item);\n\n\t\t\tthis.data.contents.push (item);\n\t\t}\n\n\t\tthis.prepareEvent (\"itemsChanged\")\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\t},\n\n\t/**\n\t**\tReturns the raw array contents of the list.\n\t**\n\t**\t>> array getData ();\n\t*/\n\tgetData: function ()\n\t{\n\t\treturn this.data.contents;\n\t},\n\n\t/**\n\t**\tReturns the item at the specified index or null if the index is out of bounds.\n\t**\n\t**\t>> Model getAt (int index);\n\t*/\n\tgetAt: function (index)\n\t{\n\t\tif (index < 0 || index >= this.data.contents.length)\n\t\t\treturn null;\n\n\t\treturn Rin.ensureTypeOf(this.itemt, this.data.contents[index]);\n\t},\n\n\t/**\n\t**\tRemoves and returns the item at the specified index. Returns null if the index is out of bounds.\n\t**\n\t**\t>> Model removeAt (int index);\n\t*/\n\tremoveAt: function (index)\n\t{\n\t\tif (index < 0 || index >= this.data.contents.length)\n\t\t\treturn null;\n\n\t\tvar item = Rin.ensureTypeOf(this.itemt, this.data.contents.splice(index, 1)[0]);\n\t\tthis._unbind (item);\n\n\t\tthis.prepareEvent (\"itemRemoved\", { index: index, item: item })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tSets the item at the specified index. Returns false if the index is out of bounds, true otherwise. The\n\t**\titem will be ensured to be of the model defined in the list.\n\t**\n\t**\t>> bool setAt (int index, Model item);\n\t*/\n\tsetAt: function (index, item)\n\t{\n\t\tif (index < 0 || index >= this.data.contents.length)\n\t\t\treturn false;\n\n\t\titem = Rin.ensureTypeOf(this.itemt, item);\n\n\t\tthis.data.contents[index] = item;\n\t\tthis._bind (index, item);\n\n\t\tthis.prepareEvent (\"itemChanged\", { index: index, item: item })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn true;\n\t},\n\n\t/**\n\t**\tNotifies a change in the item at the specified index. Returns false if the index is out of bounds.\n\t**\n\t**\t>> bool updateAt (int index);\n\t*/\n\tupdateAt: function (index)\n\t{\n\t\tif (index < 0 || index >= this.data.contents.length)\n\t\t\treturn false;\n\n\t\tthis.prepareEvent (\"itemChanged\", { index: index, item: this.data.contents[index] })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn true;\n\t},\n\n\t/**\n\t**\tAdds an item to the bottom of the list. Returns null if the item is not an object or a model. The item\n\t**\twill be ensured to be of the model specified in the list.\n\t**\n\t**\t>> Model push (Model item);\n\t*/\n\tpush: function (item)\n\t{\n\t\tif (item && Rin.typeOf(item) != \"object\")\n\t\t\treturn null;\n\n\t\titem = Rin.ensureTypeOf(this.itemt, item);\n\n\t\tthis.data.contents.push (item);\n\t\tthis._bind (this.data.contents.length-1, item);\n\n\t\tthis.prepareEvent (\"itemAdded\", { index: this.data.contents.length-1, item: item })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tRemoves and returns an item from the bottom of the list.\n\t**\n\t**\t>> Model pop ();\n\t*/\n\tpop: function ()\n\t{\n\t\treturn this._unbind (Rin.ensureTypeOf(this.itemt, this.data.contents.pop()));\n\t},\n\n\t/**\n\t**\tAdds an item to the top of the list. Returns null if the item is not an object or a model. The item\n\t**\twill be ensured to be of the model specified in the list.\n\t**\n\t**\t>> Model unshift (Model item);\n\t*/\n\tunshift: function (item)\n\t{\n\t\tif (item && Rin.typeOf(item) != \"object\")\n\t\t\treturn null;\n\n\t\titem = Rin.ensureTypeOf(this.itemt, item);\n\n\t\tthis.data.contents.unshift (item);\n\t\tthis._bind (0, item);\n\n\t\tthis.prepareEvent (\"itemAdded\", { index: 0, item: item })\n\t\t.enqueue (this.prepareEvent (\"modelChanged\", { fields: [\"contents\"] })).resume ();\n\n\t\treturn item;\n\t},\n\n\t/**\n\t**\tRemoves and returns an item from the top of the list.\n\t**\n\t**\t>> Model shift ();\n\t*/\n\tshift: function ()\n\t{\n\t\treturn this._unbind (Rin.ensureTypeOf(this.itemt, this.data.contents.shift()));\n\t},\n\n\t/**\n\t**\tSearches for an item matching the specified partial definition and returns its index. Returns -1 if the\n\t**\titem was not found. If retObject is set to true the object will be returned instead of its index and null\n\t**\twill be returned when the item is not found.\n\t**\n\t**\tint|object find (object data, bool retObject=false);\n\t*/\n\tfind: function (data, retObject)\n\t{\n\t\tvar contents = this.data.contents;\n\n\t\tfor (var i = 0; i < contents.length; i++)\n\t\t{\n\t\t\tif (Rin.partialCompare (contents[i].data, data))\n\t\t\t\treturn retObject ? contents[i] : i;\n\t\t}\n\n\t\treturn retObject ? null : -1;\n\t}\n});\n","/*\r\n**\trin/schema\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nlet Rin = require('./alpha');\r\n\r\n/**\r\n**\tThe utility functions in this module allow to create a very strict serialization/deserialization schema\r\n**\tto ensure that all values are of the specific type when stored in string format.\r\n*/\r\n\r\nlet Schema = module.exports =\r\n{\r\n\tType: function (proto)\r\n    {\r\n\t\tlet tmp =\r\n\t\t{\r\n            flatten: function (value, context) {\r\n                return value;\r\n            },\r\n\r\n            unflatten: function (value, context) {\r\n                return value;\r\n            }\r\n        };\r\n\r\n        return proto ? Rin.override(tmp, proto) : tmp;\r\n    },\r\n\r\n\tString: function()\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\tflatten: function (value, context) {\r\n\t\t\t\treturn value != null ? value.toString() : null;\r\n\t\t\t},\r\n\r\n\t\t\tunflatten: function (value, context) {\r\n\t\t\t\treturn value != null ? value.toString() : null;\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tInteger: function()\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\tflatten: function (value, context) {\r\n\t\t\t\treturn ~~value;\r\n\t\t\t},\r\n\r\n\t\t\tunflatten: function (value, context) {\r\n\t\t\t\treturn ~~value;\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tNumber: function (precision)\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\t_precision: precision,\r\n\t\t\t_round: false,\r\n\r\n\t\t\tprecision: function (value)\r\n\t\t\t{\r\n\t\t\t\tthis._precision = ~~value;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\tflatten: function (value, context)\r\n\t\t\t{\r\n\t\t\t\tvalue = parseFloat(value);\r\n\r\n\t\t\t\tif (this._precision > 0)\r\n\t\t\t\t\tvalue = (~~(value*Math.pow(10, this._precision))) / Math.pow(10, this._precision);\r\n\r\n\t\t\t\treturn value;\r\n\t\t\t},\r\n\r\n\t\t\tunflatten: function (value, context) {\r\n\t\t\t\treturn parseFloat(value);\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tBool: function (compact)\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\t_compact: compact,\r\n\r\n\t\t\tcompact: function(value)\r\n\t\t\t{\r\n\t\t\t\tthis._compact = value;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\tflatten: function (value, context) {\r\n\t\t\t\tvalue = ~~value;\r\n\t\t\t\treturn this._compact ? (value > 0 ? 1 : 0) : (value > 0 ? true : false);\r\n\t\t\t},\r\n\r\n\t\t\tunflatten: function (value, context) {\r\n\t\t\t\treturn (~~value) ? true : false;\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\tSharedString: function()\r\n\t{\r\n\t\treturn Schema.Type\r\n\t\t({\r\n\t\t\tflatten: function (value, context)\r\n\t\t\t{\r\n\t\t\t\tif (value == null) return 0;\r\n\r\n\t\t\t\tvalue = value.toString();\r\n\r\n                if (!(\"strings\" in context))\r\n                {\r\n                    context.strings_map = { };\r\n                    context.strings = [ ];\r\n                }\r\n\r\n                if (!(value in context.strings_map))\r\n                {\r\n                    context.strings.push(value);\r\n                    context.strings_map[value] = context.strings.length;\r\n                }\r\n\r\n                return context.strings_map[value];\r\n            },\r\n\r\n\t\t\tunflatten: function (value, context)\r\n\t\t\t{\r\n                return value == null || value == 0 ? null : context.strings[~~value - 1];\r\n            }\r\n        });\r\n    },\r\n\r\n\tArray: function (type)\r\n    {\r\n        return Schema.Type({\r\n\r\n\t\t\titemType: type,\r\n\t\t\t_debug: false,\r\n\r\n\t\t\tdebug: function(v) {\r\n\t\t\t\tthis._debug = v;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n            of: function (type) {\r\n                this.itemType = type;\r\n                return this;\r\n            },\r\n\r\n\t\t\tflatten: function (value, context)\r\n\t\t\t{\r\n\t\t\t\tif (value == null) return null;\r\n\r\n                let o = [ ];\r\n                \r\n                for (let i = 0; i < value.length; i++)\r\n                    o.push(this.itemType.flatten(value[i], context));\r\n\r\n                return o;\r\n            },\r\n\r\n\t\t\tunflatten: async function (value, context)\r\n\t\t\t{\r\n\t\t\t\tif (value == null) return null;\r\n\r\n                let o = [ ];\r\n\r\n\t\t\t\tfor (let i = 0; i < value.length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\to.push(await this.itemType.unflatten(value[i], context));\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            }\r\n        });\r\n    },\r\n\r\n    Object: function()\r\n    {\r\n        return Schema.Type({\r\n\r\n            properties: [ ],\r\n\r\n            property: function (name, type)\r\n            {\r\n                this.properties.push({ name: name, type: type });\r\n                return this;\r\n            },\r\n\r\n            flatten: function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tlet o;\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t{\r\n\t\t\t\t\to = { };\r\n\r\n\t\t\t\t\tfor (let i = 0; i < this.properties.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\to[this.properties[i].name] = this.properties[i].type.flatten(value[this.properties[i].name], context);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\to = [ ];\r\n\r\n\t\t\t\t\tfor (let i = 0; i < this.properties.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\to.push(this.properties[i].type.flatten(value[this.properties[i].name], context));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            },\r\n            \r\n            unflatten: async function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tlet o = { };\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t{\r\n\t\t\t\t\tfor (let i = 0; i < this.properties.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\to[this.properties[i].name] = await this.properties[i].type.unflatten(value[this.properties[i].name], context);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\r\n\t\t\t\t\tfor (let i = 0; i < this.properties.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\to[this.properties[i].name] = await this.properties[i].type.unflatten(value[i], context);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            }\r\n        });\r\n\t},\r\n\r\n    Class: function (classConstructor)\r\n    {\r\n\t\treturn Schema.Type\r\n\t\t({\r\n            _constructor: classConstructor,\r\n\r\n            constructor: function (classConstructor)\r\n            {\r\n                this._constructor = classConstructor;\r\n                return this;\r\n            },\r\n\r\n            flatten: function (value, context)\r\n            {\r\n                return value == null ? null : value.flatten(context);\r\n            },\r\n\r\n            unflatten: async function (value, context)\r\n            {\r\n\t\t\t\treturn value == null ? null : await (new this._constructor()).unflatten(value, context);\r\n            }\r\n        });\r\n\t},\r\n\r\n\t/*\r\n\t**\tUsed when you want to specify just a single property.\r\n\t*/\r\n    Property: function(name, type)\r\n    {\r\n        return Schema.Type({\r\n\r\n\t\t\tproperty: name,\r\n\t\t\ttype: type,\r\n\r\n\t\t\tname: function (name)\r\n\t\t\t{\r\n\t\t\t\tthis.property = name;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n\t\t\tis: function (type)\r\n\t\t\t{\r\n\t\t\t\tthis.type = type;\r\n\t\t\t\treturn this;\r\n\t\t\t},\r\n\r\n            flatten: function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tlet o;\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t{\r\n\t\t\t\t\to = { };\r\n\t\t\t\t\to[this.property] = this.type.flatten(value[this.property], context);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\to = this.type.flatten(value[this.property], context);\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            },\r\n\r\n            unflatten: async function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tlet o = { };\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t\to[this.property] = await this.type.unflatten(value[this.property], context);\r\n\t\t\t\telse\r\n\t\t\t\t\to[this.property] = await this.type.unflatten(value, context);\r\n\r\n                return o;\r\n            }\r\n        });\r\n\t},\r\n\r\n    Map: function()\r\n    {\r\n        return Schema.Type({\r\n\r\n            flatten: function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t\treturn value;\r\n\r\n\t\t\t\tlet o = [ ];\r\n\r\n\t\t\t\tfor (let i in value)\r\n\t\t\t\t{\r\n\t\t\t\t\to.push(i);\r\n\t\t\t\t\to.push(value[i]);\r\n\t\t\t\t}\r\n\r\n                return o;\r\n            },\r\n\r\n            unflatten: function (value, context)\r\n            {\r\n\t\t\t\tif (value == null) return null;\r\n\r\n\t\t\t\tif (context.symbolic === true)\r\n\t\t\t\t\treturn value;\r\n\r\n\t\t\t\tlet o = { };\r\n\r\n\t\t\t\tfor (let i = 0; i < value.length; i += 2)\r\n\t\t\t\t\to[value[i]] = value[i+1];\r\n\r\n                return o;\r\n            }\r\n        });\r\n\t}\r\n};\r\n","/*\r\n**\trin/flattenable\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nlet Class = require('./class');\r\n\r\n/**\r\n**\tClass used to add flattening and unflattening capabilities to any object. A \"flat\" object is an object composed\r\n**\tonly of native types, that is: `null,` `boolean`, `integer`, `number`, `array` or `object`.\r\n*/\r\n\r\nmodule.exports = Class.extend\r\n({\r\n\t/**\r\n\t**\tName of the class.\r\n\t*/\r\n\tclassName: \"Flattenable\",\r\n\r\n\t/**\r\n\t**\tType schema used to flatten/unflatten the contents of this class. See Schema class for more information.\r\n\t*/\r\n\ttypeSchema: null,\r\n\r\n\t/**\r\n\t**\tReturns the flattened contents of the object.\r\n\t*/\r\n\tflatten: function (context)\r\n\t{\r\n\t\treturn this.typeSchema.flatten(this, context);\r\n\t},\r\n\r\n\t/**\r\n\t**\tUnflattens the given object and overrides the local contents.\r\n\t*/\r\n\tunflatten: async function (value, context)\r\n\t{\r\n\t\tObject.assign(this, await this.typeSchema.unflatten(value, context));\r\n\t\tawait this.onUnflattened();\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tExecuted when the unflatten() method is called on the object.\r\n\t*/\r\n\tonUnflattened: async function ()\r\n\t{\r\n\t}\r\n});\r\n","/*\r\n**\trin/collection\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nlet Flattenable = require('./flattenable');\r\nlet Schema = require('./schema');\r\nlet Rin = require('./alpha');\r\n\r\n/**\r\n**\tFlattenable collection class, used to store items and manipulate them. The items should also be flattenable.\r\n*/\r\n\r\nmodule.exports = Flattenable.extend\r\n({\r\n\t/**\r\n\t**\tName of the class.\r\n\t*/\r\n\tclassName: \"Collection\",\r\n\r\n\t/**\r\n\t**\tDescribes the type schema of the underlying items.\r\n\t*/\r\n\titemTypeSchema: null,\r\n\r\n\t/**\r\n\t**\tArray of items.\r\n\t*/\r\n\titems: null, /* Array */\r\n\r\n\t/**\r\n\t**\tConstructs the collection.\r\n\t*/\r\n\t__ctor: function (itemTypeSchema)\r\n\t{\r\n\t\tif (!itemTypeSchema) itemTypeSchema = this.itemTypeSchema;\r\n\r\n\t\tif (itemTypeSchema)\r\n\t\t\tthis.typeSchema = Schema.Property('items').is(Schema.Array().of(itemTypeSchema));\r\n\r\n\t\tthis.reset();\r\n\t},\r\n\r\n\t/*\r\n\t**\tExecuted after the collection has been unflattened, re-adds the items to ensure onItemAdded() is called.\r\n\t*/\r\n\tonUnflattened: function()\r\n\t{\r\n\t\tlet items = this.items;\r\n\t\tthis.reset();\r\n\r\n\t\tfor (let i of items)\r\n\t\t\tthis.add(i);\r\n\t},\r\n\r\n\t/*\r\n\t**\tResets the collection to empty. Note that onItemRemoved will not be called.\r\n\t*/\r\n\treset: function ()\r\n\t{\r\n\t\tthis.items = [];\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tClears the contents of the collection (removes each item manually, onItemRemoved will be called).\r\n\t*/\r\n\tclear: function ()\r\n\t{\r\n\t\tvar items = this.items;\r\n\t\tthis.reset();\r\n\r\n\t\tfor (var i = 0; i < items.length; i++)\r\n\t\t\tthis.onItemRemoved (items[i], 0);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tSorts the collection. A comparison function should be provided, or the name of a property to sort by.\r\n\t**\r\n\t**\tObject sort (fn: Function)\r\n\t**\tObject sort (prop: string, [desc:bool=false])\r\n\t*/\r\n\tsort: function (fn, desc)\r\n\t{\r\n\t\tif (typeof(fn) != \"function\")\r\n\t\t{\r\n\t\t\tthis.items.sort(function(a, b)\r\n\t\t\t{\r\n\t\t\t\treturn (a[fn] <= b[fn] ? -1 : 1) * (desc === true ? -1 : 1);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse\r\n\t\t\tthis.items.sort(fn);\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tSearches for an item with the specified fields and returns it. The \"inc\" object is the \"inclusive\" map, meaning all fields must match\r\n\t**\tand the optional \"exc\" is the exclusive map, meaning not even one field should match.\r\n\t**\r\n\t**\tObject findItem (inc: Object, exc: Object);\r\n\t*/\t\r\n\tfindItem: function (inc, exc)\r\n\t{\r\n\t\tif (!this.items) return null;\r\n\r\n\t\tfor (var i = 0; i < this.items.length; i++)\r\n\t\t{\r\n\t\t\tif (exc && Rin.partialCompare(this.items[i], exc))\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\tif (Rin.partialCompare(this.items[i], inc))\r\n\t\t\t\treturn this.items[i];\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the container array.\r\n\t*/\r\n\tgetItems: function ()\r\n\t{\r\n\t\treturn this.items;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the number of items in the collection.\r\n\t*/\r\n\tcount: function ()\r\n\t{\r\n\t\treturn this.items.length;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns true if the collection is empty.\r\n\t*/\r\n\tisEmpty: function ()\r\n\t{\r\n\t\treturn !this.items.length;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the index of the specified item, or -1 if not found.\r\n\t*/\r\n\tindexOf: function (item)\r\n\t{\r\n\t\treturn this.items.indexOf(item);\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the item at the specified index, or null if not found. When `relative` is true, negative offsets are allowed such that -1 refers to the last item.\r\n\t*/\r\n\tgetAt: function (index, relative=false)\r\n\t{\r\n\t\tif (index < 0 && relative == true)\r\n\t\t\tindex += this.items.length;\r\n\r\n\t\treturn index >= 0 && index < this.items.length ? this.items[index] : null;\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the first item in the collection.\r\n\t*/\r\n\tfirst: function ()\r\n\t{\r\n\t\treturn this.getAt(0);\r\n\t},\r\n\r\n\t/*\r\n\t**\tReturns the last item in the collection.\r\n\t*/\r\n\tlast: function ()\r\n\t{\r\n\t\treturn this.getAt(-1, true);\r\n\t},\r\n\r\n\t/*\r\n\t**\tAdds an item at the specified index, effectively moving the remaining items to the right.\r\n\t*/\r\n\taddAt: function (index, item)\r\n\t{\r\n\t\tif (!item || !this.onBeforeItemAdded (item))\r\n\t\t\treturn this;\r\n\r\n\t\tif (index < 0) index = 0;\r\n\t\tif (index > this.items.length) index = this.items.length;\r\n\r\n\t\tif (index == 0)\r\n\t\t{\r\n\t\t\tthis.items.unshift(item);\r\n\t\t}\r\n\t\telse if (index == this.items.length)\r\n\t\t{\r\n\t\t\tthis.items.push(item);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tvar tmp = this.items.splice(0, index);\r\n\t\t\ttmp.push(item);\r\n\r\n\t\t\tthis.items = tmp.concat(this.items);\r\n\t\t}\r\n\r\n\t\tthis.onItemAdded (item);\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tAdds an item to the start of the collection, onBeforeItemAdded and onItemAdded will be triggered.\r\n\t*/\r\n\tunshift: function (item)\r\n\t{\r\n\t\treturn this.addAt(0, item);\r\n\t},\r\n\r\n\t/*\r\n\t**\tAdds an item to the end of the collection, onBeforeItemAdded and onItemAdded will be triggered.\r\n\t*/\r\n\tpush: function (item)\r\n\t{\r\n\t\treturn this.addAt(this.items.length, item);\r\n\t},\r\n\r\n\t/*\r\n\t**\tAdds an item to the end of the collection, onBeforeItemAdded and onItemAdded will be triggered.\r\n\t*/\r\n\tadd: function (item)\r\n\t{\r\n\t\treturn this.push(item);\r\n\t},\r\n\r\n\t/*\r\n\t**\tRemoves the item at the specified index. When `relative` is true, negative offsets are allowed such that -1 refers to the last item.\r\n\t*/\r\n\tremoveAt: function (index, relative=false)\r\n\t{\r\n\t\tif (index < 0 && relative == true)\r\n\t\t\tindex += this.items.length;\r\n\r\n\t\tif (index < 0 || index >= this.items.length)\r\n\t\t\treturn null;\r\n\r\n\t\tvar item = this.items[index];\r\n\t\tthis.items.splice (index, 1);\r\n\t\tthis.onItemRemoved (item, index);\r\n\r\n\t\treturn item;\r\n\t},\r\n\r\n\t/*\r\n\t**\tRemoves an item from the end of the collection.\r\n\t*/\r\n\tpop: function (item)\r\n\t{\r\n\t\treturn this.removeAt(-1, true);\r\n\t},\r\n\r\n\t/*\r\n\t**\tRemoves an item from the start of the collection.\r\n\t*/\r\n\tshift: function (item)\r\n\t{\r\n\t\treturn this.removeAt(0);\r\n\t},\r\n\r\n\t/*\r\n\t**\tRemoves the specified item from the collection.\r\n\t*/\r\n\tremove: function (item)\r\n\t{\r\n\t\treturn this.removeAt (this.indexOf(item));\r\n\t},\r\n\r\n\t/*\r\n\t**\tRuns the specified callback for each of the items in the collection, if false is returned by the callback this function\r\n\t**\twill exit immediately. Parameters to the callback are: (item, index, collection).\r\n\t*/\r\n\tforEach: function (callback)\r\n\t{\r\n\t\tif (this.isEmpty())\r\n\t\t\treturn this;\r\n\r\n\t\tfor (var i = 0; i < this.items.length; i++)\r\n\t\t\tif (callback (this.items[i], i, this) === false) break;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tExecutes a method call with the specified parameters on each of the items in the collection, if false is returned by the\r\n\t**\titem's method this function will exit immediately.\r\n\t*/\r\n\tforEachCall: function (method, ...args)\r\n\t{\r\n\t\tif (this.isEmpty())\r\n\t\t\treturn this;\r\n\r\n\t\tfor (var i = 0; i < this.items.length; i++)\r\n\t\t\tif (this.items[i][method] (...args) === false) break;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tExactly the same as forEach but in reverse order.\r\n\t*/\r\n\tforEachRev: function (callback)\r\n\t{\r\n\t\tif (this.isEmpty())\r\n\t\t\treturn this;\r\n\r\n\t\tfor (var i = this.items.length-1; i >= 0; i--)\r\n\t\t\tif (callback (this.items[i], i, this) === false) break;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tExactly the same as forEachCall but in reverse order.\r\n\t*/\r\n\tforEachRevCall: function (method, ...args)\r\n\t{\r\n\t\tif (this.isEmpty())\r\n\t\t\treturn this;\r\n\r\n\t\tfor (var i = this.items.length-1; i >= 0; i--)\r\n\t\t\tif (this.items[i][method] (...args) === false) break;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\t/*\r\n\t**\tHandler for the beforeItemAdded event. If returns false the item will not be added.\r\n\t*/\r\n\tonBeforeItemAdded: function (item)\r\n\t{\r\n\t\treturn true;\r\n\t},\r\n\r\n\t/*\r\n\t**\tHandler for the itemAdded event.\r\n\t*/\r\n\tonItemAdded: function (item)\r\n\t{\r\n\t},\r\n\r\n\t/*\r\n\t**\tHandler for the itemRemoved event.\r\n\t*/\r\n\tonItemRemoved: function (item)\r\n\t{\r\n\t}\r\n});\r\n","/*\n**\trin/template\n**\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\n**\thttps://www.rsthn.com/\n**\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nlet Rin = require('./alpha');\n\n/**\n**\tTemplating module. The template formats available are shown below, note that the sym-open and sym-close symbols are by\n**\tdefault the square brackets, however those can be modified since are just parameters.\n**\n**\tHTML Escaped Output:\t\t\t[data.value]\t\t\t\t\tEscapes HTML characters from the output.\n**\tRaw Output:\t\t\t\t\t\t[!data.value]\t\t\t\t\tDoes not escape HTML characters from the output (used to output direct HTML).\n**\tDouble-Quoted Escaped Output:\t[data.value]\t\t\t\t\tEscapes HTML characters and surrounds with double quotes.\n**\tImmediate Reparse:\t\t\t\t[<....] [@....] \"...\" '...'\t\tReparses the contents as if parseTemplate() was called again.\n**\tImmediate Output:\t\t\t\t[:...]\t\t\t\t\t\t\tTakes the contents and outputs exactly as-is without format and optionally surrounded by the\n**\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsym-open and sym-close symbols when the first character is not '<', sym_open or space.\n**\tFiltered Output:\t\t\t\t[functionName ... <expr> ...]\tRuns a function call, 'expr' can be any of the allowed formats shown here (nested if desired),\n**\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfunctionName should map to one of the available expression functions registered in the\n**\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tRin.Template.functions map, each of which have their own parameters.\n*/\n\nlet Template = module.exports =\n{\n\t/*\n\t**\tStrict mode flag. When set, any undefined expression function will trigger an exception.\n\t*/\n\tstrict: false,\n\n\t/**\n\t**\tParses a template and returns the compiled 'parts' structure to be used by the 'expand' method.\n\t**\n\t**\t>> array parseTemplate (string template, char sym_open, char sym_close, bool is_tpl=false);\n\t*/\n\tparseTemplate: function (template, sym_open, sym_close, is_tpl=false, root=1)\n\t{\n\t\tlet nflush = 'string', flush = null, state = 0, count = 0;\n\t\tlet str = '', parts = [], mparts = parts, nparts = false;\n\n\t\tif (is_tpl === true)\n\t\t{\n\t\t\ttemplate = template.trim();\n\t\t\tnflush = 'identifier';\n\t\t\tstate = 10;\n\n\t\t\tmparts.push(parts = []);\n\t\t}\n\n\t\ttemplate += \"\\0\";\n\n\t\tfunction unescape (value)\n\t\t{\n\t\t\tif (typeof(value) == 'object')\n\t\t\t{\n\t\t\t\tif (value instanceof Array)\n\t\t\t\t{\n\t\t\t\t\tfor (let i = 0; i < value.length; i++)\n\t\t\t\t\t\tunescape(value[i]);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tvalue.data = unescape(value.data);\n\t\t\t\t}\n\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < value.length; i++)\n\t\t\t{\n\t\t\t\tif (value[i] == '\\\\')\n\t\t\t\t{\n\t\t\t\t\tlet r = value[i+1];\n\n\t\t\t\t\tswitch (r)\n\t\t\t\t\t{\n\t\t\t\t\t\tcase 'n': r = \"\\n\"; break;\n\t\t\t\t\t\tcase 'r': r = \"\\r\"; break;\n\t\t\t\t\t\tcase 'f': r = \"\\f\"; break;\n\t\t\t\t\t\tcase 'v': r = \"\\v\"; break;\n\t\t\t\t\t\tcase 't': r = \"\\t\"; break;\n\t\t\t\t\t\tcase 's': r = \"\\s\"; break;\n\t\t\t\t\t\tcase '\"': r = \"\\\"\"; break;\n\t\t\t\t\t\tcase \"'\": r = \"\\'\"; break;\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = value.substr(0, i) + r + value.substr(i+2);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn value;\n\t\t}\n\n\t\tfunction emit (type, data)\n\t\t{\n\t\t\tif (type == 'template')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data, sym_open, sym_close, true, 0);\n\t\t\t}\n\t\t\telse if (type == 'parse')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data, sym_open, sym_close, false, 0);\n\t\t\t\ttype = 'base-string';\n\n\t\t\t\tif (Rin.typeOf(data) == 'array')\n\t\t\t\t{\n\t\t\t\t\ttype = data[0].type;\n\t\t\t\t\tdata = data[0].data;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (type == 'parse-trim-merge')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data.trim().split('\\n').map(i => i.trim()).join(\"\\n\"), sym_open, sym_close, false, 0);\n\t\t\t}\n\t\t\telse if (type == 'parse-merge')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data, sym_open, sym_close, false, 0);\n\t\t\t}\n\t\t\telse if (type == 'parse-merge-alt')\n\t\t\t{\n\t\t\t\tdata = Template.parseTemplate (data, '{', '}', false, 0);\n\t\t\t}\n\n\t\t\tif (type == 'parse-merge' || type == 'parse-merge-alt' || type == 'parse-trim-merge')\n\t\t\t{\n\t\t\t\tfor (let i = 0; i < data.length; i++)\n\t\t\t\t{\n\t\t\t\t\tparts.push(data[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t\tparts.push({ type: type, data: data });\n\n\t\t\tif (nparts)\n\t\t\t{\n\t\t\t\tmparts.push(parts = []);\n\t\t\t\tnparts = false;\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < template.length; i++)\n\t\t{\n\t\t\tif (template[i] == '\\\\')\n\t\t\t{\n\t\t\t\tstr += '\\\\';\n\t\t\t\tstr += template[++i];\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tswitch (state)\n\t\t\t{\n\t\t\t\tcase 0:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == '<')\n\t\t\t\t\t{\n\t\t\t\t\t\tstate = 1; count = 1;\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t\tnflush = 'parse-merge';\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == '@')\n\t\t\t\t\t{\n\t\t\t\t\t\tstate = 1; count = 1;\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t\tnflush = 'parse-trim-merge';\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == ':')\n\t\t\t\t\t{\n\t\t\t\t\t\tstate = 12; count = 1;\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t\tnflush = 'string';\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tstate = 1; count = 1;\n\t\t\t\t\t\tflush = 'string';\n\t\t\t\t\t\tnflush = 'template';\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tstr += template[i];\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\n\t\t\t\tcase 1:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (template[i] == sym_close)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + sym_close);\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 0;\n\t\t\t\t\t\t\tflush = nflush;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 10:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tflush = nflush;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == '.')\n\t\t\t\t\t{\n\t\t\t\t\t\temit (nflush, str);\n\t\t\t\t\t\temit ('access', '.');\n\n\t\t\t\t\t\tnflush = 'identifier';\n\t\t\t\t\t\tstr = '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i].match(/[\\t\\n\\r\\f\\v ]/) != null)\n\t\t\t\t\t{\n\t\t\t\t\t\tflush = nflush;\n\t\t\t\t\t\tnflush = 'identifier';\n\t\t\t\t\t\tnparts = true;\n\n\t\t\t\t\t\twhile (template[i].match(/[\\t\\n\\r\\f\\v ]/) != null) i++;\n\t\t\t\t\t\ti--;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == '<')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 11; count = 1; nflush = 'parse-merge';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == '@')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 11; count = 1; nflush = 'parse-trim-merge';\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == '\"')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 14; count = 1; nflush = 'parse-merge';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == '\\'')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 15; count = 1; nflush = 'parse-merge';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == '`')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 16; count = 1; nflush = 'parse-merge-alt';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open && template[i+1] == ':')\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) flush = nflush;\n\t\t\t\t\t\tstate = 13; count = 1; nflush = 'string';\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (str) emit (nflush, str);\n\t\t\t\t\t\tstate = 11; count = 1; str = ''; nflush = 'parse';\n\t\t\t\t\t\tstr += template[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (nflush != 'identifier')\n\t\t\t\t\t{\n\t\t\t\t\t\temit (nflush, str);\n\t\t\t\t\t\tstr = '';\n\t\t\t\t\t\tnflush = 'identifier';\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\t\n\t\t\t\tcase 11:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\n\t\t\t\t\tif (template[i] == sym_close)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + sym_close);\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 10;\n\t\n\t\t\t\t\t\t\tif (nflush == 'parse-merge' || nflush == 'parse-merge-alt' || nflush == 'parse-trim-merge')\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 12:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\n\t\t\t\t\tif (template[i] == sym_close)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + sym_close);\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (str.length != 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (!(str[0] == '<' || str[0] == '[' || str[0] == ' '))\n\t\t\t\t\t\t\t\t\tstr = sym_open + str + sym_close;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tstate = 0;\n\t\t\t\t\t\t\tflush = nflush;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 13:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\n\t\t\t\t\tif (template[i] == sym_close)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + sym_close);\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!(str[0] == '<' || str[0] == '[' || str[0] == ' '))\n\t\t\t\t\t\t\t\tstr = sym_open + str + sym_close;\n\n\t\t\t\t\t\t\tstate = 10;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (template[i] == sym_open)\n\t\t\t\t\t{\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 14:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (template[i] == '\"')\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + '\"');\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 10;\n\t\n\t\t\t\t\t\t\tif (nflush == 'parse-merge' || nflush == 'parse-merge-alt' || nflush == 'parse-trim-merge')\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 15:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (template[i] == '\\'')\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + '\\'');\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 10;\n\t\n\t\t\t\t\t\t\tif (nflush == 'parse-merge' || nflush == 'parse-merge-alt' || nflush == 'parse-trim-merge')\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 16:\n\t\t\t\t\tif (template[i] == '\\0')\n\t\t\t\t\t{\n\t\t\t\t\t\tthrow new Error (\"Parse error: Unexpected end of template\");\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (template[i] == '`')\n\t\t\t\t\t{\n\t\t\t\t\t\tcount--;\n\t\n\t\t\t\t\t\tif (count < 0)\n\t\t\t\t\t\t\tthrow new Error (\"Parse error: Unmatched \" + '`');\n\n\t\t\t\t\t\tif (count == 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstate = 10;\n\t\n\t\t\t\t\t\t\tif (nflush == 'parse-merge' || nflush == 'parse-merge-alt' || nflush == 'parse-trim-merge')\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += template[i];\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (flush)\n\t\t\t{\n\t\t\t\temit (flush, str);\n\t\t\t\tflush = str = '';\n\t\t\t}\n\t\t}\n\n\t\tif (!is_tpl)\n\t\t{\n\t\t\tlet i = 0;\n\t\t\twhile (i < mparts.length)\n\t\t\t{\n\t\t\t\tif (mparts[i].type == 'string' && mparts[i].data == '')\n\t\t\t\t\tmparts.splice(i, 1);\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\ti = mparts.length-1;\n\t\t\twhile (i > 0)\n\t\t\t{\n\t\t\t\tif (mparts[i].type == 'string' && mparts[i].data == '')\n\t\t\t\t\tmparts.splice(i--, 1);\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (mparts.length == 0)\n\t\t\t\tmparts.push({ type: 'string', data: '' });\n\t\t}\n\n\t\tif (root)\n\t\t\tunescape(mparts);\n\n\t\treturn mparts;\n\t},\n\n\t/**\n\t**\tParses a template and returns the compiled 'parts' structure to be used by the 'expand' method. This\n\t**\tversion assumes the sym_open and sym_close chars are [ and ] respectively.\n\t**\n\t**\t>> array parse (string template);\n\t*/\n\tparse: function (template)\n\t{\n\t\treturn this.parseTemplate(template.trim(), '[', ']', false);\n\t},\n\n\t/**\n\t**\tExpands a template using the given data object, ret can be set to 'text' or 'obj' allowing to expand the template as\n\t**\ta string (text) or an array of objects (obj) respectively. If none provided it will be expanded as text.\n\t**\n\t**\t>> string/array expand (array parts, object data, string ret='text', string mode='base-string');\n\t*/\n\texpand: function (parts, data, ret='text', mode='base-string')\n\t{\n\t\tlet s = [];\n\n\t\t// Expand variable parts.\n\t\tif (mode == 'var')\n\t\t{\n\t\t\tlet escape = true;\n\t\t\tlet quote = false;\n\n\t\t\tlet root = data;\n\t\t\tlet last = null;\n\t\t\tlet first = true;\n\t\t\tlet str = '';\n\n\t\t\tfor (let i = 0; i < parts.length && data != null; i++)\n\t\t\t{\n\t\t\t\tswitch (parts[i].type)\n\t\t\t\t{\n\t\t\t\t\tcase 'identifier':\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tstr += parts[i].data;\n\t\t\t\t\t\tlast = null;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'template':\n\t\t\t\t\t\tlast = this.expand(parts[i].data, root, 'arg', 'template');\n\t\t\t\t\t\tstr += typeof(last) != 'object' ? last : '';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'base-string':\n\t\t\t\t\t\tstr += this.expand(parts[i].data, root, 'arg', 'base-string');\n\t\t\t\t\t\tlast = null;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'access':\n\t\t\t\t\t\tif (!last || typeof(last) != 'object')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!str) str = 'this';\n\n\t\t\t\t\t\t\twhile (true)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (str[0] == '!')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\t\t\t\t\tescape = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (str[0] == '$')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\t\t\t\t\tquote = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (str != 'this' && data != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlet tmp = data;\n\t\t\t\t\t\t\t\tdata = (str in data) ? data[str] : null;\n\n\t\t\t\t\t\t\t\tif (data === null && first)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (str in Template.functions)\n\t\t\t\t\t\t\t\t\t\tdata = Template.functions[str] (null, null, tmp);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfirst = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tdata = last;\n\n\t\t\t\t\t\tstr = '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (str != '')\n\t\t\t{\n\t\t\t\tif (str[0] == '!')\n\t\t\t\t{\n\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\tescape = false;\n\t\t\t\t}\n\t\t\t\telse if (str[0] == '$')\n\t\t\t\t{\n\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\tquote = true;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (str != 'this')\n\t\t\t{\n\t\t\t\tlet failed = false;\n\n\t\t\t\tif (data != null)\n\t\t\t\t{\n\t\t\t\t\tif (!(str in data))\n\t\t\t\t\t{\n\t\t\t\t\t\tfailed = true;\n\t\t\t\t\t\tdata = null;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tdata = data[str];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tfailed = true;\n\n\t\t\t\tif (failed && parts.length == 1)\n\t\t\t\t{\n\t\t\t\t\tif (Template.strict == true)\n\t\t\t\t\t\tthrow new Error ('Expression function `'+str+'` not found.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (typeof(data) == 'string')\n\t\t\t{\n\t\t\t\tif (escape)\n\t\t\t\t\tdata = data.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n\n\t\t\t\tif (quote)\n\t\t\t\t\tdata = '\"' + data + '\"';\n\t\t\t}\n\n\t\t\ts.push(data);\n\t\t}\n\n\t\t// Expand variable parts and returns a reference to it.\n\t\tif (ret == 'varref')\n\t\t{\n\t\t\tlet root = data;\n\t\t\tlet last = null;\n\t\t\tlet first = true;\n\t\t\tlet str = '';\n\n\t\t\tfor (let i = 0; i < parts.length && data != null; i++)\n\t\t\t{\n\t\t\t\tswitch (parts[i].type)\n\t\t\t\t{\n\t\t\t\t\tcase 'identifier':\n\t\t\t\t\tcase 'string':\n\t\t\t\t\t\tstr += parts[i].data;\n\t\t\t\t\t\tlast = null;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'template':\n\t\t\t\t\t\tlast = this.expand(parts[i].data, root, 'arg', 'template');\n\t\t\t\t\t\tstr += typeof(last) != 'object' ? last : '';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'base-string':\n\t\t\t\t\t\tstr += this.expand(parts[i].data, root, 'arg', 'base-string');\n\t\t\t\t\t\tlast = null;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'access':\n\t\t\t\t\t\tif (!last || typeof(last) != 'object')\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif (!str) str = 'this';\n\n\t\t\t\t\t\t\twhile (true)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tif (str[0] == '!')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (str[0] == '$')\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (str != 'this' && data != null)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlet tmp = data;\n\t\t\t\t\t\t\t\tdata = (str in data) ? data[str] : null;\n\n\t\t\t\t\t\t\t\tif (data === null && first)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tif (str in Template.functions)\n\t\t\t\t\t\t\t\t\t\tdata = Template.functions[str] (null, null, tmp);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfirst = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tdata = last;\n\n\t\t\t\t\t\tstr = '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twhile (str != '')\n\t\t\t{\n\t\t\t\tif (str[0] == '!')\n\t\t\t\t{\n\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t}\n\t\t\t\telse if (str[0] == '$')\n\t\t\t\t{\n\t\t\t\t\tstr = str.substr(1);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\treturn str != 'this' ? [data, str] : null;\n\t\t}\n\n\t\t// Expand function parts.\n\t\tif (mode == 'fn')\n\t\t{\n\t\t\tvar args = [];\n\n\t\t\targs.push(Template.expand(parts[0], data, 'text', 'base-string'));\n\n\t\t\tif ('_'+args[0] in Template.functions)\n\t\t\t\targs[0] = '_'+args[0];\n\n\t\t\tif (!(args[0] in Template.functions))\n\t\t\t{\n\t\t\t\tif (Template.strict == true)\n\t\t\t\t\tthrow new Error ('Expression function `'+args[0]+'` not found.');\n\n\t\t\t\treturn `(Unknown: ${args[0]})`;\n\t\t\t}\n\n\t\t\tif (args[0][0] == '_')\n\t\t\t\treturn Template.functions[args[0]] (parts, data);\n\n\t\t\tfor (let i = 1; i < parts.length; i++)\n\t\t\t\targs.push(Template.expand(parts[i], data, 'arg', 'base-string'));\n\n\t\t\ts.push(Template.functions[args[0]] (args, parts, data));\n\t\t}\n\n\t\t// Template mode.\n\t\tif (mode == 'template')\n\t\t{\n\t\t\tif (parts.length == 1)\n\t\t\t{\n\t\t\t\tif (parts[0].length == 1 && parts[0][0].type == 'string')\n\t\t\t\t\treturn parts[0][0].data;\n\n\t\t\t\tif (parts[0].length == 1 && parts[0][0].type == 'identifier')\n\t\t\t\t{\n\t\t\t\t\tlet name = parts[0][0].data;\n\n\t\t\t\t\tif (name in Template.functions || '_'+name in Template.functions)\n\t\t\t\t\t\treturn Template.expand(parts, data, ret, 'fn');\n\t\t\t\t}\n\t\n\t\t\t\treturn Template.expand(parts[0], data, ret, 'var');\n\t\t\t}\n\n\t\t\treturn Template.expand(parts, data, ret, 'fn');\n\t\t}\n\n\t\t// Expand parts.\n\t\tif (mode == 'base-string')\n\t\t{\n\t\t\tlet index = -1;\n\n\t\t\tfor (let i of parts)\n\t\t\t{\n\t\t\t\tlet tmp = null;\n\t\t\t\tindex++;\n\n\t\t\t\tswitch (i.type)\n\t\t\t\t{\n\t\t\t\t\tcase 'template':\n\t\t\t\t\t\ttmp = Template.expand(i.data, data, ret, 'template');\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'string': case 'identifier':\n\t\t\t\t\t\ttmp = i.data;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'base-string':\n\t\t\t\t\t\ttmp = Template.expand(i.data, data, ret, 'base-string');\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (ret == 'void')\n\t\t\t\t\tcontinue;\n\n\t\t\t\tif (ret == 'last' && index != parts.length-1)\n\t\t\t\t\tcontinue;\n\n\t\t\t\ts.push(tmp);\n\t\t\t}\n\t\t}\n\n\t\t// Return types for direct objects.\n\t\tif (ret == 'obj') return s;\n\n\t\tif (ret == 'last')\n\t\t{\n\t\t\tif (typeOf(s) == 'Rose\\\\Arry')\n\t\t\t\ts = s[0];\n\n\t\t\treturn s;\n\t\t}\n\n\t\t// When the output is not really needed.\n\t\tif (ret == 'void') return null;\n\n\t\t// Return as argument ('object' if only one, or string if more than one), that is, the first item in the result.\n\t\tif (ret == 'arg')\n\t\t{\n\t\t\tif (Rin.typeOf(s) == 'array')\n\t\t\t{\n\t\t\t\tif (s.length != 1)\n\t\t\t\t\treturn s.join('');\n\n\t\t\t\treturn s[0];\n\t\t\t}\n\n\t\t\treturn s;\n\t\t}\n\n\t\tif (ret == 'text' && Rin.typeOf(s) == 'array')\n\t\t{\n\t\t\tlet f = (e => e != null && typeof(e) == 'object' ? ('map' in e ? e.map(f).join('') : ('join' in e ? e.join('') : e.toString())) : e);\n\t\t\ts = s.map(f).join('');\n\t\t}\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tParses the given template and returns a function that when called with an object will expand the template.\n\t**\n\t**\t>> object compile (string template);\n\t*/\n\tcompile: function (template)\n\t{\n\t\ttemplate = Template.parse(template);\n\n\t\treturn function (data=null, mode='text') {\n\t\t\treturn Template.expand(template, data ? data : { }, mode);\n\t\t};\n\t},\n\n\t/**\n\t**\tParses and expands the given template immediately.\n\t**\n\t**\t>> object eval (string template, object data, string mode='text');\n\t*/\n\teval: function (template, data=null, mode='text')\n\t{\n\t\ttemplate = Template.parse(template);\n\t\treturn Template.expand(template, data ? data : { }, mode);\n\t},\n\n\t/**\n\t**\tExpands the template as 'arg' and returns the result.\n\t**\n\t**\t>> object value (string parts, object data);\n\t*/\n\tvalue: function (parts, data=null)\n\t{\n\t\treturn Rin.typeOf(parts) != 'array' ? parts : Template.expand(parts, data ? data : { }, 'arg');\n\t},\n\n\t/**\n\t**\tRegisters an expression function.\n\t**\n\t**\t>> object register (string name, function fn);\n\t*/\n\tregister: function (name, fn)\n\t{\n\t\tTemplate.functions[name] = fn;\n\t},\n\n\t/**\n\t**\tCalls an expression function.\n\t**\n\t**\t>> object call (string name, object args, object data);\n\t*/\n\t'call': function (name, args, data=null)\n\t{\n\t\tif (name in Template.functions)\n\t\t\treturn Template.functions[name] (args, null, data);\n\n\t\treturn null;\n\t},\n\n\t/**\n\t**\tReturns a map given a 'parts' array having values of the form \"name: value\" or \":name value\".\n\t**\n\t**\t>> Map getNamedValues (array parts, object data, int i=1, bool expanded=true);\n\t*/\n\tgetNamedValues: function (parts, data, i=1, expanded=true)\n\t{\n\t\tlet s = { };\n\t\tlet mode = 0;\n\t\n\t\tfor (; i < parts.length; i += 2)\n\t\t{\n\t\t\tlet key = Template.expand(parts[i], data, 'arg');\n\n\t\t\tif (!mode) {\n\t\t\t\tif (key.startsWith(':')) mode = 1; else mode = key.endsWith(':') ? 2 : 3;\n\t\t\t}\n\n\t\t\tif (mode == 1)\n\t\t\t\tkey = key.substr(1);\n\t\t\telse if (mode == 2)\n\t\t\t\tkey = key.substr(0, key.length-1);\n\n\t\t\tif (expanded)\n\t\t\t\ts[key] = Template.expand(parts[i+1], data, 'arg');\n\t\t\telse\n\t\t\t\ts[key] = parts[i+1];\n\t\t}\n\n\t\treturn s;\n\t}\n};\n\n\n/**\n**\tTemplate functions, functions that are used to format data. Each function takes three parameters (args, parts and data). By default the function arguments\n**\tare expanded and passed via 'args' for convenience, however if the function name starts with '_' the 'args' parameter will be skipped and only (parts, data)\n**\twill be available, each 'part' must be expanded manually by calling Template.expand.\n*/\n\nTemplate.functions =\n{\n\t/**\n\t**\tExpression functions.\n\t*/\n\t'null': function(args) { return null; },\n\t'true': function(args) { return true; },\n\t'false': function(args) { return false; },\n\n\t'len': function(args) { return args[1].toString().length; },\n\t'int': function(args) { return ~~args[1]; },\n\t'str': function(args) { return args[1].toString(); },\n\t'float': function(args) { return parseFloat(args[1]); },\n\t'chr': function(args) { return String.fromCharCode(args[1]); },\n\t'ord': function(args) { return args[1].toString().charCodeAt(0); },\n\n\t'not': function(args) { return !args[1]; },\n\t'neg': function(args) { return -args[1]; },\n\t'abs': function(args) { return Math.abs(args[1]); },\n\n\t'and': function(args) { for (let i = 1; i < args.length; i++) if (!args[i]) return false; return true; },\n\t'or': function(args) { for (let i = 1; i < args.length; i++) if (~~args[i]) return true; return false; },\n\n\t'eq': function(args) { return args[1] == args[2]; },\n\t'ne': function(args) { return args[1] != args[2]; },\n\t'lt': function(args) { return args[1] < args[2]; },\n\t'le': function(args) { return args[1] <= args[2]; },\n\t'gt': function(args) { return args[1] > args[2]; },\n\t'ge': function(args) { return args[1] >= args[2]; },\n\t'isnotnull': function(args) { return !!args[1]; },\n\t'isnull': function(args) { return !args[1]; },\n\t'iszero': function(args) { return parseInt(args[1]) == 0; },\n\n\t'eq?': function(args) { return args[1] == args[2]; },\n\t'ne?': function(args) { return args[1] != args[2]; },\n\t'lt?': function(args) { return args[1] < args[2]; },\n\t'le?': function(args) { return args[1] <= args[2]; },\n\t'gt?': function(args) { return args[1] > args[2]; },\n\t'ge?': function(args) { return args[1] >= args[2]; },\n\t'notnull?': function(args) { return !!args[1]; },\n\t'null?': function(args) { return !args[1]; },\n\t'zero?': function(args) { return parseInt(args[1]) == 0; },\n\n\t'typeof': function(args) { return Rin.typeOf(args[1]); },\n\n\t'*': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x *= args[i]; return x; },\n\t'mul': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x *= args[i]; return x; },\n\t'/': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x /= args[i]; return x; },\n\t'div': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x /= args[i]; return x; },\n\t'+': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x -= -args[i]; return x; },\n\t'sum': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x -= -args[i]; return x; },\n\t'-': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x -= args[i]; return x; },\n\t'sub': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x -= args[i]; return x; },\n\t'mod': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x %= args[i]; return x; },\n\t'**': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x = Math.pow(x, args[i]); return x; },\n\t'pow': function(args) { let x = args[1]; for (let i = 2; i < args.length; i++) x = Math.pow(x, args[i]); return x; },\n\n\t/**\n\t**\tReturns the JSON representation of the expression.\n\t**\n\t**\tjson <expr>\n\t*/\n\t'json': function (args)\n\t{\n\t\treturn JSON.stringify(args[1]);\n\t},\n\n\t/**\n\t**\tSets one or more variables in the data context.\n\t**\n\t**\tset <var-name> <expr> [<var-name> <expr>]*\n\t*/\n\t'_set': function (parts, data)\n\t{\n\t\tfor (let i = 1; i+1 < parts.length; i += 2)\n\t\t{\n\t\t\tlet value = Template.value(parts[i+1], data);\n\n\t\t\tif (parts[i].length > 1)\n\t\t\t{\n\t\t\t\tlet ref = Template.expand(parts[i], data, 'varref');\n\t\t\t\tif (ref != null) ref[0][ref[1]] = value;\n\t\t\t}\n\t\t\telse\n\t\t\t\tdata[Template.value(parts[i], data)] = value;\n\t\t}\n\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tRemoves one or more variables from the data context.\n\t**\n\t**\tunset <var-name> [<var-name>]*\n\t*/\n\t'_unset': function (parts, data)\n\t{\n\t\tfor (let i = 1; i < parts.length; i++)\n\t\t{\n\t\t\tif (parts[i].length > 1)\n\t\t\t{\n\t\t\t\tlet ref = Template.expand(parts[i], data, 'varref');\n\t\t\t\tif (ref != null) delete ref[0][ref[1]];\n\t\t\t}\n\t\t\telse\n\t\t\t\tdelete data[Template.value(parts[i], data)];\n\t\t}\n\n\t\treturn null;\n\t},\n\n\n\t/**\n\t**\tReturns the expression without white-space on the left or right. The expression can be a string or an array.\n\t**\n\t**\ttrim <expr>\n\t*/\n\t'trim': function (args)\n\t{\n\t\treturn args[1] ? (typeof(args[1]) == \"object\" ? args[1].map(e => e.trim()) : args[1].trim()) : '';\n\t},\n\n\t/**\n\t**\tReturns the expression in uppercase. The expression can be a string or an array.\n\t**\n\t**\tupper <expr>\n\t*/\n\t'upper': function (args)\n\t{\n\t\treturn args[1] ? (typeof(args[1]) == \"object\" ? args[1].map(e => e.toUpperCase()) : args[1].toUpperCase()) : '';\n\t},\n\n\t/**\n\t**\tReturns the expression in lower. The expression can be a string or an array.\n\t**\n\t**\tlower <expr>\n\t*/\n\t'lower': function (args)\n\t{\n\t\treturn args[1] ? (typeof(args[1]) == \"object\" ? args[1].map(e => e.toLowerCase()) : args[1].toLowerCase()) : '';\n\t},\n\n\t/**\n\t**\tReturns a sub-string of the given string.\n\t**\n\t**\tsubstr <start> <count> <string>\n\t**\tsubstr <start> <string>\n\t*/\n\t'substr': function (args)\n\t{\n\t\tlet s = args[args.length-1].toString();\n\n\t\tlet start = 0;\n\t\tlet count = null;\n\n\t\tif (args.length == 4)\n\t\t{\n\t\t\tstart = ~~(args[1]);\n\t\t\tcount = ~~(args[2]);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tstart = ~~(args[1]);\n\t\t\tcount = null;\n\t\t}\n\n\t\tif (start < 0) start += s.length;\n\t\tif (count < 0) count += s.length;\n\n\t\tif (count === null)\n\t\t\tcount = s.length - start;\n\n\t\treturn s.substr(start, count);\n\t},\n\n\t/**\n\t**\tReplaces a matching string with the given replacement string in a given text.\n\t**\n\t**\treplace <search> <replacement> <text>\n\t*/\n\t'replace': function (args)\n\t{\n\t\treturn args[3].split(args[1]).join(args[2]);\n\t},\n\n\t/**\n\t**\tConverts all new-line chars in the expression to <br/>, the expression can be a string or an array.\n\t**\n\t**\tnl2br <expr>\n\t*/\n\t'nl2br': function (args)\n\t{\n\t\treturn args[1] ? (typeof(args[1]) == \"object\" ? args[1].map(e => e.replace(/\\n/g, \"<br/>\")) : args[1].replace(/\\n/g, \"<br/>\")) : '';\n\t},\n\n\t/**\n\t**\tReturns the expression inside an XML tag named 'tag-name', the expression can be a string or an array.\n\t**\n\t**\t% <tag-name> <expr>\n\t*/\n\t'%': function (args)\n\t{\n\t\targs.shift();\n\t\tvar name = args.shift();\n\n\t\tlet s = '';\n\n\t\tfor (let i = 0; i < args.length; i++)\n\t\t{\n\t\t\tif (Rin.typeOf(args[i]) == 'array')\n\t\t\t{\n\t\t\t\ts += `<${name}>`;\n\t\t\t\t\n\t\t\t\tfor (let j = 0; j < args[i].length; j++)\n\t\t\t\t\ts += args[i][j];\n\n\t\t\t\ts += `</${name}>`;\n\t\t\t}\n\t\t\telse\n\t\t\t\ts += `<${name}>${args[i]}</${name}>`;\n\t\t}\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tReturns the expression inside an XML tag named 'tag-name', attributes are supported.\n\t**\n\t**\t%% <tag-name> [<attr> <value>]* [<content>]\n\t*/\n\t'%%': function (args)\n\t{\n\t\targs.shift();\n\t\tvar name = args.shift();\n\n\t\tlet attr = '';\n\t\tlet text = '';\n\n\t\tfor (let i = 0; i < args.length; i += 2)\n\t\t{\n\t\t\tif (i+1 < args.length)\n\t\t\t\tattr += ` ${args[i]}=\"${args[i+1]}\"`;\n\t\t\telse\n\t\t\t\ttext = args[i];\n\t\t}\n\n\t\treturn text ? `<${name}${attr}>${text}</${name}>` : `<${name}${attr}/>`;\n\t},\n\n\t/**\n\t**\tJoins the given array expression into a string. The provided string-expr will be used as separator.\n\t**\n\t**\tjoin <string-expr> <array-expr>\n\t*/\n\t'join': function (args)\n\t{\n\t\tif (args[2] && Rin.typeOf(args[2]) == 'array')\n\t\t\treturn args[2].join(args[1]);\n\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tSplits the given expression by the specified string. Returns an array.\n\t**\n\t**\tsplit <string-expr> <expr>\n\t*/\n\t'split': function (args)\n\t{\n\t\tif (args[2] && typeof(args[2]) == \"string\")\n\t\t\treturn args[2].split(args[1]);\n\n\t\treturn [];\n\t},\n\n\t/**\n\t**\tReturns an array with the keys of the given object-expr.\n\t**\n\t**\tkeys <object-expr>\n\t*/\n\t'keys': function (args)\n\t{\n\t\tif (args[1] && typeof(args[1]) == \"object\")\n\t\t\treturn Object.keys(args[1]);\n\n\t\treturn [];\n\t},\n\n\t/**\n\t**\tReturns an array with the values of the given object-expr.\n\t**\n\t**\tvalues <object-expr>\n\t*/\n\t'values': function (args)\n\t{\n\t\tif (args[1] && typeof(args[1]) == \"object\")\n\t\t\treturn Object.values(args[1]);\n\n\t\treturn [];\n\t},\n\n\t/**\n\t**\tConstructs an array obtained by expanding the given template for each of the items in the list-expr, the mandatory varname\n\t**\tparameter (namely 'i') indicates the name of the variable that will contain the data of each item as the list-expr is\n\t**\ttraversed. Extra variables i# and i## (suffix '#' and '##') are introduced to denote the index/key and numeric index\n\t**\tof the current item respectively, note that the later will always have a numeric value.\n\t**\n\t**\teach <varname> <list-expr> <template>\n\t*/\n\t'_each': function (parts, data)\n\t{\n\t\tlet var_name = Template.expand(parts[1], data, 'arg');\n\t\tlet list = Template.expand(parts[2], data, 'arg');\n\n\t\tlet s = [];\n\t\tlet j = 0;\n\n\t\tif (!list) return s;\n\n\t\tfor (let i in list)\n\t\t{\n\t\t\tdata[var_name] = list[i];\n\t\t\tdata[var_name + '##'] = j++;\n\t\t\tdata[var_name + '#'] = i;\n\n\t\t\ts.push(Template.expand(parts[3], data, 'text'));\n\t\t}\n\n\t\tdelete data[var_name];\n\t\tdelete data[var_name + '##'];\n\t\tdelete data[var_name + '#'];\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tExpands the given template for each of the items in the list-expr, the mandatory varname parameter (namely 'i') indicates the name of the variable\n\t**\tthat will contain the data of each item as the list-expr is traversed. Extra variables i# and i## (suffix '#' and '##') are introduced to denote\n\t**\tthe index/key and numeric index of the current item respectively, note that the later will always have a numeric value.\n\t**\n\t**\tDoes not produce any output (returns null).\n\t**\n\t**\tforeach <varname> <list-expr> <template>\n\t*/\n\t'_foreach': function (parts, data)\n\t{\n\t\tlet var_name = Template.expand(parts[1], data, 'arg');\n\t\tlet list = Template.expand(parts[2], data, 'arg');\n\n\t\tlet j = 0;\n\n\t\tif (!list) return null;\n\n\t\tfor (let i in list)\n\t\t{\n\t\t\tdata[var_name] = list[i];\n\t\t\tdata[var_name + '##'] = j++;\n\t\t\tdata[var_name + '#'] = i;\n\n\t\t\tTemplate.expand(parts[3], data, 'text');\n\t\t}\n\n\t\tdelete data[var_name];\n\t\tdelete data[var_name + '##'];\n\t\tdelete data[var_name + '#'];\n\n\t\treturn null;\n\t},\n\n\t/**\n\t**\tReturns the valueA if the expression is true otherwise valueB, this is a short version of the 'if' function with the\n\t**\tdifference that the result is 'obj' instead of text.\n\t**\n\t**\t? <expr> <valueA> [<valueB>]\n\t*/\n\t'_?': function (parts, data)\n\t{\n\t\tif (Template.expand(parts[1], data, 'arg'))\n\t\t\treturn Template.expand(parts[2], data, 'arg');\n\n\t\tif (parts.length > 3)\n\t\t\treturn Template.expand(parts[3], data, 'arg');\n\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tReturns the valueA if it is not null (or empty or zero), otherwise returns valueB.\n\t**\n\t**\t?? <valueA> <valueB>\n\t*/\n\t'_??': function (parts, data)\n\t{\n\t\tlet value = Template.expand(parts[1], data, 'arg');\n\t\tif (value) return value;\n\t\n\t\treturn Template.expand(parts[2], data, 'arg');\n\t},\n\n\t/**\n\t**\tReturns the value if the expression is true, supports 'elif' and 'else' as well. The result of this function is always text.\n\t**\n\t**\tif <expr> <value> [elif <expr> <value>] [else <value>]\n\t*/\n\t'_if': function (parts, data)\n\t{\n\t\tfor (let i = 0; i < parts.length; i += 3)\n\t\t{\n\t\t\tif (Template.expand(parts[i], data, 'arg') == 'else')\n\t\t\t\treturn Template.expand(parts[i+1], data, 'text');\n\n\t\t\tif (Template.expand(parts[i+1], data, 'arg'))\n\t\t\t\treturn Template.expand(parts[i+2], data, 'text');\n\t\t}\n\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tLoads the expression value and attempts to match one case.\n\t**\n\t**\tswitch <expr> <case1> <value1> ... <caseN> <valueN> default <defvalue> \n\t*/\n\t'_switch': function (parts, data)\n\t{\n\t\tlet value = Template.expand(parts[1], data, 'arg');\n\n\t\tfor (let i = 2; i < parts.length; i += 2)\n\t\t{\n\t\t\tlet case_value = Template.expand(parts[i], data, 'arg');\n\t\t\tif (case_value == value || case_value == 'default')\n\t\t\t\treturn Template.expand(parts[i+1], data, 'text');\n\t\t}\n\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tExits the current inner most loop.\n\t**\n\t**\tbreak\n\t*/\n\t'_break': function (parts, data)\n\t{\n\t\tthrow new Error('EXC_BREAK');\n\t},\n\n\t/**\n\t**\tSkips execution and continues the next cycle of the current inner most loop.\n\t**\n\t**\tcontinue\n\t*/\n\t'_continue': function (parts, data)\n\t{\n\t\tthrow new Error('EXC_CONTINUE');\n\t},\n\n\t/**\n\t**\tConstructs an array with the results of repeating the specified template for a number of times.\n\t**\n\t**\trepeat <varname:i> [from <number>] [to <number>] [count <number>] [step <number>] <template>\n\t*/\n\t'_repeat': function (parts, data)\n\t{\n\t\tif (parts.length < 3 || (parts.length & 1) != 1)\n\t\t\treturn '(`repeat`: Wrong number of parameters)';\n\n\t\tlet var_name = Template.value(parts[1], data);\n\t\tlet count = null;\n\t\tlet from = 0, to = null;\n\t\tlet step = null;\n\n\t\tfor (let i = 2; i < parts.length-1; i+=2)\n\t\t{\n\t\t\tlet value = Template.value(parts[i], data);\n\n\t\t\tswitch (value.toLowerCase())\n\t\t\t{\n\t\t\t\tcase 'from':\n\t\t\t\t\tfrom = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'to':\n\t\t\t\t\tto = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'count':\n\t\t\t\t\tcount = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'step':\n\t\t\t\t\tstep = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet tpl = parts[parts.length-1];\n\t\tlet arr = [];\n\n\t\tif (to !== null)\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = from > to ? -1 : 1;\n\n\t\t\tif (step < 0)\n\t\t\t{\n\t\t\t\tfor (let i = from; i >= to; i += step)\n\t\t\t\t{\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\t\tarr.push(Template.value(tpl, data));\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlet name = e.message;\n\t\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (let i = from; i <= to; i += step)\n\t\t\t\t{\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\t\tarr.push(Template.value(tpl, data));\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlet name = e.message;\n\t\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (count !== null)\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = 1;\n\n\t\t\tfor (let i = from; count > 0; count--, i += step)\n\t\t\t{\n\t\t\t\ttry {\n\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\tarr.push(Template.value(tpl, data));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tlet name = e.message;\n\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = 1;\n\t\n\t\t\tfor (let i = from; ; i += step)\n\t\t\t{\n\t\t\t\ttry {\n\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\tarr.push(Template.value(tpl, data));\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\tlet name = e.message;\n\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdelete data[var_name];\n\t\treturn arr;\n\t},\n\n\t/**\n\t**\tRepeats the specified template for a number of times.\n\t**\n\t**\tfor <varname:i> [from <number>] [to <number>] [count <number>] [step <number>] <template>\n\t*/\n\t'_for': function (parts, data)\n\t{\n\t\tif (parts.length < 3 || (parts.length & 1) != 1)\n\t\t\treturn '(`for`: Wrong number of parameters)';\n\n\t\tlet var_name = Template.value(parts[1], data);\n\t\tlet count = null;\n\t\tlet from = 0; to = null;\n\t\tlet step = null;\n\n\t\tfor (let i = 2; i < parts.length-1; i+=2)\n\t\t{\n\t\t\tvalue = Template.value(parts[i], data);\n\n\t\t\tswitch (value.toLowerCase())\n\t\t\t{\n\t\t\t\tcase 'from':\n\t\t\t\t\tfrom = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'to':\n\t\t\t\t\tto = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'count':\n\t\t\t\t\tcount = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'step':\n\t\t\t\t\tstep = parseFloat(Template.value(parts[i+1], data));\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet tpl = parts[parts.length-1];\n\n\t\tif (to !== null)\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = from > to ? -1 : 1;\n\n\t\t\tif (step < 0)\n\t\t\t{\n\t\t\t\tfor (let i = from; i >= to; i += step)\n\t\t\t\t{\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\t\tTemplate.value(tpl, data);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlet name = e.message;\n\t\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (let i = from; i <= to; i += step)\n\t\t\t\t{\n\t\t\t\t\ttry {\n\t\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\t\tTemplate.value(tpl, data);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlet name = e.message;\n\t\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (count !== null)\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = 1;\n\n\t\t\tfor (let i = from; count > 0; count--, i += step)\n\t\t\t{\n\t\t\t\ttry {\n\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\tTemplate.value(tpl, data);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tlet name = e.message;\n\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (step === null)\n\t\t\t\tstep = 1;\n\t\n\t\t\tfor (let i = from; ; i += step)\n\t\t\t{\n\t\t\t\ttry {\n\t\t\t\t\tdata[var_name] = i;\n\t\t\t\t\tTemplate.value(tpl, data);\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\tlet name = e.message;\n\t\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdelete data[var_name];\n\t\treturn null;\n\t},\n\n\t/**\n\t**\tRepeats the specified template infinitely until a \"break\" is found.\n\t**\n\t**\tloop <template>\n\t*/\n\t'_loop': function (parts, data)\n\t{\n\t\tif (parts.length < 2)\n\t\t\treturn '(`loop`: Wrong number of parameters)';\n\n\t\tlet tpl = parts[1];\n\n\t\twhile (true)\n\t\t{\n\t\t\ttry {\n\t\t\t\tTemplate.value(tpl, data);\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\tlet name = e.message;\n\t\t\t\tif (name == 'EXC_BREAK') break;\n\t\t\t\tif (name == 'EXC_CONTINUE') continue;\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t**\tWrites the specified arguments to the console.\n\t**\n\t**\techo <expr> [<expr>...]\n\t*/\n\t'_echo': function (parts, data)\n\t{\n\t\tlet s = '';\n\n\t\tfor (let i = 1; i < parts.length; i++)\n\t\t\ts += Template.expand(parts[i], data, 'arg');\n\n\t\tconsole.log(s);\n\t\treturn '';\n\t},\n\n\t/**\n\t**\tConstructs a list from the given arguments and returns it.\n\t**\n\t**\t# <expr> [<expr>...]\n\t*/\n\t'_#': function (parts, data)\n\t{\n\t\tlet s = [];\n\n\t\tfor (let i = 1; i < parts.length; i++)\n\t\t\ts.push(Template.expand(parts[i], data, 'arg'));\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tConstructs a non-expanded list from the given arguments and returns it.\n\t**\n\t**\t## <expr> [<expr>...]\n\t*/\n\t'_##': function (parts, data)\n\t{\n\t\tlet s = [];\n\n\t\tfor (let i = 1; i < parts.length; i++)\n\t\t\ts.push(parts[i]);\n\n\t\treturn s;\n\t},\n\n\t/**\n\t**\tConstructs an associative array (dictionary) and returns it.\n\t**\n\t**\t& <name>: <expr> [<name>: <expr>...]\n\t**\t& :<name> <expr> [:<name> <expr>...]\n\t*/\n\t'_&': function (parts, data)\n\t{\n\t\treturn Template.getNamedValues (parts, data, 1, true);\n\t},\n\n\t/**\n\t**\tConstructs a non-expanded associative array (dictionary) and returns it.\n\t**\n\t**\t&& <name>: <expr> [<name>: <expr>...]\n\t**\t&& :<name> <expr> [:<name> <expr>...]\n\t*/\n\t'_&&': function (parts, data)\n\t{\n\t\treturn Template.getNamedValues (parts, data, 1, false);\n\t},\n\n\t/**\n\t**\tReturns true if the specified map contains all the specified keys. If it fails the global variable `err` will contain an error message.\n\t**\n\t**\tcontains <expr> <name> [<name>...]\n\t*/\n\t'contains': function (args, parts, data)\n\t{\n\t\tlet value = args[1];\n\n\t\tif (typeof(value) != 'object')\n\t\t{\n\t\t\tdata.err = 'Argument is not a Map';\n\t\t\treturn false;\n\t\t}\n\n\t\tlet s = '';\n\n\t\tfor (let i = 2; i < args.length; i++)\n\t\t{\n\t\t\tif (!(args[i] in value))\n\t\t\t\ts += ', '+args[i];\n\t\t}\n\n\t\tif (s != '')\n\t\t{\n\t\t\tdata.err = s.substr(1);\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t**\tReturns true if the specified map has the specified key. Returns boolean.\n\t**\n\t**\thas <name> <expr>\n\t*/\n\t'has': function (args, parts, data)\n\t{\n\t\tlet value = args[2];\n\n\t\tif (Rin.typeOf(value) != 'object')\n\t\t\treturn false;\n\n\t\treturn args[1] in value;\n\t},\n\n\t/**\n\t**\tReturns a new array/map contaning the transformed values of the array/map (evaluating the template). And just as in 'each', the i# and i## variables be available.\n\t**\n\t**\tmap <varname> <list-expr> <template>\n\t*/\n\t'_map': function (parts, data)\n\t{\n\t\tlet var_name = Template.expand(parts[1], data, 'arg');\n\n\t\tlet list = Template.expand(parts[2], data, 'arg');\n\t\tif (!list) return list;\n\n\t\tlet arrayMode = Rin.typeOf(list) == 'array' ? true : false;\n\t\tlet output = arrayMode ? [] : {};\n\t\tlet j = 0;\n\n\t\tfor (let i in list)\n\t\t{\n\t\t\tdata[var_name] = list[i];\n\t\t\tdata[var_name + '##'] = j++;\n\t\t\tdata[var_name + '#'] = i;\n\n\t\t\tif (arrayMode)\n\t\t\t\toutput.push(Template.expand(parts[3], data, 'arg'));\n\t\t\telse\n\t\t\t\toutput[i] = Template.expand(parts[3], data, 'arg');\n\t\t}\n\n\t\tdelete data[var_name];\n\t\tdelete data[var_name + '##'];\n\t\tdelete data[var_name + '#'];\n\n\t\treturn output;\n\t},\n\n\t/**\n\t**\tReturns a new array/map contaning the elements where the template evaluates to non-zero. Just as in 'each', the i# and i## variables be available.\n\t**\n\t**\tfilter <varname> <list-expr> <template>\n\t*/\n\t'_filter': function (parts, data)\n\t{\n\t\tlet var_name = Template.expand(parts[1], data, 'arg');\n\n\t\tlet list = Template.expand(parts[2], data, 'arg');\n\t\tif (!list) return list;\n\n\t\tlet arrayMode = Rin.typeOf(list) == 'array' ? true : false;\n\t\tlet output = arrayMode ? [] : {};\n\t\tlet j = 0;\n\n\t\tfor (let i in list)\n\t\t{\n\t\t\tdata[var_name] = list[i];\n\t\t\tdata[var_name + '##'] = j++;\n\t\t\tdata[var_name + '#'] = i;\n\n\t\t\tif (~~Template.expand(parts[3], data, 'arg'))\n\t\t\t{\n\t\t\t\tif (arrayMode)\n\t\t\t\t\toutput.push(list[i]);\n\t\t\t\telse\n\t\t\t\t\toutput[i] = list[i];\n\t\t\t}\n\t\t}\n\n\t\tdelete data[var_name];\n\t\tdelete data[var_name + '##'];\n\t\tdelete data[var_name + '#'];\n\n\t\treturn output;\n\t},\n\n\t/**\n\t**\tExpands the specified template string with the given data. The sym_open and sym_close will be '{' and '}' respectively.\n\t**\tIf no data is provided, current data parameter will be used.\n\t**\n\t**\texpand <template> <data>\n\t*/\n\t'expand': function (args, parts, data)\n\t{\n\t\treturn Template.expand (Template.parseTemplate (args[1], '{', '}'), args.length == 3 ? args[2] : data);\n\t},\n\n\t/**\n\t**\tCalls a function described by the given parameter.\n\t**\n\t**\tcall <function> <args...>\n\t*/\n\t'_call': function (parts, data)\n\t{\n\t\tlet ref = Template.expand(parts[1], data, 'varref');\n\n\t\tif (!ref || typeof(ref[0][ref[1]]) != 'function')\n\t\t\tthrow new Error ('Expression is not a function: ' + Template.expand(parts[1], data, 'obj').map(i => i == null ? '.' : i).join(''));\n\n\t\tlet args = [];\n\n\t\tfor (let i = 2; i < parts.length; i++)\n\t\t\targs.push(Template.value(parts[i], data));\n\n\t\treturn ref[0][ref[1]] (...args);\n\t},\n};\n","/*\r\n**\trin/main\r\n**\r\n**\tCopyright (c) 2013-2020, RedStar Technologies, All rights reserved.\r\n**\thttps://www.rsthn.com/\r\n**\r\n**\tTHIS LIBRARY IS PROVIDED BY REDSTAR TECHNOLOGIES \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\r\n**\tINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A \r\n**\tPARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL REDSTAR TECHNOLOGIES BE LIABLE FOR ANY\r\n**\tDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \r\n**\tNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; \r\n**\tOR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, \r\n**\tSTRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\r\n**\tUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n\r\nlet Rin = require('./alpha');\r\n\r\nRin.Rin = Rin;\r\nRin.Class = require('./class');\r\n\r\nRin.Event = require('./event');\r\nRin.EventDispatcher = require('./event-dispatcher');\r\n\r\nRin.Model = require('./model');\r\nRin.ModelList = require('./model-list');\r\n\r\nRin.Schema = require('./schema');\r\nRin.Flattenable = require('./flattenable');\r\nRin.Collection = require('./collection');\r\n\r\nRin.Template = require('./template');\r\n\r\n/* ---- */\r\nObject.assign (module.exports, Rin);\r\n"]}